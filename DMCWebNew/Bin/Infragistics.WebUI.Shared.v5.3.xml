<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics.WebUI.Shared.v5.3</name>
    </assembly>
    <members>
        <member name="T:Infragistics.WebUI.WebControls.Buttons.ButtonAlignments">
            <summary>
            Collection of properties that define allignments of image and text within bounds of button.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAlignments.ToString">
            <summary>String formatted for visual designer.</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAlignments.Reset">
            <summary>
            Reset all properties to thier defaults.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonAlignments.HorizontalAll">
            <summary>
            The horizontal alignment of text and image relative to the bounds of control.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonAlignments.VerticalAll">
            <summary>
            The vertical alignment of text and image relative to the bounds of control.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonAlignments.VerticalImage">
            <summary>
            The vertical alignment of image relative to the bounds of control.
            </summary>
            <remarks>
            <p class="note">Note: that property has no effect if the value of TextImageAlign property is set to ImageTop or ImageBottom.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonAlignments.TextImage">
            <summary>
            The alignment of text and image relative to each other.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance">
            <summary>
            Collection of properties related to appearance of button.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.ShouldSerializeImage">
            <summary>
            Check if Image has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.ResetImage">
            <summary>Clears the Image</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.ShouldSerializeStyle">
            <summary>
            Check if Style has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.ResetStyle">
            <summary>Clears the Style</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.ShouldSerializeInnerBorder">
            <summary>
            Check if InnerBorder has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.ResetInnerBorder">
            <summary>Clears the InnerBorder</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.ToString">
            <summary>String formatted for visual designer.</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.Reset">
            <summary>
            Reset all properties to thier defaults.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.Reset(System.Boolean)">
            <summary>
            Reset properties to thier defaults.
            </summary>
            <param name="image">True: reset image, false: do not reset image</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.CopyFrom(Infragistics.WebUI.WebControls.Buttons.ButtonAppearance)">
            <summary>
            Reset all properties and copy them from the source appearance to this.
            </summary>
            <param name="appearance">Source of new properties</param>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.Owner">
            <summary>
            Reference to the WebButtonBase.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.ContentShift">
            <summary>
            Shift of locations of text and image relative to their positions for button in the normal state.
            </summary>
            <remarks>
            <p class="note">Notes:
            1. That property has no effect for button in normal state (WebButtonBase.Appearance.ContentShift).<br></br>
            2. If the Padding property of button in normal state is set in units others than pixels, then that property has no effect.<br></br>
            3. If the value of that property for button in pressed state is NotSet, then the value of DownRight for pressed button is used.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.Image">
            <summary>
            Image displayed on control.
            </summary>
            <remarks>
            <p class="note">Notes:<br></br>
            1. If Url of image for button in normal state is not set, then image is not rendered for any state of button.<br></br>
            2. Width, Height and AlternateText properties have effect only for Appearance.Image (when button in normal state).<br></br>
            3. The Attributes property is not used for any state of button.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.Url">
            <summary>
            Get/set image url.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.Style">
            <summary>
            Style that is applied to the HTML elements that render control.
            </summary>
            <remarks>
            <p class="note">Notes:<br></br>
            1. The Width and Height properties are not supported.<br></br>
            2. The Cursor, Padding and Margin properties are supported only for button in normal state (WebButtonBase.Appearance).<br></br>
            3. When FileImages in RoundedCorners or UseBrowserDefaults are enabled, then background and border related properties may have no effect.<br></br>
            4. Only following attributes in CustomRules are supported: filter, letter-spacing and writing-mode.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonAppearance.InnerBorder">
            <summary>
            Border that is rendered inside of the main border of control.
            </summary>
            <remarks>
            <p class="note">Note: When FileImages in RoundedCorners or UseBrowserDefaults are enabled, then that property may have no effect.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents">
            <summary>
            Object that keeps the list of names for event function handlers used by JavaScript on client side.
            </summary>
            <remarks>
            <p class="body">Because of the stateless nature of web connections, and the typical delays involved in returning information from the server, WebMenu implements both client-side events and server-side events. 
            You can choose whether you would like to respond to client-side events, which must be implemented through JavaScript.</p>
            The ButtonClientSideEvents object maintains a list of event handlers that are implemented on the client and called in response to events as they occur in the browser.
            Each event is a string that represents JavaScript function name. The named function must be implemented by the developer in JavaScript code.<br></br>
            Every event function handler should have 3 parameters (the <tt>InitializeCalendar</tt> has only 1 parameter).
            The first parameter contains reference to the JavaScript object that represents UltraWebTab.<br></br>
            The second parameter contains reference to the JavaScript object that represents Tab.<br></br>
            The third parameter contains reference to the JavaScript object that represents Event.<br></br>
            Look at the events description for details.
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.#ctor">
            <summary>The default public constructor for the ButtonClientSideEvents object.</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.SetVal(System.String,System.String)">
            <summary>Validates value and sets ViewState for property</summary>
            <param name="id">unique id of property</param>
            <param name="val">value</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.ToString">
            <summary>String formatted for visual designer.</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.Reset">
            <summary>
            Reset all properties to their defaults.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.Copy(Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents)">
            <summary>
            Copies properties from source
            </summary>
            <param name="evts">Source</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.IsDataPossible(Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents)">
            <summary>
            Public shortcut to check if object may have data
            </summary>
            <param name="evts">ButtonClientSideEvents or null</param>
            <returns>True: ViewState.Count > 0</returns>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.Initialize">
            <summary>
            Event fired after control was initialized.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 1 parameter.
            <br></br>1st parameter contains reference to the WebButtonBase object
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.Click">
            <summary>
            Event fired when the control was clicked (by mouse or by action key), but before the click-action occured.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object
            <br></br>2nd parameter contains reference to the ig_EventObject object
            That event can be canceled by <tt>oEvent.cancel=true;</tt>
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.Paint">
            <summary>
            Event fired after the control was repainted.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object.
            <br></br>2nd parameter contains reference to the ig_EventObject object.
            <br></br>That event can be used to customize appearance of button.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.KeyDown">
            <summary>
            Event fired when the control recieves the <tt>keydown</tt> event of a browser.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object
            <br></br>2nd parameter contains reference to the ig_EventObject object
            </p>
            <p class="note">This event can be canceled.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.KeyUp">
            <summary>
            Event fired when the control recieves the <tt>keyup</tt> event of a browser.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object
            <br></br>2nd parameter contains reference to the ig_EventObject object
            </p>
            <p class="note">This event can be canceled.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.Focus">
            <summary>
            Event fired when the control recieves the <tt>focus</tt> event of a browser.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object
            <br></br>2nd parameter contains reference to the ig_EventObject object
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.Blur">
            <summary>
            Event fired when the control recieves the <tt>blur</tt> event of a browser.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object
            <br></br>2nd parameter contains reference to the ig_EventObject object
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.MouseDown">
            <summary>
            Event fired when the control recieves the <tt>mousedown</tt> event of a browser.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object.
            <br></br>2nd parameter contains reference to the ig_EventObject object.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.MouseUp">
            <summary>
            Event fired when the control recieves the <tt>mouseup</tt> event of a browser.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object.
            <br></br>2nd parameter contains reference to the ig_EventObject object.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.MouseMove">
            <summary>
            Event fired when the control recieves the <tt>mousemove</tt> event of a browser.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object.
            <br></br>2nd parameter contains reference to the ig_EventObject object.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.MouseOut">
            <summary>
            Event fired when the mouse was moved out of the bounds of control.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object.
            <br></br>2nd parameter contains reference to the ig_EventObject object.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.ButtonClientSideEvents.MouseOver">
            <summary>
            Event fired when the mouse was moved inside of the bounds of control.
            </summary>
            <remarks>
            <p class="body">Event handler on the client JavaScript may contain 2 parameters.
            <br></br>1st parameter contains reference to the WebButtonBase object.
            <br></br>2nd parameter contains reference to the ig_EventObject object.
            </p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.Buttons.ButtonRenderDown">
            <summary>
            Summary description for ButtonRenderDown.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.RendererBase">
            <summary>
            Base class for html rendering.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.RendererBase.o">
            <summary>
            Output.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.RendererBase.inchar">
            <summary>
            Inchar string.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.RendererBase.newLine">
            <summary>
            New line string.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.VisitObjects(System.Web.UI.HtmlTextWriter)">
            <summary>
            Prepera to render control.
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render control.
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.iw(System.String)">
            <summary></summary>
            <param name="t"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.w(System.String)">
            <summary></summary>
            <param name="t"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.wl(System.String)">
            <summary></summary>
            <param name="t"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.wl">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.wl(System.Text.StringBuilder,System.String)">
            <summary>
            
            </summary>
            <param name="sb"></param>
            <param name="t"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.wl(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="sb"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.iwl(System.String)">
            <summary></summary>
            <param name="t"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.iwl(System.Text.StringBuilder,System.String)">
            <summary>
            
            </summary>
            <param name="sb"></param>
            <param name="t"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.indent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.outdent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.wi">
            <summary>
            
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.wi(System.Text.StringBuilder)">
            <summary>
            
            </summary>
            <param name="sb"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.wf(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="t"></param>
            <param name="p"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.writeStyles(Infragistics.WebUI.Shared.Style,System.String)">
            <summary>
            
            </summary>
            <param name="style"></param>
            <param name="newLine"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.WriteFont(System.Web.UI.WebControls.FontInfo,System.String)">
            <summary>
            
            </summary>
            <param name="font"></param>
            <param name="newLine"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.borderStyleToString(System.Web.UI.WebControls.BorderStyle)">
            <summary>
            Return bs.ToString
            </summary>
            <param name="bs"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.WriteFont(System.Text.StringBuilder,System.Web.UI.WebControls.FontInfo)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="font"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.WriteFontName(System.Text.StringBuilder,System.Web.UI.WebControls.FontInfo,System.String,System.String)">
            <summary>
            Append font name to StringBuilder
            </summary>
            <param name="str">StringBuilder</param>
            <param name="f">FontInfo == Style.Font</param>
            <param name="start">Prefix string. For example: "font-family:" or "font-face:" or " face=\""</param>
            <param name="end">Suffix string. For example: ";" or "\""</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.WriteRect(System.Text.StringBuilder,Infragistics.WebUI.Shared.Rectangle)">
            <summary>
            Append Padding or Margin to StringBuilder for style=\"...\"
            </summary>
            <param name="str">StringBuilder</param>
            <param name="r">Instance of Padding or Margin</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.WriteBorder(System.Text.StringBuilder,System.Web.UI.WebControls.Style,System.String)">
            <summary>
            Append border to StringBuilder
            </summary>
            <param name="str">StringBuilder</param>
            <param name="style">Style</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.WriteBorder(System.Text.StringBuilder,System.Web.UI.WebControls.Style,Infragistics.WebUI.Shared.BorderDetails,System.Boolean)">
            <summary>
            Append border to StringBuilder
            </summary>
            <param name="str">StringBuilder</param>
            <param name="style">Style</param>
            <param name="bd">BorderDetails</param>
            <param name="onePixel">Option to draw border if it is not set</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RendererBase.RenderAttributes(System.Text.StringBuilder,System.Web.UI.WebControls.WebControl)">
            <summary>
            Append to StringBuilder custom and standard attributes of WebControl such as:
            position, top, left, z-index, etc.
            <br>It is used within style=\"...\"</br>
            </summary>
            <param name="str">StringBuilder</param>
            <param name="c">WebControl</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Infragistics.WebUI.Shared.RendererBase.DrawText(System.Web.UI.WebControls.Style,System.String)" -->
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderDown.VisitObjects(System.Web.UI.HtmlTextWriter)">
            <summary></summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp">
            <summary>
            Summary description for ButtonRenderUp.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_BorderWidth">
            <summary> Flag to pass attribute to client for BorderWidth</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_BorderStyle">
            <summary> Flag to pass attribute to client for BorderStyle</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_BorderColor">
            <summary> Flag to pass attribute to client for </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_BackColor">
            <summary> Flag to pass attribute to client for BorderColor</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ForeColor">
            <summary> Flag to pass attribute to client for BackColor</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_BackgroundImage">
            <summary> Flag to pass attribute to client for ForeColor</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_FontName">
            <summary> Flag to pass attribute to client for BackgroundImage</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_FontSize">
            <summary> Flag to pass attribute to client for FontName</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_FontBold">
            <summary> Flag to pass attribute to client for FontSize</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_FontItalic">
            <summary> Flag to pass attribute to client for FontBold</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_FontUnderline">
            <summary> Flag to pass attribute to client for FontItalic</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_FontOverline">
            <summary> Flag to pass attribute to client for FontUnderline</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_FontStrikeout">
            <summary> Flag to pass attribute to client for FontOverline</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_CssClass">
            <summary> Flag to pass attribute to client for FontStrikeout</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ImageUrl">
            <summary> Flag to pass attribute to client for Image</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_Padding">
            <summary> Flag to pass attribute to client for Padding</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_CustomRule1">
            <summary> Flag to pass attribute to client for filter</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_CustomRule2">
            <summary> Flag to pass attribute to client for letter-spacing</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_CustomRule3">
            <summary> Flag to pass attribute to client for writing-mode</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_CustomRule4">
            <summary> Flag to pass attribute to client for </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_InnerBorderWidth">
            <summary> Flag to pass attribute to client for InnerBorderWidth</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_InnerBorderStyle">
            <summary> Flag to pass attribute to client for InnerBorderStyle</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_InnerBorderColor">
            <summary> Flag to pass attribute to client for InnerBorderColor</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_BorderWidth">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_BorderStyle">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_BorderColor">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_BackColor">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_ForeColor">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_BackgroundImage">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_FontName">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_FontSize">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_FontBold">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_FontItalic">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_TextDecoration">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_CustomRule1">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_CustomRule2">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_CustomRule3">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_CustomRule4">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_CssClass">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_ImageUrl">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_Padding">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_InnerBorderWidth">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_InnerBorderStyle">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_InnerBorderColor">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.A_ID_BgColor">
            <summary> Id for attribute that is used on client to identify its name </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.owner">
            <summary>Owner of that renderer</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.controlStyle">
            <summary>ControlStyle merged with Apperance.Style</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.appearance">
            <summary>Current appearance</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.rounded">
            <summary>Image used for rounded corners. The null means rounded corners are used</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.inputWasPainted">
            <summary>Flag if input field was already painted</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.cssClass">
            <summary>Current CssClass</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.state">
            <summary>
            Instant/current state of button.<br></br>
            0-normal, 4-disabled, 5-checked, 9-checked/disabled
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.a_script">
            <summary>Set or attributes to be passed to client</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.fixDesignStyle">
            <summary>Request to fix/validate/build style (border, background) for design-time appearance</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.#ctor(Infragistics.WebUI.WebControls.Buttons.WebButtonBase)">
            <summary>Constructor</summary>
            <param name="owner">Owner of this renderer</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.VisitObjects(System.Web.UI.HtmlTextWriter)">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.DrawFields(System.Text.StringBuilder,System.String,System.String,System.String,System.String)">
            <summary>
            Append to output string text, image and input html elements.
            </summary>
            <param name="str">Output text</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.DrawInput(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Append to output string html that will render invisible button element.
            </summary>
            <param name="str">Output text</param>
            <param name="td">Wrap into td</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.DrawText(System.Text.StringBuilder,System.String,System.Int32,System.String)">
            <summary>
            Append to output string html that will render text.
            </summary>
            <param name="str">Output text</param>
            <param name="txt">Text for button</param>
            <param name="image">Length of image url. If it is negative, then use block, which will put image in new line.</param>
            <param name="padding">Location of space between image and text such as "left", "top", etc.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.DrawImage(System.Text.StringBuilder,System.String)">
            <summary>
            Append to output string html that will render image.
            </summary>
            <param name="str">Output text</param>
            <param name="url">Resolved image url.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.HasAttribute(System.Int32)">
            <summary>
            Check if attribute should be passed to script
            </summary>
            <param name="scriptAttribute">One of the constants that start with A_</param>
            <returns>True: attribute should be rendered.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.WriteScriptAppearance(System.Text.StringBuilder,Infragistics.WebUI.WebControls.Buttons.ButtonAppearance,System.Int32)">
            <summary>
            Write data for script for a particular appearance.
            </summary>
            <param name="str">Output string</param>
            <param name="app">ButtonAppearance</param>
            <param name="i">Index of that appearance (0-9)</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.WriteScriptRoundedTable(System.Text.StringBuilder,Infragistics.WebUI.WebControls.Buttons.ButtonAppearance,Infragistics.WebUI.Shared.Style,System.Int32)">
            <summary>
            Write data for script related to rounded corners built by TDs for a particular appearance.
            </summary>
            <param name="str">Output string</param>
            <param name="app">ButtonAppearance</param>
            <param name="i">Index of that appearance (0-9)</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.WriteRoundedInnerBorder(System.Text.StringBuilder)">
            <summary>
            Write border for rounded corners built by TDs for current appearance.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.WriteRoundedTableStart(System.Text.StringBuilder)">
            <summary>
            Write first part of table that creates rounded corners.
            It may draw 2 TRs with 5 TD and TR with 2 TDs that comes before main TD.
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.ButtonRenderUp.WriteRoundedTableEnd(System.Text.StringBuilder)">
            <summary>
            Write last part of table that creates rounded corners.
            It may draw 2 TRs straight after main TD and 2 TRs with 5 TDs.
            </summary>
            <param name="str"></param>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.Buttons.WebButtonBase">
            <summary>
            Control that renders text editor with optional buttons.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.WebControlBase">
            <summary>
            The WebControlBase, provides basic functionality which can be used by all Infragistics Web Elements.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.IProvideImageDirectoryResolution">
            <summary>
            This interface should be implemented in order for the Infragistics.WebUI.Shared.Image class to resolve urls.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.IProvideImageDirectoryResolution.ResolveImageUrl(System.String)">
            <summary>
            Returns the resolved image path.  This path will be used in the img tag's src attribute, so it must be fully resolved.
            </summary>
            <param name="url">The unresolved url.  This may contain "~/".  The final resolved Url must take into account any values specified by config files.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.IProvideImageDirectoryResolution.ImageDirectory">
            <summary>
            Returns the ImageDirectory path.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.IProvideImageDirectoryResolution.ImageDirectoryResolved">
            <summary>
            Returns the final resolved ImageDirectory path that should be used for an image.
            </summary>
            <remarks>This path returned here should already have resolved "~/", and taken any values from config files if present.</remarks>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.WebControlBase.ImageDirectoryDefault">
            <summary>
            Default value of ImageDirectory
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.#ctor">
            <summary>
            Creates a new WebControlBase.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.#ctor(System.Web.UI.HtmlTextWriterTag)">
            <summary>
            Creates a new WebControlBase, using the tag specified.
            </summary>
            <param name="tag">The HTML Tag which should be used as the outermost element.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.UpdateDesigner(System.String)">
            <summary>Update designer</summary>
            <param name="propName">Name of property that should be updated</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.OnPreRender(System.EventArgs)">
            <summary>Prepares the WebControlBase control for rendering.</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render WebControlBase to html.
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.ToString">
            <summary>
            Returns a string representation this object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.Reset">
            <summary>
            Resets all properties of this class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of this controls</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.SavePreset(System.String,System.String,System.String,Infragistics.WebUI.PresetType)">
            <summary>
            Saves preset to file path.
            </summary>
            <param name="filePath">Path of file</param>
            <param name="name">The name which will be associated with the preset.</param>
            <param name="desc">A string description of the Preset, to be stored along with the Preset data.</param>
            <param name="presetType">The type of properties (Appearance, Behavior, or Both) which should be saved in this preset.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.SavePreset(System.IO.TextWriter,System.String,System.String,Infragistics.WebUI.PresetType)">
            <summary>
            Save preset to text writer. This can be used to save preset to string using StringWriter.
            </summary>
            <param name="xtw">text writer</param>
            <param name="name">A string used to identify the Preset.</param>
            <param name="desc">A string used to describe the Preset.</param>
            <param name="presetType">Determines which type of properties will be saved to this preset - Behavior only, Appearance only, or both.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.SavePreset(System.IO.Stream,System.String,System.String,Infragistics.WebUI.PresetType)">
            <summary>
            Save preset to the stream specified.
            </summary>
            <param name="stream">A reference to a valid stream object used to save the Preset data to.</param>
            <param name="name">A string used to identify the Preset.</param>
            <param name="desc">A string used to describe the Preset.</param>
            <param name="presetType">Determines which type of properties will be saved to this preset - Behavior only, Appearance only, or both.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.LoadPreset(System.String,System.Boolean)">
            <summary>
            Load a preset from a file.
            </summary>
            <param name="filePath">file path</param>
            <param name="reset">True to reset all properties pertaining to the PresetType.</param>
            <remarks>If the Preset was an AppearancePreset, only Appearance type properties will be reset when specifying true for the reset parameter.  Likewise, if the Preset was a Behavior type preset, only Behavior type properties would be reset.  If the Preset was type "Both", Behavior and Appearance properties will be reset, if the reset parameter specified is 'true'.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.LoadPreset(System.IO.Stream,System.Boolean)">
            <summary>
            Load a preset from a stream.
            </summary>
            <param name="xtw">stream object used to read the Preset data from.</param>
            <param name="reset">True to reset all properties pertaining to the PresetType.</param>
            <remarks>If the Preset was an AppearancePreset, only Appearance type properties will be reset when specifying true for the reset parameter.  Likewise, if the Preset was a Behavior type preset, only Behavior type properties would be reset.  If the Preset was type "Both", Behavior and Appearance properties will be reset, if the reset parameter specified is 'true'.
            The stream will not be closed after the preset has been loaded. 
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.LoadPreset(System.IO.TextReader,System.Boolean)">
            <summary>
            Load a preset from a text reader.
            </summary>
            <param name="xtw">An instance of a text reader which can be used to read in Preset data.</param>
            <param name="reset">True to reset all properties pertaining to the PresetType.</param>
            <remarks>If the Preset was an AppearancePreset, only Appearance type properties will be reset when specifying true for the reset parameter.  Likewise, if the Preset was a Behavior type preset, only Behavior type properties would be reset.  If the Preset was type "Both", Behavior and Appearance properties will be reset, if the reset parameter specified is 'true'.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebControlBase.FindControlInPage(System.String)">
            <summary>
            Find child or descendant control in the Page object.
            </summary>
            <param name="id">Value of ID of control to search for</param>
            <returns>The null or Control</returns>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.WebControlBase.ImageDirectory">
            <summary>
            Directory in which the images used for the tabs are stored.
            </summary>
            <remarks>
            <p class="body">The string specified for <b>ImageDirectory</b> will be prefixed onto the image related properties.</p>
            <p class="note">Note that if a particular image's file name starts with a ".", "/" or "\\" character, or contains the ":" character, then that filename will be used as it is without the <b>ImageDirectory</b> prefix.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.WebControlBase.BrowserTarget">
            <summary>
            Type of browser the HTML should be created for.</summary>
            <remarks>
            <p class="body">Permitted values are DownLevel, UpLevel, and Auto. The default value for this property is Auto which will detect the client browser and renders the output deemed appropriate for that browser.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.WebControlBase.IsDesignMode">
            <summary>
            Check if control is in design mode.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.WebControlBase.Client">
            <summary>Information about browser on client machine</summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.IUltraLicensedComponent">
            <summary>
            Interface implemented by Infragistics licensed componenents
            and controls.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.IUltraLicensedComponent.License">
            <summary>
            Returns the component's license object (read-only) 
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.DefDisabledColor">
            <summary>Default value for ForeColor when button in disabled state</summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.appearance">
            <summary>Appearance of control in current state</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.#ctor">
            <summary>Creates WebButtonBase control</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.#ctor(System.Web.UI.HtmlTextWriterTag)">
            <summary>Creates WebButtonBase control</summary>
            <param name="tag">The HTML Tag which should be used as the outermost element.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ShouldSerializeClientSideEvents">
            <summary>
            Check if ClientSideEvents has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ResetClientSideEvents">
            <summary>Clears the ClientSideEvents</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ShouldSerializeAlignments">
            <summary>
            Check if Alignments has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ResetAlignments">
            <summary>Clears the Alignments</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ShouldSerializeAppearance">
            <summary>
            Check if Appearance has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ResetAppearance">
            <summary>Clears the Appearance</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ShouldSerializeFocusAppearance">
            <summary>
            Check if FocusAppearance has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ResetFocusAppearance">
            <summary>Clears the FocusAppearance</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ShouldSerializeHoverAppearance">
            <summary>
            Check if HoverAppearance has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ResetHoverAppearance">
            <summary>Clears the HoverAppearance</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ShouldSerializePressedAppearance">
            <summary>
            Check if PressedAppearance has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ResetPressedAppearance">
            <summary>Clears the PressedAppearance</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ShouldSerializeDisabledAppearance">
            <summary>
            Check if DisabledAppearance has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ResetDisabledAppearance">
            <summary>Clears the DisabledAppearance</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.DoPreset(Infragistics.WebUI.Shared.Style)">
            <summary>
            Configure properties according to preset.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.LoadViewState(System.Object)">
            <summary></summary>
            <param name="savedState"></param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.SaveViewState">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.TrackViewState">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.GetBag">
            <summary>Get reference to the ViewState.</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render calendar to html.
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.OnPreRender(System.EventArgs)">
            <summary>Prepares the WebButtonBase control for rendering.</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.CreateRenderer(System.Boolean)">
            <summary>
            Create renderer.
            </summary>
            <returns>Returns renderer for particular browser.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>Process an event when the form is posted to the server.</summary>
            <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Process post-back data from a server control.</summary>
            <param name="key">The key identifier for the control.</param>
            <param name="names">The collection of all incoming name values.</param>
            <returns>The value of false.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>The OnValueChange method with reference to the selected date is invoked.</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.OnClick(System.Int32)">
            <summary>
            Method that is called when button was clicked.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ImagePath(System.String)">
            <summary>
            Format url of image
            NOTE: img is already checked for (img.Length > 3)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.Dispose">
            <summary>Dispose control.</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.AppearanceAt(System.Int32)">
            <summary>
            Get Appearance to be checked for script attributes.
            </summary>
            <param name="i">0 - Normal, 1 - Hover, 2 - Focus, 3 - Pressed, 4 - Disabled (5,6,7,8,9 - Checked...)</param>
            <returns>ButtonAppearance or null.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ResetAppearances">
            <summary>Reset all objects that define appearance of control.</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.CanHaveBordersAndBackground">
            <summary>Check if button should have borders and background (normal button or checkbox).</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.AllowDefaultShift">
            <summary>
            Allow default shift of content for pressed state.
            </summary>
            <returns>True for normal button.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.IsValidationEnabled">
            <summary>
            Whether validation (trigger MS validators) should be rendered.
            </summary>
            <returns>True when CausesValidation is enabled.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.GetText">
            <summary>Get current/initial text displayed on button</summary>
            <returns>this.owner.Text</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.GetImageUrl">
            <summary>Get name of image url for current/initial image displayed on button</summary>
            <returns>Image for enabled or disabled state</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.GetImageAlt">
            <summary>Get alt text for current/initial image displayed on button</summary>
            <returns>this.owner.ImageAlternateText</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.GetAppearance">
            <summary>
            Get current/initial appearance.
            </summary>
            <returns>Appearance or DisabledAppearance depending on state.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.GetState">
            <summary>
            Get index of current/initial state (0..9).
            </summary>
            <returns>Index of appearance for current state of button.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.GetCss">
            <summary>Get current/initial CssClass</summary>
            <returns>this.owner.Text</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.GetRoundedImage">
            <summary>Get name of image url for init rounded corners image</summary>
            <returns>Image for enabled or disabled state</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.GetRoundedImageAt(System.Int32)">
            <summary>Get name of image url for init rounded corners image</summary>
            <param name="state">State of button</param>
            <returns>Image for enabled or disabled state</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.GetRoundedWidthHeight(System.Boolean,System.Boolean)">
            <summary>
            Get normal or maximum width or height for RoundedImage.
            </summary>
            <param name="width">True: get width, false: get height</param>
            <param name="max">True: get maximum value, false: get normal value</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.IsRoundedTable">
            <summary>
            Whether rounded corners rendered by TDs should be used.
            </summary>
            <returns>True if enabled.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ToHtmlString(System.String)">
            <summary>
            Convert string to html format.
            </summary>
            <param name="s">Text related string</param>
            <returns>String with " characters replaced by the &quot;</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.UnderlineAccess(System.String)">
            <summary>
            Find AccessKey and underline it.
            </summary>
            <returns>String with U tag around AccessKey</returns>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.BackColor">
            <summary>
            The background color.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ForeColor">
            <summary>
            The foreground color.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.BorderColor">
            <summary>
            The border color.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.BorderWidth">
            <summary>
            The border width.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.BorderStyle">
            <summary>
            The border style.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.CssClass">
            <summary>
            The border width.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.Font">
            <summary>
            The font.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.AutoSubmit">
            <summary>Automatically submit form (postback to server) when control was clicked.</summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.UseBrowserDefaults">
            <summary>
            This property allows to automatically adjust appearance related properties to match with appearance of edit-field and drop-down button elements used by a particular browser on the client.
            </summary>
            <remarks>
            <p class="body">Default value is true.</p>
            <p class="note">Note: If any appearance related property is set, then those values are not affected and they have priority over corresponding "automatic" defaults.<br></br>
            At the time the WebButtonBase supports only 3 types of predifined styles:
            <ul>
            <li>Internet Explorer under Windows2000.</li>
            <li>Netscape Navigator regardless of platform.</li>
            <li>Internet Explorer (blue) under WindowsXP.</li>
            </ul>
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ClickOnEnterKey">
            <summary>Trigger the click event when the Enter key was pressed.</summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ClickOnSpaceKey">
            <summary>Trigger the click event when the Space key was pressed.</summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.Text">
            <summary>Text displayed on control.</summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ImageTextSpacing">
            <summary>Alternate text used for image displayed on control.</summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.Focusable">
            <summary>Ability to get input focus.</summary>
            <remarks>
            <p class="body">If value is set to false, then only mouse click will trigger action event.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.UnderlineAccessKey">
            <summary>
            This property allows to automatically underline a character in the Text which matches with AccessKey property.
            </summary>
            <remarks>
            <p class="note">Note: To create underline appearance,- the first character in the text which matches with the AccessKey is rendered with the &lt;u&gt; tags.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.DisplayMode">
            <summary>
            The display mode used to render control in browser.
            </summary>
            <remarks>
            The Inline display allows to render several controls in one line within their container.<br></br>
            The Block display puts control on a separate line.
            <p class="note">Note: If Inline is enabled, then some browsers may fail to render button or ignore Width and Height of control when percent units are used.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.Overflow">
            <summary>
            Value indicating how to manage the content of the control when the content exceeds the height or width of the control.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ClientSideEvents">
            <summary>
            List of client-side events that can be processed by the application.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.Alignments">
            <summary>
            Collection of properties that define allignments of image and text within bounds of button.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.Appearance">
            <summary>
            Collection of properties that define appearance of control in normal state.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.FocusAppearance">
            <summary>
            Collection of properties that define appearance of control when it has focus and mouse is outside of its bounds.
            </summary>
            <remarks>
            <p class="note">Note: When button has focus and mouse is moved over it, then FocusAppearance is merged with HoverAppearance. In case of conflicts, the properties of HoverAppearance has priority over FocusAppearance.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.HoverAppearance">
            <summary>
            Collection of properties that define appearance of control when mouse is moved over it.
            </summary>
            <remarks>
            <p class="note">Note: When button has focus and mouse is moved over it, then FocusAppearance is merged with HoverAppearance. In case of conflicts, the properties of HoverAppearance has priority over FocusAppearance.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.PressedAppearance">
            <summary>
            Collection of properties that define appearance of control when mouse or action-key (Space, Enter, Escape) was pressed.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.DisabledAppearance">
            <summary>
            Collection of properties that define appearance of button in disabled state.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.About">
            <summary>Display the about dialog</summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.Infragistics#WebUI#Shared#IUltraLicensedComponent#License">
            <summary>
            Return the license we cached inside the contructor.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.JavaScriptFileName">
            <summary>Name of the file that contains the external JavaScript for client-side functionality on up-level browsers such as IE5, Netscape6.</summary>
            <remarks>
            <p class="body">Use this property to change the name of the external JavaScript file.</p>
            <p class="note"><b>Note</b> The JavaScript file specified by this property must be the one that is included with the product, or an equivalent customized file that implements the identical functionality.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.JavaScriptFileNameCommon">
            <summary>Name of the file that contains the external JavaScript with common methods for client-side functionality on up-level browsers such as IE5, Netscape6.</summary>
            <remarks>
            <p class="body">Use this property to change the name of the common external JavaScript file.</p>
            <p class="note"><b>Note</b> If your application uses any other instance of any Infragistics Web control, then values of this property in all controls should match. Otherwise, client-side functionality in all controls may fail.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.ImageDirectory">
            <summary>
            Directory in which the images used for the tabs are stored.
            </summary>
            <remarks>
            <p class="body">The string specified for <b>ImageDirectory</b> will be prefixed onto the image related properties.</p>
            <p class="note">Note that if a particular image's file name starts with a ".", "/" or "\\" character, or contains the ":" character, then that filename will be used as it is without the <b>ImageDirectory</b> prefix.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Buttons.WebButtonBase.htmlID">
            <summary>ID used for html elements and client javascript model</summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Util.ClientScript.RegisterCommonScriptResource(System.Web.UI.Page,System.String)">
            <summary>
            Registers the reference to ig_csom.js as a script include for the page specified.
            </summary>
            <param name="p">A reference to a page, which requires an include for ig_csom.js</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Util.ClientScript.ResolveAndRegisterClientScriptInclude(System.String,System.String,System.String,System.String,System.Web.UI.Control,System.String)">
            <summary>
            Given the list of parameters required, this method will determine which resource to use, according to which value has been specified.
            defaultValue and embeddedResourcePath do not both need to be specified, but one of them MUST be a valid string.  
            </summary>
            <param name="defaultValue">This is the controls default value, and can be null for CLR2 assemblies</param>
            <param name="embeddedResourcePath">This is the name used to retreive the js file from the assembly as an embedded resource.  This value can be null for assemblies built pre CLR2.</param>
            <param name="propertyValue">This is the actual value which was specified for the property on the control</param>
            <param name="fileName">This is the js filename only, with out any directories, etc.</param>
            <param name="control">A reference to the control which requires this javascript file inclusion</param>
            <param name="key">The key value to be used when registering this javascript include</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Util.ClientScript.ResolveAndRegisterClientScriptInclude(System.String,System.String,System.String,System.String,System.Web.UI.Control,System.String,System.Type)">
            <summary>
            Given the list of parameters required, this method will determine which resource to use, according to which value has been specified.
            defaultValue and embeddedResourcePath do not both need to be specified, but one of them MUST be a valid string.  
            </summary>
            <param name="defaultValue">This is the controls default value, and can be null for CLR2 assemblies</param>
            <param name="embeddedResourcePath">This is the name used to retreive the js file from the assembly as an embedded resource.  This value can be null for assemblies built pre CLR2.</param>
            <param name="propertyValue">This is the actual value which was specified for the property on the control</param>
            <param name="fileName">This is the js filename only, with out any directories, etc.</param>
            <param name="control">A reference to the control which requires this javascript file inclusion</param>
            <param name="key">The key value to be used when registering this javascript include</param>
            <param name="registerWithType">The Type with which to register the Resource.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Util.ClientScript.ResolveJavaScriptFileName(System.String,System.Web.UI.Control)">
            <summary>
            Checks to see if javaScriptDirectory has been defined in a config file.
            If it has, the directory specified in the config will be used, along
            with the filename parsed out of the originalPath parameter.
            </summary>
            <param name="originalPath">The value of the script file include to be used, if no config setting is present.</param>
            <param name="control">A valid control. This reference is needed for application specific information.</param>
            <returns>The path that should be used for the include script block.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Util.ClientScript.ResolveUrl(System.String,System.Web.UI.Control)">
            <summary>
            The main purpose of this method is to resolve "~" into the applicationPath.
            This method is not needed for ASP.Net 2.0, since there is already a ResolveUrl
            method available at the Control level.
            </summary>
            <param name="url">A relative url, which may or may not contain "~"</param>
            <param name="control">A reference to a valid control - used to get application specific settings.</param>
            <returns>A relative url with no special characters.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Util.ClientScript.ResolveImageDirectory(System.String,System.Web.UI.Control)">
            <summary>
            This method will check to see if the ImageDirectory has been specified through
            a config file.  If it has, it will return the value from the config file.
            Other wise, the value passed in as the originalPath parameter will be returned.
            </summary>
            <param name="originalPath">The value to be used, if no value has been specified through the config file.</param>
            <param name="control">A reference to a valid control - used to get application specific settings.</param>
            <returns>A path to be used as the ImageDirectory</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Util.ClientScript.ResolveCSSDirectory(System.String,System.Web.UI.Control)">
            <summary>
            This method will check to see if the cssDirectory has been specified through
            a config file.  If it has, it will return the value from the config file.
            Otherwise, the value passed in as the originalPath parameter will be returned.
            </summary>
            <param name="originalPath">The value to be used, if no value has been specified through the config file.</param>
            <param name="control">A reference to a valid control - used to get application specific settings.</param>
            <returns>A path to be used as the cssDirectory</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Util.ClientScript.ResolveFormsDirectory(System.String,System.Web.UI.Control)">
            <summary>
            This method will check to see if the formsDirectory has been specified through
            a config file.  If it has, it will return the value from the config file.
            Otherwise, the value passed in as the originalPath parameter will be returned.
            </summary>
            <param name="originalPath">The value to be used, if no value has been specified through the config file.</param>
            <param name="control">A reference to a valid control - used to get application specific settings.</param>
            <returns>A path to be used as the formsDirectory</returns>
        </member>
        <member name="T:Infragistics.WebUI.Shared.AboutDialog">
            <summary>
            About box.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.AboutDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.AboutDialog.#ctor(Infragistics.WebUI.Shared.IUltraLicensedComponent)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.AboutDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.AboutDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.ClientEventsBase">
            <summary>
            Summary description for ClientEventBase.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.WebObjectBase">
            <summary>
               Classes that want to implement viewstate for persisting object properties should derive from the
               WebObjectBase class.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.IStateObject">
            <summary>
            Interface used by sub objects that will be part of a keyed 
            collection (where each item can be accessed either through 
            a zero based index or a string key)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.IStateObject.IsDirty(System.String)">
            <summary>
            Determines if a property with the given id has been set on the object.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.WebUI.Shared.ICollectionObject">
            <summary>
            Interface used by sub objects that will be part of a keyed 
            collection (where each item can be accessed either through 
            a zero based index or a string key)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.ICollectionObject.OnRemovedFromCollection(Infragistics.WebUI.Shared.WebObjectsCollectionBase)">
            <summary>
            Called when this object is being removed from the passed
            in collection. 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.ICollectionObject.OnAddedToCollection(Infragistics.WebUI.Shared.WebObjectsCollectionBase)">
            <summary>
            Called when this object is being added to the passed
            in collection. 
            		/// </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.#ctor">
            <summary>
            Create WebObjectBase 
            </summary>
            <param name="trackViewState"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.#ctor(System.Object)">
            <summary>
            Create WebObjectBase 
            </summary>
            <param name="trackViewState"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.#ctor(System.Object,System.Boolean)">
            <summary>
            Create WebObjectBase with required value of isTrackingViewState
            </summary>
            <param name="trackViewState"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.#ctor(System.Boolean)">
            <summary>
            Create WebObjectBase with required value of isTrackingViewState
            </summary>
            <param name="trackViewState"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.GetSubObject(System.String)">
            <summary>
            Obtains a subobject reference based on the specified id value.  SubObjects are automatically
            managed for ViewState
            </summary>
            <param name="id">The Id of the subobject (defined as a constant in the derived class).</param>
            <returns>The appropriate subobject based on the id.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.SetSubObject(System.String,System.Web.UI.IStateManager)">
            <summary>
            Establishes a subobject in the SubObject hash collection.
            </summary>
            <param name="id">The Id of the subobject (defined as a constant in the derived class).</param>
            <param name="value">An object supporting State management</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.GetValue(System.String,System.Object)">
            <summary>
            Obtains a property value from ViewState based on the string id define as a constant in the derived class.
            </summary>
            <param name="id">The Id of the subobject (defined as a constant in the derived class).</param>
            <param name="def">The property value for the specified Id.</param>
            <returns></returns>
            
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.SetValue(System.String,System.Object)">
            <summary>
            Sets an object value so that it is maintained in viewstate
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.OnPropertyChange(System.String,System.Object)">
            <summary>
            Virtual method that is called whenever a property within the object has been changed.
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.OnRemovedFromCollection(Infragistics.WebUI.Shared.WebObjectsCollectionBase)">
            <summary>
            Called when this object is being removed from the supplied collection.
            </summary>
            <param name="primaryCollection">Collection that this object
            has been removed from.</param>
            <remarks>
            <p class="body">The default implementation of this method
            nulls out the <see cref="!:PrimaryCollection"/> if the supplied
            <i>primaryCollection</i> matches the primary collection of
            this object.</p>
            <p class="body">Inheritors overriding this method should always
            call this base implementation to assure the object has only one
            distinct primary collection.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.OnAddedToCollection(Infragistics.WebUI.Shared.WebObjectsCollectionBase)">
            <summary>
            Called when this object is being added to the supplied collection.
            </summary>
            <param name="primaryCollection">Collection that this object has
            been added to.</param>
            <remarks>
            <p class="body">The default implementation sets the <see cref="!:PrimaryCollection"/>
            reference to the supplied <i>primaryCollection</i> argument, if it hasn't already
            been set (either the base constructor, or a prior call to <see cref="M:Infragistics.WebUI.Shared.WebObjectBase.OnRemovedFromCollection(Infragistics.WebUI.Shared.WebObjectsCollectionBase)"/>
            should have nullified <b>PrimaryCollection</b> from any former collection's claim
            to ownership of this object.)</p>
            <p class="body">Inheritors overriding this method should always
            call this base implementation to assure the object has only one
            distinct primary collection.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.Infragistics#WebUI#Shared#ICollectionObject#OnAddedToCollection(Infragistics.WebUI.Shared.WebObjectsCollectionBase)">
            <summary>
            Called when this <b>IKeyedObject</b> has been added to a new collection.
            </summary>
            <param name="primaryCollection">Collection that this object has
            been added to.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.Infragistics#WebUI#Shared#ICollectionObject#OnRemovedFromCollection(Infragistics.WebUI.Shared.WebObjectsCollectionBase)">
            <summary>
            Called when this <b>IKeyedObject</b> has been removed from an old collection.
            </summary>
            <param name="primaryCollection">Collection that this object has
            been removed from.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.IsDirty">
            <summary>
            Public shortcut to check if object has had data changes
            </summary>
            <param name="ob">Object or null</param>
            <returns>True: ViewState.Count > 0</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.IsDataPossible(Infragistics.WebUI.Shared.WebObjectBase)">
            <summary>
            Public shortcut to check if object has had data changes
            </summary>
            <param name="ob">Object or null</param>
            <returns>True: ViewState.Count > 0</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.Reset">
            <summary>
            Clears the values of all properties within the object and also clears the viewstate for the object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Loads the object with property values stored in viewstate
            </summary>
            <param name="savedState">An object containing the viewstate values for the object.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Saves the object's property values to viewstate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Establishes viewstate tracking for the object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectBase.ToString">
            <summary>String formatted for visual designer.</summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebObjectBase.Owner">
            <summary>
            The primary collection to which this object belongs.
            </summary> 
            <remarks>
            <p class="body">A <see cref="T:Infragistics.WebUI.Shared.KeyedObjectBase"/> can belong to only
            one <see cref="T:Infragistics.WebUI.Shared.KeyedObjectCollectionBase"/> at a time, this is
            their <i>primary collection</i>.  Inheritors subclassing <b>KeyedObjectBase</b>
            may use this property in exposing their own subclass of <b>KeyedObjectCollectionBase</b>
            offering additional capabilities.</p>
            <p class="body">Customarily, the base class implementations of the
            <see cref="M:Infragistics.WebUI.Shared.WebObjectBase.OnAddedToCollection(Infragistics.WebUI.Shared.WebObjectsCollectionBase)"/> and <see cref="M:Infragistics.WebUI.Shared.WebObjectBase.OnRemovedFromCollection(Infragistics.WebUI.Shared.WebObjectsCollectionBase)"/>
            methods are responsible for detaching this object from its old collection,
            and attaching it to its new collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebObjectBase.EnableViewState">
            <summary>
            Turns on ViewState tracking for this WebObject
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebObjectBase.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebObjectBase.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Turns on ViewState tracking for this WebObject
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebObjectBase.IsEmpty">
            <summary>
            Check if object contains only default values.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.CSSParser.Initialize(System.String)">
            <summary>
            Break stylesString into class names and their values
            </summary>
            <param name="stylesString"></param>
        </member>
        <member name="T:Infragistics.WebUI.Shared.DisposableObject">
            <summary>
               The base class Disposable maintains a boolean
               flag that keeps track of whether or not the object has
               been Disposed. It implemnets System.IDisposable and
               calls a virtual 'OnDispose' method to let the derived
               class know when the object has been Disposed.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.DisposableObject.HasSamePublicKey(System.Type)">
            <summary>
            Checks if the test object is from an assembly that is
            signed with the same public key as this assembly
            </summary>
            <returns>True if same</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.DisposableObject.GetPublicKeyToken(System.Type)">
            <summary>
            Returns the public key token of a type's assembly.
            </summary>
            <param name="type">The type whose assembly is checked.</param>
            <returns>The public key token value. Either "null" or a 16 byte string.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.DisposableObject.GetPublicKeyToken(System.Reflection.Assembly)">
            <summary>
            Returns the public key token of an assembly.
            </summary>
            <param name="assembly">The assembly to check.</param>
            <returns>The public key token value. Either "null" or a 16 byte string.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.DisposableObject.CloneSerializableObject(System.Runtime.Serialization.ISerializable)">
            <summary>
            Creates and returns a deep copy clone of the object
            </summary>
            <param name="source">The object to be cloned.</param>
            <returns>The cloned object</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.DisposableObject.Dispose">
            <summary>
            Called to Dispose the object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.DisposableObject.VerifyNotDisposed">
            <summary>
            Will throw an ObjectDisposedException exception
            if the object has been disposed of.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.DisposableObject.OnDispose">
            <summary>
            Called when an active object is Disposed to notify a
            derived class when the object has been Disposed.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.DisposableObject.ConvertValue(System.Object,System.Type)">
            <summary>
            Returns a value converted to the specified type using the InvariantCulture.
            </summary>
            <param name="value">Value to convert</param>
            <param name="destinationType">Type that the value needs to be converted to.</param>
            <returns>If the value can be converted to the specified type, the converted value will be returned. If the value is already of that type or cannot be converted to that type, the <paramref name="value"/> will be returned; otherwise null is returned.</returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.DisposableObject.Disposed">
            <summary>
            Returns true if the object has already been disposed
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.BrowserTarget">
            <summary>
            Type of browser the HTML should be created for.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.BrowserTarget.UpLevel">
            <summary>
            Browser similar to IE5/6 or Netscape6/7
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.BrowserTarget.DownLevel">
            <summary>
            Browser similar to IE3/4 or Netscape4/5
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.BrowserTarget.Auto">
            <summary>
            Browser is detected automatically at run time
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.ButtonTextImageAlign">
            <summary>
            Alignment of text and image relative to each other.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonTextImageAlign.ImageLeft">
            <summary>
            Image is on the left side of text. Horizontal and vertical alignments within the bounds of control are defined by corresponding properties of WebButtonBase.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonTextImageAlign.ImageRight">
            <summary>
            Image is on the right side of text. Horizontal and vertical alignments within the bounds of control are defined by corresponding properties of WebButtonBase.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonTextImageAlign.ImageTop">
            <summary>
            Image is above text. Horizontal and vertical alignments within the bounds of control are defined by corresponding properties of WebButtonBase.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonTextImageAlign.ImageBottom">
            <summary>
            Image is below text. Horizontal and vertical alignments within the bounds of control are defined by corresponding properties of WebButtonBase.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonTextImageAlign.TextRightImageLeft">
            <summary>
            Image is rendered on the left side of control and text is rendered on the right side of control. The HorizontalAlign property of WebButtonBase is ignored.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonTextImageAlign.TextLeftImageRight">
            <summary>
            Image is rendered on the right side of control and text is rendered on the left side of control. The HorizontalAlign property of WebButtonBase is ignored.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.ButtonDisplayMode">
            <summary>
            Display attribute applied to control while rendering it in browser.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonDisplayMode.Inline">
            <summary>
            Ability to render controls in one line within their container. That display mode is similar to the INPUT, SPAN or IMG html elements.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonDisplayMode.Block">
            <summary>
            Render control on a separate line. That display mode is similar to the TABLE or DIV html elements.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.ButtonOverflow">
            <summary>
            Value indicating how to manage the content of the control when the content exceeds the height or width of the control.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonOverflow.Fixed">
            <summary>
            Fixed layout with no word wrap. The fixed layout has effect only when the value of the Width property of control is set.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonOverflow.NoWordWrap">
            <summary>
            All content is visible with no word wrap.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonOverflow.WordWrap">
            <summary>
            All content is visible with word wrap.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.ButtonContentShiftType">
            <summary>
            Shift of locations of text and image relative to their positions for button in the normal state.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonContentShiftType.NotSet">
            <summary>
            Default shifts are used: DownRight for pressed state of button.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonContentShiftType.None">
            <summary>
            Positions of text and image are not changed.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonContentShiftType.Up">
            <summary>
            Positions of text and image are shifted 1 pixel up.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonContentShiftType.Left">
            <summary>
            Positions of text and image are shifted 1 pixel left.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonContentShiftType.UpLeft">
            <summary>
            Positions of text and image are shifted 1 pixel up and 1 pixel left.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonContentShiftType.Down">
            <summary>
            Positions of text and image are shifted 1 pixel down.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonContentShiftType.Right">
            <summary>
            Positions of text and image are shifted 1 pixel right.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonContentShiftType.DownRight">
            <summary>
            Positions of text and image are shifted 1 pixel down and 1 pixel right.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonContentShiftType.UpRight">
            <summary>
            Positions of text and image are shifted 1 pixel up and 1 pixel right.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ButtonContentShiftType.DownLeft">
            <summary>
            Positions of text and image are shifted 1 pixel down and 1 pixel left.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.EventManagerBase">
            <summary>
            Abstract base class for managing a Web Element's events. It maintains an
            enabled flag for each event, as well as a nested 'In Progress' counter.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.EventManagerBase.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <b>EventManagerBase</b>.
            </summary>
            <param name="eventCount">The total number of events to manage.</param>
            <remarks>
            <p class="body">This constructor is provided for subclasses to invoke the
            base class type initialization; instances of <see cref="T:Infragistics.WebUI.Shared.EventManagerBase"/>
            cannot be directly created (the class is abstract).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.EventManagerBase.InProgress(System.Int32)">
            <summary>
            Returns true if the event is in progress (In Progress counter is greater than 0).
            </summary>
            <param name="eventIndex">Index of the event to check.</param>
            <returns>True if event is considered "in progress," false otherwise.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.EventManagerBase.IncrementInProgress(System.Int32)">
            <summary>
            Increments the In Progress counter for a specified event.
            </summary>
            <param name="eventIndex">Zero-based index of the event to increment.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.EventManagerBase.DecrementInProgress(System.Int32)">
            <summary>
            Decrements the In Progress counter for a specified event.
            </summary>
            <param name="eventIndex">Zero-based index of the event to decrement.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.EventManagerBase.IsEnabled(System.Int32)">
            <summary>
            Indicates a specified event is enabled.
            </summary>
            <param name="eventIndex">Index of the event to check.</param>
            <returns>True if enabled, false otherwise.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.EventManagerBase.IsEnabled(System.Int32[])">
            <summary>
            Indicates every event in a set of events is enabled.
            </summary>
            <param name="eventIndexes">An array containing one or more event indexes to check.</param>
            <returns>True if and only if all events within the event set defined by <i>eventIndexes</i> are enabled.
            Conversely, false when any event within the event set is disabled.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.EventManagerBase.SetEnabled(System.Int32,System.Boolean)">
            <summary>
            Sets a specific event to the enabled or disabled state.
            </summary>
            <param name="eventIndex">Index of the event to enable/disable.</param>
            <param name="enabled">True to enable the event, false to disable it.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.EventManagerBase.SetEnabled(System.Int32[],System.Boolean)">
            <summary>
            Sets an array of events to the enabled or disabled state.
            </summary>
            <param name="eventIndexes">Indexes (zero-based) of the events under management on which to change the enabled state.</param>
            <param name="enabled">True to enable these events, false to disable them.</param>
        </member>
        <member name="P:Infragistics.WebUI.Shared.EventManagerBase.AllEventsEnabled">
            <summary>
            Indicates whether all events are enabled.
            </summary>
            <remarks>
            <p class="body">Accessing <b>AllEventsEnabled</b> returns True if and only
            if all events are enabled. Assigning a value to <b>AllEventsEnabled</b> allows
            the developer using the <see cref="T:Infragistics.WebUI.Shared.EventManagerBase"/>-subclass to make all of
            its events enabled (by assigning True) or disabled (by assigning False).</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Design.FilePathUIEditor">
            <summary>
               <para>
                  A custom Type Editor for the tree.  This Editor invokes 
                  a FileDialog for retrieving url paths
               </para>
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Design.FilePathUIEditor.#ctor">
            <summary>
            Default no parameter constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Design.FilePathUIEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
               <para>
                    This is an override from UITypeEditor.  The property grid will call this when
                    it wants to display the editor for the given value.
               </para>
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Design.FilePathUIEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
               <para>
                    This is an override from UITypeEditor.  The editor style indicates what
                    type of editor we are providing:  we can either display a dialog or a
                    drop-down box.  Our editor always shows a drop-down box.
               </para>
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Design.FilePathUIEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
               <para>
                    This is an override from UITypeEditor and indicates if we support 
                    painting a small representation of our value in the property grid.
               </para>
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.Image">
            <summary>
            The Image class is a simple implementation of an HTML img tag.  As opposed to the System.Web.UI.WebControl.Image class, the Infragistics.WebUI.Shared image does not derive from System.Web.UI.WebControls.WebControl.  This provides for a much lighter weight implementation.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.#ctor(Infragistics.WebUI.WebControls.IProvideImageDirectoryResolution)">
            <summary>
            Creates a new Image, and sets the ImageDirectoryResolution provider.
            </summary>
            <remarks>This custructor should be used in order to resolve the Url specified to the proper path.</remarks>
            <param name="imageUrlResolutionProvider">An instance of an object which implements IProvideImageDirectoryResolution</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.#ctor">
            <summary>
            Default constructor, used to create a new Image object which will be unable to resolve urls.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.#ctor(Infragistics.WebUI.WebControls.IProvideImageDirectoryResolution,System.Boolean)">
            <summary>
            Creates a new image, and initializes it to TrackViewState according to the parameter value.
            </summary>
            <remarks>This constructor should be used in order to resolve the Url specified to the proper path.</remarks>
            <param name="isTrackingViewState">A boolean value, indicating that this object should start tracking viewstate on instantiation.</param>
            <param name="imageUrlResolutionProvider">An instance of an object which implements IProvideImageDirectoryResolution</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.ShouldSerializeAlternateText">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.ShouldSerializeUrl">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.ShouldSerializeHeight">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.ShouldSerializeWidth">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.ShouldSerializeAttributes">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.ResetAttributes">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.WriteImage(System.Web.UI.HtmlTextWriter)">
            <summary>
            Uses the properties set on the Image to write an img tag, including all Attributes, and the image's src.
            </summary>
            <param name="writer">The HtmlTextWriter which will be used to write the img tag to an output stream.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Uses the properties set on the Image to write an img tag, including all Attributes, and the image's src.
            </summary>
            <param name="writer">The HtmlTextWriter which will be used to write the img tag to an output stream.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.Reset">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.ShouldSerialize">
            <summary></summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.IsEmpty">
            <summary>Design time support</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.Image.ToString">
            <summary>String formatted for visual designer.</summary>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Image.AlternateText">
            <summary>
            The text which will be shown if the image is unable to display, or for Accessibility.  This property corresponds to the "alt" attribute of an HTML img.
            </summary>
            <remarks>Secion 508 compliant property.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Image.Url">
            <summary>
            The source or "src" of the image.  
            </summary>
            <remarks>This value should be a relative path, and should follow HTML standards.  You may specify "~/" in the beginning of the Url, to specify that the image should be based off of the ApplicationRoot.  The Url specified here will use the ImageDirectory specified in the config file, if present.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Image.Height">
             <summary>
             A Unit which determines the height of the Image.  
             </summary>
            <remarks>If this is not specified, the image will be drawn according to it's native height.  If the height here differs from the native image height, the image will be stretched (or shrunk) to fit.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Image.Width">
             <summary>
             A Unit which determines the Width of the Image.  
             </summary>
            <remarks>If this is not specified, the image will be drawn according to it's native width.  If the width here differs from the native image width, the image will be stretched (or shrunk) to fit.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Image.Attributes">
            <summary>
            Additional attributes which should be rendered inside of this img tag.
            </summary>
            <remarks>Use the Attributes.CssStyle property, to specify Css style properties for the Image.  Use this collection to specify things like "Disabled", "OnClick", etc.</remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.Image.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Design.IProvideDesignTimeHtml">
            <summary>
            Summary description for IProvideDesignTimeHtml.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.IProvidesEmbeddableEditor">
            <summary>
            Interface implemented by embeddable editor controls
            and controls.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.IProvidesEmbeddableEditor.CanEditType(System.Type)">
            <summary>
            Returns true if provided type can be edited by the editor. 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.IProvidesEmbeddableEditor.CanRenderType(System.Type)">
            <summary>
            Returns true if provided type can be rendered by the editor. 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.IProvidesEmbeddableEditor.RenderValue(System.Object)">
            <summary>
            Returns rendered HTML string from provided value. If the value parameter is null current value should be rendered. In case of
            undetermined current value null should be returned.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.IProvidesEmbeddableEditor.EditorID">
            <summary>
            Returns the control's ID (read-only) 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.IProvidesEmbeddableEditor.EditorClientID">
            <summary>
            Returns the control's client-side unique ID (read-only) 
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.ISupportEnhancedTemplates">
            <summary>
            This interface is used for Infragistics Design-Time support, and is not intended to be used directly.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.IKeyedObject">
            <summary>
            Interface used by sub objects that will be part of a keyed 
            collection (where each item can be accessed either through 
            a zero based index or a string key)
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.IKeyedObject.OnRemovedFromCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)">
            <summary>
            Called when this object is being removed from the passed
            in collection. 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.IKeyedObject.OnAddedToCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)">
            <summary>
            Called when this object is being added to the passed
            in collection. 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.IKeyedObject.Key">
            <summary>
            The key to use to access this item in the collection
            </summary>
            
        </member>
        <member name="T:Infragistics.WebUI.Shared.KeyedObjectBase">
            <summary>
            Abstract base class which implements <see cref="T:Infragistics.WebUI.Shared.IKeyedObject"/> for sub objects
            that will be part of a keyed collection (where each item can be accessed
            either through a zero-based index or a string key).
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectBase.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectBase.#ctor(System.String)">
            <summary>
            Constructor that takes a key value
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectBase.ShouldSerializeKey">
            <summary>
            Returns true if the key needs to be serialized (not null).
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectBase.ResetKey">
            <summary>
            Sets the key back to null.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectBase.OnRemovedFromCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)">
            <summary>
            Called when this object is being removed from the supplied collection.
            </summary>
            <param name="primaryCollection">Collection that this object
            has been removed from.</param>
            <remarks>
            <p class="body">The default implementation of this method
            nulls out the <see cref="P:Infragistics.WebUI.Shared.KeyedObjectBase.PrimaryCollection"/> if the supplied
            <i>primaryCollection</i> matches the primary collection of
            this object.</p>
            <p class="body">Inheritors overriding this method should always
            call this base implementation to assure the object has only one
            distinct primary collection.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectBase.OnAddedToCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)">
            <summary>
            Called when this object is being added to the supplied collection.
            </summary>
            <param name="primaryCollection">Collection that this object has
            been added to.</param>
            <remarks>
            <p class="body">The default implementation sets the <see cref="P:Infragistics.WebUI.Shared.KeyedObjectBase.PrimaryCollection"/>
            reference to the supplied <i>primaryCollection</i> argument, if it hasn't already
            been set (either the base constructor, or a prior call to <see cref="M:Infragistics.WebUI.Shared.KeyedObjectBase.OnRemovedFromCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)"/>
            should have nullified <b>PrimaryCollection</b> from any former collection's claim
            to ownership of this object.)</p>
            <p class="body">Inheritors overriding this method should always
            call this base implementation to assure the object has only one
            distinct primary collection.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectBase.Infragistics#WebUI#Shared#IKeyedObject#OnAddedToCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)">
            <summary>
            Called when this <b>IKeyedObject</b> has been added to a new collection.
            </summary>
            <param name="primaryCollection">Collection that this object has
            been added to.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectBase.Infragistics#WebUI#Shared#IKeyedObject#OnRemovedFromCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)">
            <summary>
            Called when this <b>IKeyedObject</b> has been removed from an old collection.
            </summary>
            <param name="primaryCollection">Collection that this object has
            been removed from.</param>
        </member>
        <member name="P:Infragistics.WebUI.Shared.KeyedObjectBase.Key">
            <summary>
            The Key of the item in its collection.
            </summary>
            <remarks>
            <p class="body">Developers should assign key names that are
            unique to the collection an object is stored within, when it
            is necessary to retrieve the object directly using the collection's
            <see cref="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.GetItem(System.String)">GetItem</see>
            method.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.KeyedObjectBase.PrimaryCollection">
            <summary>
            The primary collection to which this object belongs.
            </summary> 
            <remarks>
            <p class="body">A <see cref="T:Infragistics.WebUI.Shared.KeyedObjectBase"/> can belong to only
            one <see cref="T:Infragistics.WebUI.Shared.KeyedObjectCollectionBase"/> at a time, this is
            their <i>primary collection</i>.  Inheritors subclassing <b>KeyedObjectBase</b>
            may use this property in exposing their own subclass of <b>KeyedObjectCollectionBase</b>
            offering additional capabilities.</p>
            <p class="body">Customarily, the base class implementations of the
            <see cref="M:Infragistics.WebUI.Shared.KeyedObjectBase.OnAddedToCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)"/> and <see cref="M:Infragistics.WebUI.Shared.KeyedObjectBase.OnRemovedFromCollection(Infragistics.WebUI.Shared.KeyedObjectCollectionBase)"/>
            methods are responsible for detaching this object from its old collection,
            and attaching it to its new collection.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Shared.KeyedObjectCollectionBase">
            <summary>
            Abstract base class for keyed collections 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.owner">
            <summary>
            Contains a reference to the Grid control that owns this collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.SetOwner(System.Object)">
            <summary>
            Sets the owner of this collection.
            </summary>
            <param name="owner">The collection's owner.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.GetItem(System.Int32)">
            <summary>
            Virtual method that returns the object at the specified index
            </summary>
            <param name="index"></param>
            <returns>The object at the index</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.IndexOf(System.String)">
            <summary>
            Returns the index of the item in the collection that has the
            passed in key or -1 if key not found.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.GetItem(System.String)">
            <summary>
            Returns the object with the passed in key
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.Exists(System.String)">
            <summary>
            Returns true if an object with this key is already
            in the collection. Note, if key is null or a zero
            length string this method returns false
            
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.ValidateKeyDoesNotExist(System.String)">
            <summary>
            Throws an DuplicateNameException if the key already exists
            </summary>
            <param name="key">The key to check</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.ValidateKeyDoesNotExist(System.String,Infragistics.WebUI.Shared.IKeyedObject)">
            <summary>
            Throws an DuplicateNameException if the key already exists
            </summary>
            <param name="key">The key to check</param>
            <param name="ignoreObject">Don't throw an exception if the key matches this item.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.CreateArray">
            <summary>
            Virtual method used by the All 'get' method to
            create the array it returns.
            </summary>
            <returns>The newly created object array</returns>
            <remarks>This is normally overridden in a derived class to allocate a type safe array.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.CopyTo(Infragistics.WebUI.Shared.IKeyedObject[],System.Int32)">
            <summary>
            Copies the items into the array
            </summary>
            <param name="array">Target array</param>
            <param name="index">Index where to begin copying</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.Contains(Infragistics.WebUI.Shared.IKeyedObject)">
            <summary>
            Returns true if the collection contains this item
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.IndexOf(Infragistics.WebUI.Shared.IKeyedObject)">
            <summary>
            Returns the index of the item in the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.InternalAdd(Infragistics.WebUI.Shared.IKeyedObject)">
            <summary>
            Appends the object to the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.InternalInsert(System.Int32,Infragistics.WebUI.Shared.IKeyedObject)">
            <summary>
            Inserts an object into the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.InternalClear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.InternalRemove(Infragistics.WebUI.Shared.IKeyedObject)">
            <summary>
            Removes an item from the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.InternalRemoveAt(System.Int32)">
            <summary>
            Removes an item from the collection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.Owner">
            <summary>
            Provides public access to the owning object of this collection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.IsReadOnly">
            <summary>
            Returns true if the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.IKeyedStateObject">
            <summary>
            Interface used by sub objects that will be part of a keyed 
            collection (where each item can be accessed either through 
            a zero based index or a string key)
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.IKeyedStateObject.Key">
            <summary>
            The key to use to access this item in the collection
            </summary>
            
        </member>
        <member name="T:Infragistics.WebUI.Shared.KeyedWebObjectBase">
            <summary>
            Summary description for KeyedWebObjectBase.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedWebObjectBase.ResetKey">
            <summary>
            Sets the key back to null.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.KeyedWebObjectBase.Key">
            <summary>
            The Key of the item in its collection.
            </summary>
            <remarks>
            <p class="body">Developers should assign key names that are
            unique to the collection an object is stored within, when it
            is necessary to retrieve the object directly using the collection's
            <see cref="M:Infragistics.WebUI.Shared.KeyedObjectCollectionBase.GetItem(System.String)">GetItem</see>
            method.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.KeyedWebObjectBase.Owner">
            <summary>
            The primary collection to which this object belongs.
            </summary> 
            <remarks>
            <p class="body">A <see cref="T:Infragistics.WebUI.Shared.KeyedObjectBase"/> can belong to only
            one <see cref="T:Infragistics.WebUI.Shared.KeyedObjectCollectionBase"/> at a time, this is
            their <i>primary collection</i>.  Inheritors subclassing <b>KeyedObjectBase</b>
            may use this property in exposing their own subclass of <b>KeyedObjectCollectionBase</b>
            offering additional capabilities.</p>
            <p class="body">Customarily, the base class implementations of the
            <see cref="!:OnAddedToCollection"/> and <see cref="!:OnRemovedFromCollection"/>
            methods are responsible for detaching this object from its old collection,
            and attaching it to its new collection.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Shared.KeyedWebObjectsCollectionBase">
            <summary>
            Summary description for KeyedWebObjectsCollectionBase.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.WebObjectsCollectionBase">
            <summary>
            Summary description for Class1
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsCollectionBase.GetItem(System.Int32)">
            <summary>
            Virtual method that returns the object at the specified index
            </summary>
            <param name="index"></param>
            <returns>The object at the index</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsCollectionBase.IndexOf(Infragistics.WebUI.Shared.WebObjectBase)">
            <summary>
            Returns the index of the object in the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsCollectionBase.Contains(Infragistics.WebUI.Shared.WebObjectBase)">
            <summary>
            Returns true if the collection contains this item
            </summary>
            <param name="value">Item to check for.</param>
            <returns>True if item exists, false if item does not exist.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsCollectionBase.InternalAdd(Infragistics.WebUI.Shared.WebObjectBase)">
            <summary>
            Appends the object to the collection
            </summary>
            <param name="obj"><see cref="!:SubObjectBase"/> to add to the collection.</param>
            <returns>Index of the added item.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsCollectionBase.InternalInsert(System.Int32,Infragistics.WebUI.Shared.WebObjectBase)">
            <summary>
            Appends the object to the collection
            </summary>
            <param name="index">Item insertion index.</param>
            <param name="obj"><see cref="!:SubObjectBase"/> to insert into the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsCollectionBase.InternalClear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsCollectionBase.InternalRemove(Infragistics.WebUI.Shared.WebObjectBase)">
            <summary>
            Removes an item from the collection
            </summary>
            <param name="value">Item to remove</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsCollectionBase.InternalRemove(System.Int32)">
            <summary>
            Removes an item from the collection
            </summary>
            <param name="index">Index of the item to remove.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsCollectionBase.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the items from the collection into the array.
            </summary>
            <param name="array">The array to receive the itemd</param>
            <param name="index">The index to start with</param>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebObjectsCollectionBase.Owner">
            <summary>
            The parent owner to which this object belongs.
            </summary> 
            <remarks>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebObjectsCollectionBase.IsReadOnly">
            <summary>
            Returns true if the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebObjectsCollectionBase.EnableViewState">
            <summary>
            Turns on ViewState tracking for this WebObject
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedWebObjectsCollectionBase.IndexOf(System.String)">
            <summary>
            Returns the index of the item in the collection that has the
            passed in key or -1 if no item is found.
            </summary>
            <param name="key">The key of the item whose index is to be returned.</param>
            <returns>The index of the item in the collection that has the passed in key, or -1 if no item is found.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedWebObjectsCollectionBase.GetItem(System.String)">
            <summary>
            Returns the object with the passed in key
            </summary>
            <param name="key">The key of the item whose index is to be returned.</param>
            <returns>The index of the item in the collection that has the passed in key, or -1 if no item is found.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedWebObjectsCollectionBase.ContainsKey(System.String)">
            <summary>
            Returns true if the collection contains an item with this key value
            </summary>
            <param name="value">Item to check for.</param>
            <returns>True if item exists, false if item does not exist.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedWebObjectsEnumeratorBase.#ctor(Infragistics.WebUI.Shared.KeyedWebObjectsCollectionBase)">
            <summary>
            Constructor 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedWebObjectsEnumeratorBase.MoveNext">
            <summary>
            Implements the IEnumerator.MoveNext method 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.KeyedWebObjectsEnumeratorBase.Reset">
            <summary>
            Implements the IEnumerator.Reset method. Sets the position to
            before the first item in the collection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.KeyedWebObjectsEnumeratorBase.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current object being enumerated
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.UltraLicenseAttributeBase">
            <summary>
            The abstract base class for our license attribues
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UltraLicenseAttributeBase.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="componentName">The name of the component that will be displayed in the about dialog.</param>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraLicenseAttributeBase.ComponentName">
            <summary>
            Returns the display name of the component (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraLicenseAttributeBase.LicensedWithProducts">
            <summary>
            Returns an array of UltraProductInfoBase objects.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.NetAdvantageLicenseAttribute.LicensedWithProducts">
            <summary>
            Return the list of products that this control can be licensed with
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Util.Serialization.Serializer.Exclusions">
            <summary>
            A string array which specifies the Property names that should be ignored from this layout.  This list will be used when Serializing or DeSerializing.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Util.Serialization.PresetInfo">
            <summary>
            File and other info about a particular preset.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Util.Serialization.PresetInfo.FileInfo">
            <summary>
            Returns a FileInfo object for the preset file.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Util.Serialization.PresetInfo.Description">
            <summary>
            Returns the description of the preset.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Util.Serialization.PresetInfo.Name">
            <summary>
            Returns the name of the preset.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Util.Serialization.PresetInfo.PresetType">
            <summary>
            Returns the type of the preset.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.PresetType">
            <summary>
            Describes the type of properties used when saving/loading presets	
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.PresetType.Appearance">
            <summary>
            Properties that relate primarily to appearances
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.PresetType.Behavior">
            <summary>
            Properties that relate primarily to behavior
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.PresetType.All">
            <summary>
            All preset properties
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.PrimitiveTypeConverter">
            <summary>
            The type converter for properties that use the <see cref="!:Infragistics.WebUI.Design.PrimitiveTypeUITypeEditor">PrimitiveTypeUITypeEditor</see>.
            </summary>
            <seealso cref="!:Infragistics.WebUI.Design.PrimitiveTypeUITypeEditor"/>
            <seealso cref="T:System.ComponentModel.TypeConverter"/>
        </member>
        <member name="M:Infragistics.WebUI.Shared.PrimitiveTypeConverter.ConvertValue(System.Object,System.Type,System.Globalization.CultureInfo)">
            <summary>
            Returns a value converted to the specified type using the supplied culture.
            </summary>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Type that the value needs to be converted to.</param>
            <param name="culture">The culture to use for the conversion.  If null then the curent culture is used.</param>
            <returns>If the value can be converted to the specified type, the converted value will be returned. If the value is already of that type or cannot be converted to that type, the <paramref name="value"/> will be returned; otherwise null is returned.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <i>destinationType</i> is null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.PrimitiveTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines if the object can convert from the source type
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.PrimitiveTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.PrimitiveTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the value.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.PrimitiveTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the value parameter to. </param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the <i>destinationType</i> is null (Nothing in Visual Basic .NET).</exception>
        </member>
        <member name="T:Infragistics.WebUI.Shared.PrimitiveTypeDefault">
            <summary>
            Struct encapsulating a warehouse of the default values for primitive
            type properties utilizing the <see cref="T:Infragistics.WebUI.Shared.PrimitiveTypeConverter"/>.
            </summary>
            <remarks>
            <p class="body"><b>PrimitiveTypeDefault</b> is a <b>ValueType</b> to
            avoid the overhead associated with instantiating a new instance of a
            class.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.PrimitiveTypeDefault.#ctor(System.Type)">
            <summary>
            Constructs a default value for a given primitive type.
            </summary>
            <param name="type">
            The type of the primitive whose default value is required.
            </param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.PrimitiveTypeDefault.Equals(System.Object)">
            <summary>
            Compares this <b>PrimitiveTypeDefault</b> with another.
            </summary>
            <param name="obj">An instance of <b>PrimitiveTypeDefault</b> to be compared to.</param>
            <remarks>
            <p class="body">Two <see cref="T:Infragistics.WebUI.Shared.PrimitiveTypeDefault"/> instances are equal if they
            have the same <see cref="P:Infragistics.WebUI.Shared.PrimitiveTypeDefault.Type"/>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.PrimitiveTypeDefault.GetHashCode">
            <summary>
            Calculates the hash code for this <b>PrimitiveTypeDefault</b> instance.
            </summary>
            <returns>Hash code of the <see cref="P:Infragistics.WebUI.Shared.PrimitiveTypeDefault.Type"/> which distinguishes this
            <b>PrimitiveTypeDefault</b> instance.</returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.PrimitiveTypeDefault.Value">
            <summary>
            Returns the default value for the primitive type.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.PrimitiveTypeDefault.Type">
            <summary>
            Returns the primitive type associated with this default value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RankedStyle.GetHashCode">
            <summary>
            Returns the hash code for the current <see cref="T:Infragistics.WebUI.Shared.RankedStyle"/>.
            </summary>
            <returns>An integer that is unlikely to be the same as other
            instances of <b>RankedStyle</b>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RankedStyle.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Infragistics.WebUI.Shared.RankedStyle"/> is value-equivalent to the current <b>RankedStyle</b>.
            </summary>
            <param name="other">Another instance of <b>RankedStyle</b> to compare this instance to; if <i>other</i> is not
            of the same type as the current instance then they are not equal.</param>
            <returns>True if <i>other</i> represents a <b>RankedStyle</b> that is equivalent to this one; otherwise False.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.RankedStyle.CompareTo(System.Object)">
            <summary>
            Compares the current <see cref="T:Infragistics.WebUI.Shared.RankedStyle"/> to another <b>RankedStyle</b> instance.
            </summary>
            <param name="other">Another object reference to compare against, this should be of the
            <b>RankedStyle</b> type otherwise the result of the comparison is undefined.</param>
            <returns>Returns less than 0 if <i>other</i> is greater than the current <b>RankedStyle</b>,
            returns 0 if <i>other</i> and the current <b>RankedStyle</b> are equivalent, or returns
            greater than 0 if <i>other</i> is less than the current <b>RankedStyle</b>.</returns>
        </member>
        <member name="T:Infragistics.WebUI.Shared.RenderPropsBase">
            <summary></summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.SmartClientEvents">
            <summary>
            </summary>
            
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartClientEvents.GetClientEventNameList">
            <summary>
            Get list of property names which should be used on client.
            Items in that list should match with ids used to get/set properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartClientEvents.IsAutoPostBack(System.Int32)">
            <summary>
            Return true if client event with particular name should be posted to server.
            </summary>
            <param name="indexOfClientEventName">Index of event how it appears in the GetClientEventNameList()</param>
            <returns>True to post back. Default implementation returns false.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartClientEvents.Render(System.Text.StringBuilder)">
            <summary>
            Render events to client.
            </summary>
            <param name="buffer">Buffer to append.</param>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.SmartClientEvents.IsEmpty">
            <summary>
            Check if object contains only default values.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.SmartDate">
            <summary>
            Date type with support for empty (or null) date values.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.#ctor">
            <summary>
            Creates a new <b>SmartDate</b> instance.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.#ctor(System.DateTime)">
            <summary>
            Creates a new <b>SmartDate</b> instance.
            </summary>
            <param name="date">The initial value of the object.</param>
            <remarks>
            <p class="body">An empty date will be treated as the smallest possible date based on <b>DateTime</b>.MinValue.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.#ctor(System.String)">
            <summary>
            Creates a new <b>SmartDate</b> instance.
            </summary>
            <remarks>
            <p class="body">An empty date will be treated as the smallest possible date based on <b>DateTime</b>.MinValue.</p>
            </remarks>
            <param name="date">The initial value of the object (as text).</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <b>SmartDate</b> instance.
            </summary>
            <param name="year">The year (1 through 9999).</param>
            <param name="month">The month (1 through 12).</param>
            <param name="day">The day number (1 through the number of days in <i>month</i>).</param>
            <remarks>
            <p class="body">Provided for compatibility with <b>DateTime</b>. By default, <see cref="!:EmptyIsMin"/>
            is True for <b>SmartDate</b> instances created using this constructor.</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when one or more of the parameters
            has a value outside of its domain of acceptable values.</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <b>SmartDate</b> instance.
            </summary>
            <param name="year">The year (1 through 9999).</param>
            <param name="month">The month (1 through 12).</param>
            <param name="day">The day number (1 through the number of days in <i>month</i>).</param>
            <param name="hour">The hour (0 through 23, values 12 through 23 are post-meridian).</param>
            <param name="minute">The minute (0 through 59).</param>
            <param name="second">The second (0 through 59).</param>
            <remarks>
            <p class="body">Provided for compatibility with <b>DateTime</b>. By default, <see cref="!:EmptyIsMin"/>
            is True for <b>SmartDate</b> instances created using this constructor.</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when one or more of the parameters
            has a value outside of its domain of acceptable values.</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ToString">
            <summary>
            Returns a text representation of the <see cref="T:Infragistics.WebUI.Shared.SmartDate"/> value
            formatted according to the <see cref="P:Infragistics.WebUI.Shared.SmartDate.FormatString"/>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ToString(System.String)">
            <summary>
            Returns a text representation of the <see cref="T:Infragistics.WebUI.Shared.SmartDate"/> value
            formatted according to a user-supplied format string argument.
            </summary>
            <param name="format">.NET format string supplied by the application that
            overrides the <see cref="P:Infragistics.WebUI.Shared.SmartDate.FormatString"/> property of this <b>SmartDate</b>
            instance.</param>
            <returns>A formatted representation of the <b>SmartDate</b> instance using
            the specified <i>format</i> string.</returns>
        </member>
        <member name="F:Infragistics.WebUI.Shared.SmartDate.Empty">
            <summary>
            Static property representing the empty <b>SmartDate</b>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.StringToDate(System.String)">
            <summary>
            Converts a text date representation into a Date value.
            </summary>
            <param name="date">The text representation of the date.</param>
            <remarks>
            <p class="body">An empty string is assumed to represent an empty date. An empty date
            is returned as the smallest possible date (<b>DateTime</b>.MinValue).</p>
            </remarks>
            <returns>A <b>DateTime</b> value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.DateToString(System.DateTime,System.String)">
            <summary>
            Converts a date value into a text representation.
            </summary>
            <param name="date">The date value to convert into a text format.</param>
            <param name="formatString">The .NET format string for representing <i>date</i> as text.</param>
            <remarks>
            <p class="body">The date value is considered empty when it is the smallest
            possible date (<b>DateTime</b>.MinValue).  If the date is empty, this method
            returns an empty string. Otherwise it returns the date value formatted based
            on the <i>formatString</i> parameter.</p>
            </remarks>
            <returns>Text representation of the <b>DateTime</b> value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_GreaterThan(Infragistics.WebUI.Shared.SmartDate,Infragistics.WebUI.Shared.SmartDate)">
            <summary>
            Compares whether a <b>SmartDate</b> instance is greater than another <b>SmartDate</b> instance.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_GreaterThan(Infragistics.WebUI.Shared.SmartDate,System.DateTime)">
            <summary>
            Compares whether a <b>SmartDate</b> instance is greater than a <b>DateTime</b> value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_GreaterThanOrEqual(Infragistics.WebUI.Shared.SmartDate,Infragistics.WebUI.Shared.SmartDate)">
            <summary>
            Compares whether a <b>SmartDate</b> instance is greater than or equal to another <b>SmartDate</b> instance.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_GreaterThanOrEqual(Infragistics.WebUI.Shared.SmartDate,System.DateTime)">
            <summary>
            Compares whether a <b>SmartDate</b> instance is greater than or equal to a <b>DateTime</b> value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_LessThan(Infragistics.WebUI.Shared.SmartDate,Infragistics.WebUI.Shared.SmartDate)">
            <summary>
            Compares whether a <b>SmartDate</b> instance is less than another <b>SmartDate</b> instance.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_LessThan(Infragistics.WebUI.Shared.SmartDate,System.DateTime)">
            <summary>
            Compares whether a <b>SmartDate</b> instance is less than a <b>DateTime</b> value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_LessThanOrEqual(Infragistics.WebUI.Shared.SmartDate,Infragistics.WebUI.Shared.SmartDate)">
            <summary>
            Compares whether a <b>SmartDate</b> instance is less than or equal to another <b>SmartDate</b> instance.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_LessThanOrEqual(Infragistics.WebUI.Shared.SmartDate,System.DateTime)">
            <summary>
            Compares whether a <b>SmartDate</b> instance is less than or equal to a <b>DateTime</b> value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_Equality(Infragistics.WebUI.Shared.SmartDate,Infragistics.WebUI.Shared.SmartDate)">
            <summary>
            Compares whether two <b>SmartDate</b> instances are equivalent.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_Equality(Infragistics.WebUI.Shared.SmartDate,System.DateTime)">
            <summary>
            Compares whether a <b>SmartDate</b> instance is equivalent to a <b>DateTime</b> value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_Inequality(Infragistics.WebUI.Shared.SmartDate,Infragistics.WebUI.Shared.SmartDate)">
            <summary>
            Compares whether two <b>SmartDate</b> instances are not equivalent.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_Inequality(Infragistics.WebUI.Shared.SmartDate,System.DateTime)">
            <summary>
            Compares whether a <b>SmartDate</b> instance is not equivalent to a <b>DateTime</b> value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_Addition(Infragistics.WebUI.Shared.SmartDate,System.TimeSpan)">
            <summary>
            Adds a <b>TimeSpan</b> value to a <b>SmartDate</b> instance.
            </summary>
            <param name="d">The <b>SmartDate</b> instance being advanced</param>
            <param name="t">The time interval being added to <i>d</i>.</param>
            <returns>A <b>SmartDate</b> increased by time interval, <i>t</i>, unless <i>d</i>
            was originally empty.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_Subtraction(Infragistics.WebUI.Shared.SmartDate,System.TimeSpan)">
            <summary>
            Deducts a <b>TimeSpan</b> value from a <b>SmartDate</b> instance.
            </summary>
            <param name="d">The <b>SmartDate</b> instance being reduced</param>
            <param name="t">The time interval being deducted from <i>d</i>.</param>
            <returns>A <b>SmartDate</b> decreased by time interval, <i>t</i>, unless <i>d</i>
            was originally empty.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.op_Subtraction(Infragistics.WebUI.Shared.SmartDate,Infragistics.WebUI.Shared.SmartDate)">
            <summary>
            Deducts a <b>SmartDate</b> representing a starting moment-in-time from
            a <b>SmartDate</b> representing an ending moment-in-time to obtain the
            difference as a <b>TimeSpan</b>.
            </summary>
            <param name="endDateTime">The ending moment-in-time (subtrahend).  This should
            be a larger date value than the <i>startDateTime</i> or the resulting <b>TimeSpan</b>
            comes out negative.</param>
            <param name="startDateTime">The starting moment-in-time (minuend).</param>
            <returns>The difference, as a <b>TimeSpan</b>, between the <i>endDateTime</i>
            and the <i>startDateTime</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.Equals(System.Object)">
            <summary>
            Overridden to compare two dates based on value equivalency.
            </summary>
            <param name="o">Another object reference, if this is of type <b>SmartDate</b> or
            <b>DateTime</b> then the test of equality is based on value equivalency instead of
            reference equality.</param>
            <returns>True if the current <b>SmartDate</b> and <i>o</i> represent the same date
            value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.GetHashCode">
            <summary>
            Overridden to calculate this <b>SmartDate</b>'s hash code based on its
            underlying date value.
            </summary>
            <returns>The hash code based on its date value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.CompareTo(Infragistics.WebUI.Shared.SmartDate)">
            <summary>
            Compares one <b>SmartDate</b> instance to another <b>SmartDate</b> instance.
            </summary>
            <param name="date">The date to which we are being compared.</param>
            <remarks>
            <p class="body">This method works the same as the <b>CompareTo</b> method
            on the <b>DateTime</b> structure, with the difference that it understands
            the concept of empty date values as implemented by <b>SmartDate</b>.</p>
            </remarks>
            <returns>A value less than 0 if the comparison <i>date</i> is less than the
            current <b>SmartDate</b> instance.  A value of 0 if <i>date</i> is equal
            to the current <b>SmartDate</b> instance.  A value greater than 0 if the
            comparison <i>date</i> is greater than the current <b>SmartDate</b> instance.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.System#IComparable#CompareTo(System.Object)">
            <summary>
            Compares the current <b>SmartDate</b> instance to another object's value.
            </summary>
            <param name="value">An object that the current instance is being compared against.</param>
            <remarks>
            <p class="body">Only supported when <i>value</i> is also of type <b>SmartDate</b>.</p>
            </remarks>
            <returns>A value less than 0 if the comparison <i>date</i> is less than the
            current <b>SmartDate</b> instance.  A value of 0 if <i>date</i> is equal
            to the current <b>SmartDate</b> instance.  A value greater than 0 if the
            comparison <i>date</i> is greater than the current <b>SmartDate</b> instance.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.Add(System.TimeSpan)">
            <summary>
            Adds a <b>TimeSpan</b> onto the current <b>SmartDate</b> instance if it is non-empty.
            </summary>
            <param name="span">The amount of time to be added onto the current date.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.Subtract(System.TimeSpan)">
            <summary>
            Subtracts a <b>TimeSpan</b> from the current <b>SmartDate</b> instance if it is non-empty.
            </summary>
            <param name="span">The amount of time to be subtracted from the current date.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.Subtract(System.DateTime)">
            <summary>
            Subtracts a starting <b>DateTime</b> from the current <b>SmartDate</b> to get a
            <b>TimeSpan</b> that represents the time interval between the two date values.
            </summary>
            <param name="date">The starting date (or the ending date, if you reverse the sign
            of the resulting <b>TimeSpan</b>).</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.Subtract(Infragistics.WebUI.Shared.SmartDate)">
            <summary>
            Subtracts a starting <b>SmartDate</b> from the current <b>SmartDate</b> to get a
            <b>TimeSpan</b> that represents the time interval between the two date values.
            </summary>
            <param name="date">The starting date (or the ending date, if you reverse the sign
            of the resulting <b>TimeSpan</b>).</param>
        </member>
        <member name="F:Infragistics.WebUI.Shared.SmartDate.MaxValue">
            <summary>
            Represents the largest possible value of a <b>SmartDate</b>.
            </summary>
            <remarks>
            <p class="body">This field represents the empty value of the <b>SmartDate</b>
            if <see cref="!:EmptyIsMin"/> is false.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.Shared.SmartDate.MinValue">
            <summary>
            Represents the smallest possible value of a <b>SmartDate</b>.
            </summary>
            <remarks>
            <p class="body">This field represents the empty value of the <b>SmartDate</b>
            if <see cref="!:EmptyIsMin"/> is true.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.AddDays(System.Double)">
            <summary>
            Adds the requested number of days to the current <b>DateTime</b> value.
            </summary>
            <param name="value">Signed number of whole and/or fractional days to be added.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the current instance
            of <b>SmartDate</b> was initially empty.</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.AddHours(System.Double)">
            <summary>
            Adds the requested number of hours to the current <b>DateTime</b> value.
            </summary>
            <param name="value">Signed number of whole and/or fractional hours to be added.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the current instance
            of <b>SmartDate</b> was initially empty.</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.AddMilliseconds(System.Double)">
            <summary>
            Adds the requested number of milliseconds to the current <b>DateTime</b> value.
            </summary>
            <param name="value">Signed number of whole and fractional milliseconds.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the current instance
            of <b>SmartDate</b> was initially empty.</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.AddMinutes(System.Double)">
            <summary>
            Adds the requested number of minutes to the current <b>DateTime</b> value.
            </summary>
            <param name="value">Signed number of whole and fractional minutes.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the current instance
            of <b>SmartDate</b> was initially empty.</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.AddMonths(System.Int32)">
            <summary>
            Adds the requested number of months to the current <b>DateTime</b> value.
            </summary>
            <param name="value">Signed number of whole months.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the current instance
            of <b>SmartDate</b> was initially empty.</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.AddSeconds(System.Double)">
            <summary>
            Adds the requested number of seconds to the current <b>DateTime</b> value.
            </summary>
            <param name="value">Signed number of whole and fractional seconds.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the current instance
            of <b>SmartDate</b> was initially empty.</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.AddTicks(System.Int64)">
            <summary>
            Adds the requested number of clock ticks to the current <b>DateTime</b> value.
            </summary>
            <param name="ticks">Signed number of 100 nanosecond ticks.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the resulting
            <b>SmartDate</b> has a <b>DateTime</b> exceeding <b>MaxValue</b> or below
            <b>MinValue</b> following the operation.</exception>
            <exception cref="T:System.NullReferenceException">Thrown when the current instance
            of <b>SmartDate</b> was initially empty.</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.AddYears(System.Int32)">
            <summary>
            Adds the requested number of calendar years to the current <b>DateTime</b> value.
            </summary>
            <param name="years">Signed number of whole calendar years.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the current instance
            of <b>SmartDate</b> was initially empty.</exception>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.DaysInMonth(System.Int32,System.Int32)">
            <summary>
            Calculates the number of days in the specified month and year.
            </summary>
            <param name="year">Year affects the calculation only when it is
            a leap year, and the <i>month</i> is February.</param>
            <param name="month">Month.</param>
            <returns>The number of days in <i>month</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.IsLeapYear(System.Int32)">
            <summary>
            Indicates whether the specified year is a leap year.
            </summary>
            <param name="year">Year.</param>
            <returns>True if <i>year</i> is a leap year, False in all
            other circumstances.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.Parse(System.String)">
            <summary>
            Converts the requested string representation of a date and time into
            its <b>SmartDate</b> equivalent.
            </summary>
            <param name="s">A string representation of the date and time to convert to.</param>
            <returns>A <b>SmartDate</b> equivalent to the date and time described
            by <i>s</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the requested string representation of a date and time into
            its <b>SmartDate</b> equivalent using the user-provided, culture-specific
            format information.
            </summary>
            <param name="s">A string representation of the date and time to convert to.</param>
            <param name="provider">Custom formatting provider supplied by the application.</param>
            <returns>A <b>SmartDate</b> equivalent to the date and time described
            by <i>s</i> using formatting information provided by <i>provider</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
            <summary>
            Converts the requested string representation of a date and time into
            its <b>SmartDate</b> equivalent using the user-provided, culture-specific
            format information and style.
            </summary>
            <param name="s">A string representation of the date and time to convert to.</param>
            <param name="provider">Custom formatting provider supplied by the application.</param>
            <param name="styles">Custom formatting styles supplied by the application.</param>
            <returns>A <b>SmartDate</b> equivalent to the date and time described
            by <i>s</i> using formatting information provided by <i>provider</i> and the
            formatting styles identified by the <i>styles</i> argument.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ParseExact(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the requested string representation of a date and time into
            its <b>SmartDate</b> equivalent adhering to a specific format.
            </summary>
            <param name="s">A string representation of the date and time to convert to.</param>
            <param name="format">A specific format string to adhere to.</param>
            <param name="provider">Custom formatting provider supplied by the application.</param>
            <returns>A <b>SmartDate</b> equivalent to the date and time described
            by <i>s</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
            <summary>
            Converts the requested string representation of a date and time into
            its <b>SmartDate</b> equivalent using the user-provided, culture-specific
            format information and style while adhering to a specific format.
            </summary>
            <param name="s">A string representation of the date and time to convert to.</param>
            <param name="format">A specific format string to adhere to.</param>
            <param name="provider">Custom formatting provider supplied by the application.</param>
            <param name="styles">Custom formatting styles supplied by the application.</param>
            <returns>A <b>SmartDate</b> equivalent to the date and time described
            by <i>s</i> using formatting information provided by <i>provider</i> and the
            formatting styles identified by the <i>styles</i> argument.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
            <summary>
            Converts the requested string representation of a date and time into
            its <b>SmartDate</b> equivalent using the user-provided, culture-specific
            format information and style while adhering to any of several specific formats.
            </summary>
            <param name="s">A string representation of the date and time to convert to.</param>
            <param name="formats">An array of format strings to adhere to.</param>
            <param name="provider">Custom formatting provider supplied by the application.</param>
            <param name="styles">Custom formatting styles supplied by the application.</param>
            <returns>A <b>SmartDate</b> equivalent to the date and time described
            by <i>s</i> using formatting information provided by <i>provider</i> and the
            formatting styles identified by the <i>styles</i> argument.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ToLocalTime">
            <summary>
            Gets the current <b>DateTime</b> value represented in local time based on the timezone
            configured on the machine.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ToLongDateString">
            <summary>
            Gets the long date string representation equivalent to the current <b>DateTime</b> value.
            </summary>
            <remarks>
            <p class="body">Provided for compatibility purposes with existing <b>DateTime</b>
            application code. The preferred solution is to use the <see cref="P:Infragistics.WebUI.Shared.SmartDate.FormatString"/>
            and <see cref="P:Infragistics.WebUI.Shared.SmartDate.Text"/> properties of the <b>SmartDate</b> instance directly.</p>
            <p class="note">When the <b>SmartDate</b> is empty this method returns the
            empty string for compatibility with the approach described above.</p>
            </remarks>
            <returns>A string representation of the current <b>DateTime</b> value encapsulated
            by this <b>SmartDate</b> instance that should contain the full name of the day
            of the week, month, and the year based on applicable regional settings.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ToLongTimeString">
            <summary>
            Gets the long time string representation equivalent to the current <b>DateTime</b> value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ToShortDateString">
            <summary>
            Gets the shortened date string representation equivalent to the current <b>DateTime</b> value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ToShortTimeString">
            <summary>
            Gets the shortened time string representation equivalent to the current <b>DateTime</b> value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDate.ToUniversalTime">
            <summary>
            Gets the current <b>DateTime</b> value as represented in coordinated universal time (UTC).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.FormatString">
            <summary>
            Gets or sets the format string used to format a date value when it is returned as text.
            </summary>
            <remarks>
            <p class="body">The format string should follow the requirements for standard .NET string formatting statements.</p>
            </remarks>
            <value>A format string.</value>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Text">
            <summary>
            Gets or sets the date value.
            </summary>
            <remarks>
            <p class="body">
            This property can be used to set the date value by passing a
            text representation of the date. Any text date representation
            that can be parsed by the .NET runtime is valid.
            </p><p class="body">
            When the date value is retrieved via this property, the text
            is formatted by using the format specified by the 
            <see cref="P:Infragistics.WebUI.Shared.SmartDate.FormatString"/> property. The  default is the "d",
            or short date, format.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Value">
            <summary>
            Gets or sets the date value as a .NET <b>DateTime</b>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.DBValue">
            <summary>
            Gets a database-friendly version of the date value.
            </summary>
            <remarks>
            <p class="body">
            If the <b>SmartDate</b> contains an empty date, this returns DBNull. Otherwise
            the actual date value is returned as type <b>DateTime</b>.
            </p><p class="body">
            This property is very useful when setting parameter values for an
            ADO.NET <b>Command</b> object, since it automatically stores null
            values into the database for empty date values.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty">
            <summary>
            Indicates whether this <b>SmartDate</b> instance contains an empty date.
            </summary>
            <value>True if the date is empty, otherwise false.</value>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Date">
            <summary>
            Gets the day constituent for the current <b>DateTime</b> value absent any time information
            (<i>i.e.</i>, as if at Midnight).
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Day">
            <summary>
            Gets the day of the month (between 1 and 31) for the current <b>DateTime</b> value.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <b>Day</b> is set
            to a value outside of the legal range of days for the current <see cref="P:Infragistics.WebUI.Shared.SmartDate.Month"/>.
            </exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.DayOfWeek">
            <summary>
            Gets the day of the week represented for the current <b>DateTime</b> value.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.DayOfYear">
            <summary>
            Gets the calendar day of the year (between 1 and 366) for the current <b>DateTime</b> value.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Hour">
            <summary>
            Gets the hour constituent (between 0 and 23) of the current <b>DateTime</b> value.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <b>Hour</b> is set
            to a value outside of its legal range (between 0 and 23).</exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Millisecond">
            <summary>
            Gets the milliseconds constituent (between 0 and 999) of the current <b>DateTime</b> value.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <b>Millisecond</b> is set
            to a value outside of its legal range (between 0 and 999).</exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Minute">
            <summary>
            Gets the minutes constituent (between 0 and 59) of the current <b>DateTime</b> value.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <b>Minute</b> is set
            to a value outside of its legal range (between 0 and 59).</exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Month">
            <summary>
            Gets the months constituent (between 1 and 12) of the current <b>DateTime</b> value.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <b>Month</b> is set
            to a value outside of its legal range (between 1 and 12), or when <b>Month</b> is set to
            a value causing <b>Day</b> to be greater than the maximum number of days in the new given
            month.</exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Now">
            <summary>
            Gets the <b>SmartDate</b> that is in the current local date and approximate
            time (to the best possible resolution of the system timer) on this machine.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Second">
            <summary>
            Gets the seconds constituent (between 0 and 59) of the current <b>DateTime</b> value.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <b>Second</b> is set
            to a value outside of its legal range (between 0 and 59).</exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Ticks">
            <summary>
            Gets the count of clock ticks representing the current <b>DateTime</b> value.
            </summary>
            <remarks>
            <p class="body">A clock tick is a time-interval of 100-nanoseconds.</p>
            <p class="body">When <see cref="!:EmptyIsMin"/> is true, the count of clock ticks
            must be greater than <see cref="F:Infragistics.WebUI.Shared.SmartDate.MinValue"/> and less than or equal to <see cref="F:Infragistics.WebUI.Shared.SmartDate.MaxValue"/>.
            When <b>EmptyIsMin</b> is false, the count of clock ticks must be greater than or
            equal to <b>MinValue</b> and less than <b>MaxValue</b>. The value returned by
            <b>Ticks</b> must necessarily exclude the <b>DateTime</b> sentinel value used
            to denote an empty <b>SmartDate</b> instance.</p>
            </remarks>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b>
            is empty (determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True) and the count of
            clock ticks matches the sentinel value used to determine emptiness.</exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.TimeOfDay">
            <summary>
            Gets the time-of-day constituent for the current <b>DateTime</b> value.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Today">
            <summary>
            Gets the <b>SmartDate</b> that is in the current date on this machine at
            midnight, local time.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.UtcNow">
            <summary>
            Gets the <b>SmartDate</b> that is in the current universal time (UTC) date
            and approximate time (to the best possible resolution of the system timer) on
            this machine.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SmartDate.Year">
            <summary>
            Gets the year constituent (between 1 and 9999) of the current <b>DateTime</b> value.
            </summary>
            <exception cref="T:System.NullReferenceException">Thrown when the <b>SmartDate</b> is
            empty (as determined by when <see cref="P:Infragistics.WebUI.Shared.SmartDate.IsEmpty"/> returns True).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <b>Year</b> is set
            to a value outside of its legal range (between 1 and 9999) or when <b>Year</b> is set
            to a non-leap year and the <b>Month</b>/<b>Day</b> was set to the leap day (February 29)
            causing it to go outside of its legal range.</exception>
        </member>
        <member name="T:Infragistics.WebUI.Shared.SmartDateDateOnlyConverter">
            <summary>
            Summary description for TagConverter.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.SmartDateConverter">
            <summary>
            Summary description for TagConverter.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDateConverter.TypeOfFormat">
            <summary>
            That method should return one of the protected constants of this class
            </summary>
            <returns>Full</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDateConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDateConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="destType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDateConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDateConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDateDateOnlyConverter.TypeOfFormat">
            <summary>
            That method should return one of the protected constants of this class
            </summary>
            <returns>Date</returns>
        </member>
        <member name="T:Infragistics.WebUI.Shared.SmartDateTimeOnlyConverter">
            <summary>
            Summary description for TagConverter.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartDateTimeOnlyConverter.TypeOfFormat">
            <summary>
            That method should return one of the protected constants of this class
            </summary>
            <returns>Time</returns>
        </member>
        <member name="T:Infragistics.WebUI.Shared.SmartHtmlTextWriter">
            <summary>
            A wrapper for the <b>HtmlTextWriter</b> class of the ASP.NET
            Framework.
            </summary>
            <remarks>
            <p class="body">Intercepts calls made to <b>HtmlTextWriter</b>
            for filtering and diagnostic purposes.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.Shared.SmartHtmlTextWriter.designStyles">
            <summary>
            Copies of style attributes added by AddStyleAttribute(string,string) at design time.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="tabString"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.AddAttribute(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="fEncode"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="fEncode"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="key"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.AddStyleAttribute(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="key"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
            <summary>
            
            </summary>
            <param name="attrKey"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.FilterAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.GetTagKey(System.String)">
            <summary>
            
            </summary>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
            <summary>
            
            </summary>
            <param name="tagKey"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.RenderAfterContent">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.RenderAfterTag">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.RenderBeforeContent">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.RenderBeforeTag">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
            <summary>
            
            </summary>
            <param name="tagKey"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.RenderBeginTag(System.String)">
            <summary>
            
            </summary>
            <param name="tagName"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.RenderEndTag">
            <summary>
            
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.Char)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.Char[])">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.Int64)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="firstArg"></param>
            <param name="secondArg"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteAttribute(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="fEncode"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteBeginTag(System.String)">
            <summary>
            
            </summary>
            <param name="tagName"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteEndTag(System.String)">
            <summary>
            
            </summary>
            <param name="tagName"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteFullBeginTag(System.String)">
            <summary>
            
            </summary>
            <param name="tagName"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine">
            <summary>
            
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.Char)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.Char[])">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.Double)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.Int64)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.Single)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="arg"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="firstArg"></param>
            <param name="secondArg"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SmartHtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="fEncode"></param>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.SmartRenderer">
            <summary>
            Foundation class enhancing the rendering features of derived classes
            by providing common services and acting as a connection point to the
            rest of the framework.
            </summary>
            <remarks>
            <p class="body">Web elements extending <see cref="T:Infragistics.WebUI.WebControls.SmartWebControl"/>
            should subclass <b>SmartRenderer</b> to customize their rendering,
            in particular the style definitions produced, start-up JavaScript
            and client-side properties array. The <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.CreateRenderer">CreateRenderer</see>
            method will create a custom subclass of <b>SmartRenderer</b> for
            your element and use it during the pre-render and render stages of
            the page lifecycle.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.SmartRenderer.ClientAttributeOfID">
            <summary>
            This is the name of attribute which is used by java-script to find reference to control.
            Value of that attribute should contain the ClientID.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartRenderer.RenderClientProperties(System.Text.StringBuilder)">
            <summary>
            Responsible for rendering javascript array of all client properties, events, objects and collections
            Calls helper methods to render each in turn.
            That method is called to render parameter for initialization (constructor) java-script function.
            </summary>
            <param name="buffer">To modify default logic, an extended class should Append its initialization variables to buffer.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartRenderer.RenderPropertyStyle(Infragistics.WebUI.Shared.Style,System.Text.StringBuilder)">
            <summary>
            Append Style-property to buffer without quates and commas. The written value consists from public, internal and autogenerated Css names.
            This method is used by calendar renderer.
            </summary>
            <param name="style"></param>
            <param name="buffer"></param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartRenderer.GetStructuralStyle(System.String)">
            <summary>
            This method supports the internal Infragistics infrastructure and is not
            intended for use from application code.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.SmartWebControl">
            <summary>
            Base class for advanced web elements requiring view state, licensing, rendering and postback management.
            </summary>
            <remarks>
            <p class="body">The <b>SmartWebControl</b> serves as a base class for advanced web elements that
            require view state, licensing, rendering and postback management. This functionality is built into
            this base class and requires no additional coding beyond conformance to a set of simple practices.</p>
            <p class="body">Features supported by <b>SmartWebControl</b>:</p>
            <list type="number">
            	<item>
            		<term>View State</term>
            		<description>Manages persistence for the control's simple and compound (sub object) properties.</description>
            	</item>
            	<item>
            		<term>Licensing</term>
            		<descriptions>Ensures license validation and conformance.</descriptions>
            	</item>
            	<item>
            		<term>Script and Style blocks</term>
            		<description>Produces the properties array, and the inclusion of Javascript and CSS style blocks.</description>
            	</item>
            	<item>
            		<term>Client State</term>
            		<description>Conveys state changes from the client-side to the server object model by handling postback processing.</description>
            	</item>
            </list>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.SmartWebControl.ClientEventsId">
            <summary>
            ID-value that must be used to create SmartClientSideEvent
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.SmartWebControl.defaultJavaScriptFileNameCommon">
            <summary>
            Default location and script filename for the shared Javascript file providing
            base services to all client-side <b>SmartWebControl</b> elements.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.SmartWebControl.defaultJavaScriptFileName">
            <summary>
            Default location and script filename for the main Javascript file supporting
            this <b>SmartWebControl</b>'s client-side processing.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.SmartWebControl.defaultStyleSheetFileName">
            <summary>
            Default location and css filename for the style definitions used by default for this control
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.SmartWebControl.clientScriptRegisterKey">
            <summary>
            Used to register the Javascript file.
            </summary>
            <remarks>
            <p class="body">Set to a common name if more than one control needs to register the same javascript file.  Otherwise, leave empty.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.SmartWebControl.renderer">
            <summary>
            The <b>SmartRenderer</b> responsible for providing rendering services.
            </summary>
            <remarks>
            <p class="body">Inheritors should override the <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.CreateRenderer"/> method to
            return a <see cref="T:Infragistics.WebUI.WebControls.SmartRenderer"/> subclass suitable for producing the view they
            require.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.#ctor">
            <summary>
            Creates an empty instance of the <b>SmartWebControl</b>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.ShouldSerializeStyleSheetFileName">
            <summary>
            Indicates whether the <b>StyleSheetFileName</b> property has changed
            from it's default value and requires serialization.
            </summary>
            <returns>True if the <b>StyleSheetFileName</b> has changed from it's default
            value; otherwise False.</returns>
            <remarks>
            <p class="body">This method supports the design-time serialization of ASP.NET
            pages.</p>
            <p class="body">Inheritors overriding <see cref="P:Infragistics.WebUI.WebControls.SmartWebControl.StyleSheetFileName"/> to
            change it's default value should replace the base implementation of this
            method with their own overridden implementation that compares the value
            of <b>StyleSheetFileName</b> to their own default value.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.ResetStyleSheetFileName">
            <summary>
            Reset StyleSheetFileName.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.Infragistics#WebUI#Design#IGetClientSideEvents#GetClientSideControlName">
            <summary>
            Gets the programmatic, locally-unique identifier of this <b>SmartWebControl</b>
            for client-side event support.
            </summary>
            <returns>The programmatic, locally-unique identifier. This identifier is
            unqualified by any naming containers encapsulating this element.</returns>
            <remarks>
            <p class="body">This identifier is used to name client-side event handlers
            at design-time.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.Infragistics#WebUI#Design#IGetClientSideEvents#GetClientSideEvents">
            <summary>
            Gets the client-side events property subobject at design-time.
            </summary>
            <returns>The property subobject for this <b>SmartWebControl</b>.</returns>
            <remarks>
            <p class="body">The client-side events property subobject is a compound
            object with one property per client-side event that can have an event
            handler specified for it at design-time. See the <see cref="T:Infragistics.WebUI.WebControls.SmartClientEvents"/>
            class for more information.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.ShouldSerializeClientEvents">
            <summary>
            Check if ClientEvents has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.ResetClientEvents">
            <summary>Clears the ClientEvents</summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.ShouldSerializeJavaScriptFileName">
            <summary>
            Indicates whether the <b>JavaScriptFileName</b> property has changed
            from it's default value and requires serialization.
            </summary>
            <returns>True if the <b>JavaScriptFileName</b> has changed from it's default
            value; otherwise False.</returns>
            <remarks>
            <p class="body">This method supports the design-time serialization of ASP.NET
            pages. Inheritors should not need to call this method directly. If a subclass
            overrides <b>JavaScriptFileName</b> to alter it's default value, then it should
            override <b>ShouldSerializeJavaScriptFileName</b> with it's own implementation.</p>
            <seealso cref="P:Infragistics.WebUI.WebControls.SmartWebControl.JavaScriptFileName"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.ResetJavaScriptFileName">
            <summary>
            Resets the <b>JavaScriptFileName</b> property to it's default value.
            </summary>
            <remarks>
            <p class="body">This method is made available only so that the
            design-time environment can display a Reset option on the context
            menu within the Properties Editor. It is not intended for use by
            application developers.</p>
            <p class="body">Inheritors overriding this method to reset the
            <see cref="P:Infragistics.WebUI.WebControls.SmartWebControl.JavaScriptFileName"/> property to it's default value
            must call the base implementation <i>before</i> they assign the
            default value to the property.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.ShouldSerializeJavaScriptFileNameCommon">
            <summary>
            Indicates whether the <b>JavaScriptFileNameCommon</b> property has changed
            from it's default value and requires serialization.
            </summary>
            <returns>True if the <b>JavaScriptFileNameCommon</b> has changed from it's default
            value; otherwise False.</returns>
            <remarks>
            <p class="body">This method supports the design-time serialization of ASP.NET
            pages. Inheritors should not need to call this method directly. If a subclass
            overrides <b>JavaScriptFileNameCommon</b> to alter it's default value, then it should
            override <b>ShouldSerializeJavaScriptFileNameCommon</b> with it's own implementation.</p>
            <seealso cref="P:Infragistics.WebUI.WebControls.SmartWebControl.JavaScriptFileNameCommon"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.ResetJavaScriptFileNameCommon">
            <summary>
            Resets the <b>JavaScriptFileNameCommon</b> property to it's default value.
            </summary>
            <remarks>
            <p class="body">This method is made available only so that the
            design-time environment can display a Reset option on the context
            menu within the Properties Editor. It is not intended for use by
            application developers.</p>
            <p class="body">Inheritors overriding this method to reset the
            <see cref="P:Infragistics.WebUI.WebControls.SmartWebControl.JavaScriptFileNameCommon"/> property to it's default value
            must call the base implementation <i>before</i> they assign the
            default value to the property.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.EnsureRenderer">
            <summary>
            Ensures an associated <b>SmartRenderer</b> exists before rendering occurs.
            </summary>
            <remarks>
            <p class="body">If a <see cref="T:Infragistics.WebUI.WebControls.SmartRenderer"/> did not exist before calling
            this method, it is guaranteed to have been initialized after this call.  The
            existence of a <b>SmartRenderer</b> usually isn't required until the <b>PreRender</b>
            event, which is when <b>SmartWebControl</b> ensures it.</p>
            <seealso cref="M:Infragistics.WebUI.WebControls.SmartWebControl.CreateRenderer"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.CreateRenderer">
            <summary>
            Initializes a <b>SmartRenderer</b> associated with this element that assumes
            responsibility for creating a scene graph of user-interface elements and
            rendering (serializing) them to the end user.
            </summary>
            <remarks>
            <p class="body">Inheriting controls must implement this factory method to
            associate their own custom <see cref="T:Infragistics.WebUI.WebControls.SmartRenderer"/> subclass with the
            <b>SmartWebControl</b>.  A derived <b>SmartRenderer</b> must know how
            to compose an appropriate scene graph for their presentation. Making
            this factory method abstract allows independent <b>SmartRenderer</b>
            subclasses to be used by the internal framework during rendering.</p>
            <p class="body">The <b>CreateRenderer</b> method will be invoked by the
            base <b>SmartWebControl</b> class when it first calls <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.EnsureRenderer"/>,
            which is usually (but not necessarily) during the <b>PreRender</b> stage
            of the page lifecycle.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders content from this <b>SmartWebControl</b> to the supplied <b>HtmlTextWriter</b>.
            </summary>
            <param name="writer">An <b>HtmlTextWriter</b> furnished by the ASP.NET Framework (or
            parent control) to which HTML content is written.</param>
            <remarks>
            <p class="body">Inheritors overriding the <b>Render</b> method must call the base
            class implementation of it in order for the <b>SmartWebControl</b> to properly
            dispatch the chore of rendering content to the <b>SmartRenderer</b> created by
            the subclass' override of <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.CreateRenderer"/>.</p>
            <p class="body">Containers that aggregate the <b>SmartWebControl</b> as one of
            their child elements may use interception to filter the HTML content produced
            by the <b>SmartRenderer</b>. This involves substituting a second <b>HtmlTextWriter</b>
            that drains into a <b>StringWriter</b> for the one supplied by the ASP.NET
            Framework. After rendering of its child elements is complete, the container
            may serialize the <b>StringWriter</b> and perform post-render text processing,
            substitution and replacement on the resulting text before forwarding it to the
            original <b>HtmlTextWriter</b> from the ASP.NET Framework.</p>
            <p class="note">Interception incurs overhead when it creates the intermediate
            string representation, and therefore may not be an applicable technique in web
            solutions where large amounts of content are rendered.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.GetValue(System.String,System.Object)">
            <summary>
            Obtains a property value from <b>ViewState</b> based on the string identifier defined as a constant
            in this or a derived class.
            </summary>
            <param name="id">An identifier of the sub-object that was defined as a constant string field in this
            or the derived class.</param>
            <param name="def">Default property value if nothing exists in <b>ViewState</b>.</param>
            <returns>The property value retrieved from <b>ViewState</b>, which may be identical to <i>def</i>.</returns>
            <remarks>
            <p class="body">When multiple reference <b>Types</b> are stored in the <b>ViewState</b> of a
            <b>SmartWebControl</b> it may be necessary to typecast the argument passed in for the <i>def</i>
            parameter.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.GetValue(System.String,System.String)">
            <summary>
            Obtains a property value from <b>ViewState</b> based on the string identifier defined as a constant
            in this or a derived class.
            </summary>
            <param name="id">An identifier of the sub-object that was defined as a constant string field in this
            or the derived class.</param>
            <param name="def">Default property value if nothing exists in <b>ViewState</b>.</param>
            <returns>The property value retrieved from <b>ViewState</b>, which may be identical to <i>def</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.GetValue(System.String,System.Int32)">
            <summary>
            Obtains a property value from <b>ViewState</b> based on the string identifier defined as a constant
            in this or a derived class.
            </summary>
            <param name="id">An identifier of the sub-object that was defined as a constant string field in this
            or the derived class.</param>
            <param name="def">Default property value if nothing exists in <b>ViewState</b>.</param>
            <returns>The property value retrieved from <b>ViewState</b>, which may be identical to <i>def</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.GetValue(System.String,System.Double)">
            <summary>
            Obtains a property value from <b>ViewState</b> based on the string identifier defined as a constant
            in this or a derived class.
            </summary>
            <param name="id">An identifier of the sub-object that was defined as a constant string field in this
            or the derived class.</param>
            <param name="def">Default property value if nothing exists in <b>ViewState</b>.</param>
            <returns>The property value retrieved from <b>ViewState</b>, which may be identical to <i>def</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.GetValue(System.String,System.Boolean)">
            <summary>
            Obtains a property value from <b>ViewState</b> based on the string identifier defined as a constant
            in this or a derived class.
            </summary>
            <param name="id">An identifier of the sub-object that was defined as a constant string field in this
            or the derived class.</param>
            <param name="def">Default property value if nothing exists in <b>ViewState</b>.</param>
            <returns>The property value retrieved from <b>ViewState</b>, which may be identical to <i>def</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.GetValue(System.String,System.DateTime)">
            <summary>
            Obtains a property value from <b>ViewState</b> based on the string identifier defined as a constant
            in this or a derived class.
            </summary>
            <param name="id">An identifier of the sub-object that was defined as a constant string field in this
            or the derived class.</param>
            <param name="def">Default property value if nothing exists in <b>ViewState</b>.</param>
            <returns>The property value retrieved from <b>ViewState</b>, which may be identical to <i>def</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.GetValue(System.String,Infragistics.WebUI.Shared.SmartDate)">
            <summary>
            Obtains a property value from <b>ViewState</b> based on the string identifier defined as a constant
            in this or a derived class.
            </summary>
            <param name="id">An identifier of the sub-object that was defined as a constant string field in this
            or the derived class.</param>
            <param name="def">Default property value if nothing exists in <b>ViewState</b>.</param>
            <returns>The property value retrieved from <b>ViewState</b>, which may be identical to <i>def</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.GetValue(System.String,System.Drawing.Color)">
            <summary>
            Obtains a property value from <b>ViewState</b> based on the string identifier defined as a constant
            in this or a derived class.
            </summary>
            <param name="id">An identifier of the sub-object that was defined as a constant string field in this
            or the derived class.</param>
            <param name="def">Default property value if nothing exists in <b>ViewState</b>.</param>
            <returns>The property value retrieved from <b>ViewState</b>, which may be identical to <i>def</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.SetValue(System.Int64,System.Object)">
            <summary>
            Sets a property value into the <b>ViewState</b> based on an identifier specified
            in this or a derived class.
            </summary>
            <param name="id">The identifier of the property being set.</param>
            <param name="value">The value being set on the property.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.SetValue(System.String,System.Object)">
            <summary>
            Sets a property value into the <b>ViewState</b> based on an identifier specified
            in this or a derived class.
            </summary>
            <param name="id">The identifier of the property being set.</param>
            <param name="value">The value being set on the property.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.OnPropertyChange(System.Int64,System.Object)">
            <summary>
            Called in response to a change in the value of a property in <b>ViewState</b> based
            on an identifier specified in this or a derived class.
            </summary>
            <param name="id">The identifier of the property being set as a 64-bit integer.</param>
            <param name="newValue">The new value of the property.</param>
            <remarks>
            <p class="body">For comparison purposes, the sub-object continues to possess
            the old value until after the change notifications have completed.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.OnPropertyChange(System.String,System.Object)">
            <summary>
            Called in response to a change in the value of a property in <b>ViewState</b> based
            on an identifier specified in this or a derived class.
            </summary>
            <param name="id">The identifier of the property being set as a string.</param>
            <param name="newValue">The new value of the property.</param>
            <remarks>
            <p class="body">For comparison purposes, the sub-object continues to possess
            the old value until after the change notifications have completed.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.InitializeStyle(System.String,Infragistics.WebUI.Shared.Style)">
            <summary>
            Initializes a <b>Style</b> property with default appearance based on an
            external CSS stylesheet.
            </summary>
            <param name="StylePropertyId">The property ID of the Style property sub-object to be initialized. This
            should be the well-known class name of the Style followed by the suffix, "Style".</param>
            <param name="styleRef">An empty Style object reference to assign the default CSS class name.</param>
            <remarks>
            <p class="body">This method initializes the <b>Style</b> object to take on
            the default appearance specified by a CSS class in an external stylesheet.
            CSS classes in an external stylesheet maintain a consistent naming convention
            by which their names are well-known, and can be connected to the appropriate
            <b>Style</b> properties at init-time by this method.</p>
            <p class="body">Name collisions are avoided because <b>InitializeStyle</b>
            will read the <see cref="P:Infragistics.WebUI.WebControls.SmartWebControl.ControlPrefix">ControlPrefix</see> to produce an
            appropriately-qualified CSS class name based on <em>StylePropertyId</em>
            for the initialized <em>styleRef</em>.</p>
            <p class="body">Inheritors should call this method immediately after lazily
            creating an empty <b>Style</b> object reference, but before tracking viewstate
            on it, for any <b>Style</b> properties added by their subclass.  Failure to
            call this method when initializing a <b>Style</b> property will cause the
            <b>Style</b> not to appear as if based upon the style rules in the external
            stylesheet.  A subclass may assume responsibility for performing their own
            <b>Style</b> property initializations at this recommended point in time
            after lazy creation and before tracking viewstate, but should not expect
            the <b>Style</b> property to function correctly with the default external
            stylesheet.</p>
            <p class="note">The <b>CssClass</b> can be set to
            work with other external or embedded CSS classes, of course.</p>
            </remarks>
            <exception cref="T:System.NullReferenceException">Thrown when the <em>StylePropertyId</em>
            argument is null (Nothing in VB.NET), or when the <b>SmartWebControl</b> subclass' overridden 
            <see cref="P:Infragistics.WebUI.WebControls.SmartWebControl.ControlPrefix">ControlPrefix</see> implementation returns null (Nothing in VB.NET)
            instead of a non-null string prefix.</exception>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.Reset">
            <summary>
            Resets the <b>SmartWebControl</b> to its default state.
            </summary>
            <remarks>
            <p class="body">Clears all viewstate values so that calls to the
            property accessors yield the default argument passed-in, and
            cascades a call to <see cref="M:Infragistics.WebUI.Shared.WebObjectBase.Reset">Reset</see>
            to every sub-object contained by the <b>SmartWebControl</b> (this
            includes all sub-objects added by subclasses).</p>
            <p class="body">Inheritors overriding this method should call the
            base class' implementation to ensure these expected behaviors take
            place.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.RaisePostBackEvent(System.String)">
            <summary>
            Processes events generated when a web form is posted back
            to the server.
            </summary>
            <param name="eventArgument">Text argument describing the
            event that has transpired. The formatting of this text
            argument may vary based on the element and event.</param>
            <remarks>
            <p class="body">This method is a public to implement the
            <b>IPostBackEventHandler</b> interface. External (or parent)
            elements may percolate event notifications down to this element
            by invoking this method with a suitably formatted
            <i>eventArgument</i>.</p>
            <p class="body">Inheritors may carry out further processing
            of the <i>eventArgument</i> by overriding <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.OnRaisePostBackEvent(System.String)"/>
            to parse the argument and direct reaction.</p>
            <p class="note">The formatting of the <i>eventArgument</i>
            is subject to change.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.OnRaisePostBackEvent(System.String)">
            <summary>
            Receives notification when a web form posts back to the
            server with event information.
            </summary>
            <param name="eventArgument">Text argument describing the
            event that has transpired. The formatting of this text
            argument may vary based on the element and event.</param>
            <remarks>
            <p class="body">Inheritors perform processing of post back
            events by overriding this method to parse the <i>eventArgument</i>
            and direct the reaction of their element. This method is called
            indirectly by the ASP.NET framework through the <b>IPostBackEventHandler</b>
            interface, which <see cref="T:Infragistics.WebUI.WebControls.SmartWebControl"/> implements.</p>
            <p class="body">Inheritors must not make any assumptions about
            the timing in which they receive a particular event notification
            during post back, and the notifications of any and all other
            events.</p>
            <p class="note">The formatting of the <i>eventArgument</i>
            is subject to change.</p>
            <seealso cref="M:Infragistics.WebUI.WebControls.SmartWebControl.RaisePostBackEvent(System.String)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes data posted back from a web form.
            </summary>
            <param name="postDataKey">A key identifying this target element.</param>
            <param name="values">A set of values that the implementation of <b>LoadPostData</b>
            can dereference with <i>postDataKey</i> to access it's posted back data.</param>
            <returns>True if the posted back data has caused state changes within the element;
            otherwise False.</returns>
            <remarks>
            <p class="body">Posted back data generally appears url-encoded within the body
            of an HTTP post. The ASP.NET framework unpacks this information and dispatches
            it to elements on the page which implement <b>IPostBackDataHandler</b>, such as
            the <see cref="T:Infragistics.WebUI.WebControls.SmartWebControl"/> does.</p>
            <p class="body">The client-side object model generally posts back information
            related to state changes and actions undertaken by the end user with the element.
            This method is how the client-side and server-side communicate this stateful
            information back and forth.</p>
            <p class="body">Inheritors wishing to process posted back data added by their
            <b>SmartWebControl</b> subclass' client-side object model should override the
            <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.OnLoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"/> method.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.OnLoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Receives notification when data has been posted back to a web form.
            </summary>
            <param name="postDataKey">A key identifying this target element.</param>
            <param name="values">A set of values that the implementation of <b>LoadPostData</b>
            can dereference with <i>postDataKey</i> to access it's posted back data.</param>
            <returns>True if the posted back data has caused state changes within the element;
            otherwise False (for example, when the <i>values</i> contain no posted back data
            pertaining to the element identified by <i>postDataKey</i>).</returns>
            <remarks>
            <p class="body">The base class implementation of <b>OnLoadPostData</b>
            parses the XML content within posted back data.</p>
            <p class="body">Inheritors may override the base class implementation of
            <b>OnLoadPostData</b> to obtain access to posted back information pertaining
            to their <b>SmartWebControl</b> subclass. However, the first statement in
            the overridden method implementation should be to call the base class'
            implementation of <b>OnLoadPostData</b>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.OnLoadPostControlState(System.Xml.XmlNode,System.Object,System.Collections.ArrayList)">
            <summary>
            Notification furnished to subclasses when control state is processed from loaded
            post back data.
            </summary>
            <param name="xmlNode">The <b>XmlNode</b> containing attribute/value pairs to be applied to server-side objects.</param>
            <param name="targetObject">A reference to the <b>SmartWebControl</b> or other target of the control state data being applied.</param>
            <param name="eventList">An <b>ArrayList</b> of objects, usually <b>Pair</b> or <b>Triplet</b>, that is used to track which objects need to have events fired in phase 2 of <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"/>.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.OnLoadPostStateItem(System.Xml.XmlNode,System.Collections.ArrayList)">
            <summary>
            Notification furnished to subclasses to set properties on appropriate objects for values
            posted back from the client.
            </summary>
            <param name="xmlNode">The <b>XmlNode</b> containing attribute/value pairs to be applied to server-side objects.</param>
            <param name="eventList">An <b>ArrayList</b> of objects, usually <b>Pair</b> or <b>Triplet</b>, that is used to track which objects need to have events fired in phase 2 of <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"/>.</param>
            <remarks>
            <p class="body">The base class implementation of <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.OnLoadPostControlState(System.Xml.XmlNode,System.Object,System.Collections.ArrayList)"/>
            calls this method once per child element of the &lt;StateItems&gt; node in XML data
            received from the client during a post back.</p>
            <p class="body">Inheritors maintaining this structure of control state are encouraged
            to override this method in order to read changes in sub-property values to client-side
            objects having analogous server-side correspondents.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.RaisePostDataChangedEvent">
            <summary>
            Called in response to the <b>LoadPostData</b> method indicating that the state
            of the element has changed.
            </summary>
            <remarks>
            <p class="body">Inheritors can override this method to perform pre- or postprocessing
            of these events, as long as they invoke <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.OnRaisePostDataChangedEvent(System.Collections.ArrayList)"/>.</p>
            <p class="body">Those events that will be processed were collected during the
            handling of <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"/>, specifically by the <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.OnLoadPostControlState(System.Xml.XmlNode,System.Object,System.Collections.ArrayList)"/>
            method.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.OnRaisePostDataChangedEvent(System.Collections.ArrayList)">
            <summary>
            Notification furnished to subclasses when the <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.RaisePostDataChangedEvent"/> method is called.
            Virtual method called on 
            </summary>
            <param name="eventList">An <b>ArrayList</b> of objects, usually <b>Pair</b> or <b>Triplet</b>, that is used to track which objects need to have events fired in phase 2 of <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"/>.</param>
            <remarks>
            <p class="body">Inheritors may override this method to process the list of event <b>Pairs</b>
            or <b>Triplets</b> that require the firing of server-side events for their application.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.CreateSubObject(System.String)">
            <summary>
            Creates subobjects of the appropriate type.
            </summary>
            <param name="typeID">Corresponds to the <i>Id</i> of the subobject as specified in the subobject property's mutator.</param>
            <returns>An implementation of <b>IStateManager</b> responsible for loading and saving the state objects
            used for remembering a subobject's current state. The base class implementation is provided for convenience
            only, and always returns null (Nothing in Visual Basic .NET).</returns>
            <remarks>
            <p class="body">Inheritors implement an override of this method in their subclasses to instatiate
            property subobjects (compound properties) based on a supplied <i>typeID</i>. The <i>typeID</i> that is
            received will be the same identifier as the subclass uses to store and retrieve the subobject from the
            <b>ViewState</b>. This method is called during <b>LoadViewState</b> when rehydrating the <b>Page</b>.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.GetSubObject(System.String)">
            <summary>
            Obtains a subobject reference based on the specified id value. Subobjects are automatically
            managed for <b>ViewState</b>.
            </summary>
            <param name="id">The Id of the subobject (defined as a constant in the derived class).</param>
            <returns>The appropriate subobject based on the id.</returns>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.SetSubObject(System.String,System.Web.UI.IStateManager)">
            <summary>
            Establishes a subobject in the <see cref="P:Infragistics.WebUI.WebControls.SmartWebControl.SubObjects"/> hash collection.
            </summary>
            <param name="id">The Id of the subobject (defined as a constant in the derived class).</param>
            <param name="stateMgr">An object implementing <b>IStateManager</b> for use in supporting state management
            for the subobject.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.LoadViewState(System.Object)">
            <summary>
            Rehydrates the <see cref="T:Infragistics.WebUI.WebControls.SmartWebControl"/> from a saved state object.
            </summary>
            <param name="savedState">A saved state object that the ASP.NET Framework
            deserializes either from posted back data, or following a call to the
            <b>Page</b>'s <b>LoadPageStateFromPersistenceMedium</b>. This saved
            state information should match the object given to the ASP.NET Framework
            when it called <b>SaveViewState</b> on a previous HTTP request.</param>
            <remarks>
            <p class="body">Inheritors are strong advised against overriding the base
            class' implementation of <b>LoadViewState</b>, as doing so will likely
            disrupt normal functionality of the <see cref="T:Infragistics.WebUI.WebControls.SmartWebControl"/>'s support
            for viewstate management. Instead, there is considerable flexibility built
            into the <b>SmartWebControl</b> for supporting viewstate management of
            subobjects and properties, and inheritors should leverage that for any
            additional subobjects and properties they have added in their subclass.</p>
            <seealso cref="M:Infragistics.WebUI.WebControls.SmartWebControl.SaveViewState"/>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Infragistics.WebUI.WebControls.SmartWebControl.SaveViewState" -->
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.TrackViewState">
            <summary>
            Indicates whether this <b>SmartWebControl</b> is tracking <b>ViewState</b>
            for its properties and subobjects.
            </summary>
            <remarks>
            <p class="body">Calling this method informs the ASP.NET <b>WebControl</b> to track
            it's viewstate, and dispatches to all property subobjects that implement <b>IStateManager</b>
            to do the same. All subobjects derived from <see cref="T:Infragistics.WebUI.Shared.WebObjectBase"/>, or that implement
            the <see cref="T:Infragistics.WebUI.Shared.IStateObject"/> interface, already support this mechanism for initiating
            their viewstate tracking without the developer having to take any further steps.</p>
            <p class="body">Inheritors do not need to override the base class implementation
            of <b>TrackViewState</b> as long as they create and store their property subobjects
            in the <see cref="P:Infragistics.WebUI.WebControls.SmartWebControl.SubObjects"/> hash table as is recommended.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.OnInit(System.EventArgs)">
            <summary>
            Fires the <b>Init</b> event after this <b>SmartWebControl</b> has been
            initialized with values from the .ASPX document, but before other elements
            on the <b>Page</b> have been initialized.
            </summary>
            <param name="e">An <b>EventArgs</b> or object derived from <b>EventArgs</b> containing
            information that will be conveyed to interested parties subscribing to the <b>Init</b>
            event on this element.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.SmartWebControl.OnPreRender(System.EventArgs)">
            <summary>
            Fires the <b>PreRender</b> event and registers blocks of content ahead of rendering.
            </summary>
            <param name="e">An <b>EventArgs</b> or object derived from <b>EventArgs</b> containing
            information that will be conveyed to interested parties subscribing to the <b>PreRender</b>
            event on this element.</param>
            <remarks>
            <p class="body">Some of the content that the <b>SmartWebControl</b> implementation of
            <b>OnPreRender</b> takes care of are the registering of &lt;script&gt; blocks, the
            initialization of global objects and property arrays within Javascript, and the
            emission of a &lt;style&gt; block defining common CSS styles when required.</p>
            <p class="body">Inheritors may override this method to handle the <b>PreRender</b>
            event internally (without adding an event handler) and/or provide additional
            processing before rendering starts. An override must call the base method.
            Failure to call the base method will lead to subscribers of the <b>PreRender</b>
            event not receiving notification that the event has fired, and possible failure
            to emit necessary &lt;script&gt; and &lt;style&gt; blocks leading to script
            errors and an absence of expected styling, respectively.</p>
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Infragistics.WebUI.WebControls.SmartWebControl.OnUnload(System.EventArgs)" -->
        <member name="P:Infragistics.WebUI.WebControls.SmartWebControl.StyleSheetFileName">
            <summary>
            File name and path to the CSS stylesheet for this <b>SmartWebControl</b>.
            </summary>
            <remarks>
            <p class="body">This property specifies the location of an external Cascading Style
            Sheet (CSS) resource for the current <b>SmartWebControl</b> to use. This style sheet
            should contain definitions of well-known style names starting with <see cref="P:Infragistics.WebUI.WebControls.SmartWebControl.ControlPrefix"/>
            to detail the default styling of this element. It may additionally contain definitions
            of custom classes specified at design-time or programmatically through the <b>CssClass</b>
            of the appropriate <b>Style</b> property.</p>
            <p class="body">If unspecified, the default CSS resource will be used for the
            element's default styles. If that resource cannot be found, the element will
            be displayed with a blank appearance and minimal style information to achieve
            normal layout and behavior.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.SmartWebControl.ParsedStyles">
            <summary>
            Contains the <b>ParsedStyleCollection</b> consisting of CSS class
            definitions read from external sources.
            </summary>
            <value>The <b>ParsedStyleCollection</b> after external CSS class
            definitions have been parsed, or null (Nothing in Visual Basic .NET)
            if parsing hasn't been performed yet.</value>
            <remarks>
            <p class="body"></p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.SmartWebControl.Infragistics#WebUI#Shared#IUltraLicensedComponent#License">
            <summary>
            Gets the license cached within this <b>SmartWebControl</b>.
            </summary>
            <remarks>
            <p class="body">This property supports license management, and
            is not intended for application use.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.SmartWebControl.JavaScriptFileName">
            <summary>
            Base path and name for the Javascript file(s) used for client-side processing.
            </summary>
            <remarks>
            <p class="body">Specifies the location where one or more Javascript files that
            support the client-side functionality of this element are stored. The <b>SmartWebControl</b>
            base class handles registering a &lt;script&gt; block on the page with the ASP.NET
            framework to retrieve the identified Javascript file at run-time.</p>
            <p class="body">Inheritors providing support for multiple Javascript files (which
            should conventionally share the value specified by this property as their common
            root stem) are required to handle registering &lt;script&gt; include blocks for
            these additional files on their own.</p>
            <p class="body">Failure to specify the correct location of an element's Javascript
            files can cause the element to generate random Javascript errors in the browser at
            run-time. Please ensure the specified location is reachable, and contains a
            consistent version of the necessary Javascript files that are compatible with
            the current element's assembly. For example, if your application has recently
            deployed updated versions of the Infragistics assemblies, then ensure that the
            location specified by the <b>JavaScriptFileName</b> property contains a compatible
            set of Javascript files.</p>
            <p class="body">Inheritors may override this property to specify a different default
            value.</p>
            <seealso cref="P:Infragistics.WebUI.WebControls.SmartWebControl.JavaScriptFileNameCommon"/>
            <seealso cref="M:Infragistics.WebUI.WebControls.SmartWebControl.ResetJavaScriptFileName"/>
            <seealso cref="M:Infragistics.WebUI.WebControls.SmartWebControl.ShouldSerializeJavaScriptFileName"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.SmartWebControl.JavaScriptFileNameCommon">
            <summary>
            Base path and name for the common Javascript file providing client-side infrastructure.
            </summary>
            <remarks>
            <p class="body">Specifies the location where the common client-side infrastructure
            Javascript file is installed. The <b>SmartWebControl</b> base class handles registering
            a &lt;script&gt; block on the page with the ASP.NET framework to retrieve the identified
            Javascript file at run-time.</p>
            <p class="body">The location specified by this property should be consistent with
            the location specified for the common Javascript files of other elements on the
            page, because the &lt;script&gt; include for this property will be generated only
            once for all of the Infragistics elements contained on the page.</p>
            <p class="body">Failure to specify the correct location of the common Infragistics
            Javascript files can cause elements to generate random Javascript errors in the
            browser at run-time. Please ensure that the common Infragistics Javascript files
            that have been installed are of a consistent version and build number with the
            element's Javascript files installed at the location specified by <b>JavaScriptFileName</b>.
            </p>
            <p class="body">Inheritors may override this property to specify a different default
            value.</p>
            <seealso cref="P:Infragistics.WebUI.WebControls.SmartWebControl.JavaScriptFileName"/>
            <seealso cref="M:Infragistics.WebUI.WebControls.SmartWebControl.ResetJavaScriptFileNameCommon"/>
            <seealso cref="M:Infragistics.WebUI.WebControls.SmartWebControl.ShouldSerializeJavaScriptFileNameCommon"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.SmartWebControl.Styles">
            <summary>
            Repository of styles collected from all <b>SmartWebControl</b> elements on the
            page.
            </summary>
            <remarks>
            <p class="body"><b>Styles</b> supports the generation of registered styles in a
            single &lt;style&gt; block as Cascading Style Sheet (CSS) definitions. Inheritors
            should call the <b>AddStyle</b> method to register any <b>Style</b> objects
            they display. The <see cref="T:Infragistics.WebUI.WebControls.SmartRenderer"/> will then render the style rules as
            appropriate in either a class attribute or in-line style attribute.</p>
            <p class="body">The base implementation of <b>SmartWebControl</b> is responsible
            for initializing this property in <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.OnInit(System.EventArgs)"/> and committing all changes
            at the end of <see cref="M:Infragistics.WebUI.WebControls.SmartWebControl.OnPreRender(System.EventArgs)"/>. Inheritors have no responsibilities as
            far as managing the lifespan of the <b>StyleRepository</b>, but must avoid 
            accessing it outside of this interval of the <b>Page</b> lifecycle.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.SmartWebControl.Visible">
            <summary>
            Indicates whether the element is seen on the <b>Page</b>.
            </summary>
            <value>True if this web element is visible to the end user;
            otherwise False if this web element is hidden.</value>
            <remarks>
            <p class="body">This flag controls whether the <b>SmartWebControl</b>
            renders.</p>
            <p class="body">An element marked as <i>hidden</i> does not render
            any HTML or client-side script to the browser, and it does not fire
            a <b>PreRender</b> event.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.SmartWebControl.ControlPrefix">
            <summary>
            Gets a short prefix qualifying this instance uniquely by it's
            control type.
            </summary>
            <value>
            By default, the base implementation of <b>ControlPrefix</b> always
            returns an empty string.
            </value>
            <remarks>
            <p class="body">This prefix will be rendered in front of CSS classes
            and other identifying labels to ensure their uniqueness for a given
            type of control. The timing when this prefix gets applied may be prior
            to the <b>Init</b> event firing, therefore it should not be used for
            differentiating control instances.</p>
            <p class="body">Inheritors should override this property and provide
            a <em>short</em> non-null string uniquely identifying the <b>Type</b>
            of their control. Failure to override <b>ControlPrefix</b> may cause
            some CSS class name collisions between different types of controls.
            For example, when a <b>WebMonthView</b> and a <b>WebWeekView</b>
            are on the same page, a name conflict is possible between their
            <b>DayStyle</b> CSS classes (whose default CSS class name could
            be <em>Day</em>) unless they override <b>ControlPrefix</b>.  If
            <b>WebMonthView</b> returned the prefix, "month", from its override
            then it's <b>DayStyle</b> would render with the CSS class name
            <em>monthDay</em> and no longer be in conflict with other controls
            on the page with a different type.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Shared.ISparseArrayItem">
            <summary>
            This interface can be implemented on items to be contained in the sparse 
            array to get a fast IndexOf operation.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.ISparseArrayItem.GetOwnerData(Infragistics.WebUI.Shared.SparseArray)">
            <summary>
            Gets the owner data of the item.
            </summary>
            <param name="context">The sparse array context.</param>
            <remarks>
            <p class="body"><b>GetOwnerData</b> and <see cref="M:Infragistics.WebUI.Shared.ISparseArrayItem.SetOwnerData(System.Object,Infragistics.WebUI.Shared.SparseArray)"/> methods are used by the <see cref="T:Infragistics.WebUI.Shared.SparseArray"/> implementation to maintain a transparent piece of data. It uses this data to provide efficient IndexOf operation.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.ISparseArrayItem.SetOwnerData(System.Object,Infragistics.WebUI.Shared.SparseArray)">
            <summary>
            Sets the owner data of the item.
            </summary>
            <param name="ownerData"></param>
            <param name="context">The sparse array context.</param>
            <remarks>
            <p class="body"><see cref="M:Infragistics.WebUI.Shared.ISparseArrayItem.GetOwnerData(Infragistics.WebUI.Shared.SparseArray)"/> and <b>SetOwnerData</b> methods are used by the <see cref="T:Infragistics.WebUI.Shared.SparseArray"/> implementation to maintain a transparent piece of data. It uses this data to provide efficient IndexOf operation.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Shared.ISparseArrayMultiItem">
            <summary>
            ISparseArrayMultiItem interface.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.ISparseArrayMultiItem.GetItemAtScrollIndex(System.Int32)">
            <summary>
            Returns a descendant item at the specified index. The returned item 
            doesn't necessarily have to be an immediate child.
            </summary>
            <param name="scrollIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.ISparseArrayMultiItem.ScrollCount">
            <summary>
            Gets the scroll count of this item. If the scroll count is 0 then item 
            is considered hidden otherwise it's considered visible. Scroll count must 
            be a non-negative number.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.ICreateItemCallback">
            <summary>
            ICreateItemCallback interface.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.ICreateItemCallback.CreateItem(Infragistics.WebUI.Shared.SparseArray,System.Int32)">
            <summary>
            Returns a new item to be assigned to a location in the array. CreateItem should not 
            set the new item at the location in the array. Array and relativeIndex are provided 
            for information only. Also the implementation should not modify array in any way 
            otherwise results will be undefined.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.SparseArray">
            <summary>
            SparseArray class.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="useOwnerData">If true then either all items should implement ISparseArrayItem interface or the derived class should override <see cref="M:Infragistics.WebUI.Shared.SparseArray.GetOwnerData(System.Object)"/> and <see cref="M:Infragistics.WebUI.Shared.SparseArray.SetOwnerData(System.Object,System.Object)"/> methods to maintain owner data for items.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="factor"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.#ctor(System.Int32,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="factor"></param>
            <param name="growthFactor">Must be between 0f and 1f exclusive.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.#ctor(System.Int32,System.Single,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="factor"></param>
            <param name="growthFactor">Must be between 0f and 1f exclusive.</param>
            <param name="useOwnerData">If true then all the items must implement ISparseArrayItem interface.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.#ctor(System.Boolean,System.Int32,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="manageScrollCounts"></param>
            <param name="factor"></param>
            <param name="growthFactor"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.Expand(System.Int32)">
            <summary>
            Expands the array to the new count. New count must be greater than or equal to the 
            current count. This has the same logical effect as adding new count - current count 
            number of null items at the end of the array.
            </summary>
            <param name="newCount"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.Add(System.Object)">
            <summary>
            Adds the specified item at the end of the collection.
            </summary>
            <param name="item"></param>
            <returns>The index at which the item was added.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.Insert(System.Int32,System.Object)">
            <summary>
            Inserts the specified item at the specified location in the array.
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.AddRange(System.Collections.ICollection)">
            <summary>
            Adds items in the specified collection to the end of the collection.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.InsertRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Inserts items in the specified collection to the collection at the specified index.
            </summary>
            <param name="index"></param>
            <param name="items"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.RemoveAt(System.Int32)">
            <summary>
            Removes an item at the specified index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.IndexOf(System.Object)">
            <summary>
            Retruns the index of the specified item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes count number of items starting at the specified index in the array.
            </summary>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.Remove(System.Object)">
            <summary>
            Removes the specified item. If the item doesn't exist in the collection, it does nothing.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.Contains(System.Object)">
            <summary>
            Returns true if the specified item is contained in the collection.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.Clear">
            <summary>
            Removes all items from the array.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements from this collection to the specified array starting at index.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.ToArray">
            <summary>
            Returns a new array containing all the elements of this collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.ToArray(System.Type)">
            <summary>
            Returns a new array of specified type containing all the elements of this collection.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetItem(System.Int32)">
            <summary>
            Gets the item at the specified index. If the item at the specified index is null 
            and createItemCallback parameter is non-null, it will call CreateItem on the 
            callback to create it and set it on the array at the specified index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetItem(System.Int32,Infragistics.WebUI.Shared.ICreateItemCallback)">
            <summary>
            Gets the item at the specified index. If the item at the specified index is null 
            and createItemCallback parameter is non-null, it will call CreateItem on the 
            callback to create it and set it on the array at the specified index.
            </summary>
            <param name="index"></param>
            <param name="createItemCallback"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.Reverse">
            <summary>
            Reverses the order of items in the collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.Reverse(System.Int32,System.Int32)">
            <summary>
            Reverses the order of items in the specified range.
            </summary>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.Sort">
            <summary>
            Sorts the array.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.Sort(System.Collections.IComparer)">
            <summary>
            Sorts the array.
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetOwnerData(System.Object)">
            <summary>
            Returns the owner data of the item. Derived class can override <b>GetOwnerData</b> and <b>SetOwnerData</b> to support owner data without having to implement ISparseArrayItem interface on the items.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.SetOwnerData(System.Object,System.Object)">
            <summary>
            Sets the owner data on item. Derived class can override <b>GetOwnerData</b> and <b>SetOwnerData</b> to support owner data without having to implement ISparseArrayItem interface on the items.
            </summary>
            <param name="item"></param>
            <param name="ownerData"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetVisibleCount">
            <summary>
            Returns the visible count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetScrollCount">
            <summary>
            Returns the scroll count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetVisibleIndexOf(Infragistics.WebUI.Shared.ISparseArrayMultiItem)">
            <summary>
            Returns the visible index associted with the specified item. Item must be contained 
            within the array. If the item is hidden, that is it's ScrollCount is 0, the this
            method returns -1.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetScrollIndexOf(Infragistics.WebUI.Shared.ISparseArrayMultiItem)">
            <summary>
            Gets the scroll index of the specified item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetItemAtVisibleIndexOffset(Infragistics.WebUI.Shared.ISparseArrayMultiItem,System.Int32,Infragistics.WebUI.Shared.ICreateItemCallback)">
            <summary>
            Returns offset'th visible item from startItem. StartItem can be hidden in which case
            it will start from the next visible item. Offset can be 0. If the resulting visible
            index is out of bounds, returns null.
            </summary>
            <param name="startItem"></param>
            <param name="offset"></param>
            <param name="createItemCallback"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetItemAtVisibleIndex(System.Int32,Infragistics.WebUI.Shared.ICreateItemCallback)">
            <summary>
            Returns the item at the specified visible index. This method returns null if the visible index is out of bounds.
            </summary>
            <param name="visibleIndex">Visible index at which to get the item.</param>
            <param name="createItemCallback">Optional call back to create the item at the specified visible index if none exists at that visible index.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetItemAtScrollIndex(System.Int32,Infragistics.WebUI.Shared.ICreateItemCallback)">
            <summary>
            Returns the item at the specified scroll index. This method returns null if the scroll index is out of bounds.
            </summary>
            <param name="scrollIndex">Visible index at which to get the item.</param>
            <param name="createItemCallback">Optional call back to create the item at the specified scroll index if none exists at that scroll index.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.NotifyItemScrollCountChanged(Infragistics.WebUI.Shared.ISparseArrayMultiItem)">
            <summary>
            Whenever a scroll count of an item contained within this collection is changed, 
            the collection must be notified of the change. If not notified of such a change,
            behavior of various scroll and visible index related methods will be undefined.
            </summary>
            <param name="item">Item whose scroll count changed.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.DirtyScrollCountInfo">
            <summary>
            Dirties scroll count info for the whole collection so next time it will be re-calculated.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.OnScrollCountChanged">
            <summary>
            Called by the sparse array whenever visible count or scroll count changes or is dirtied. Default implementation does nothing. This may get called multiple times for the same change as well as may get called even when the count doesn't change but is simply dirtied.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetEnumerator">
            <summary>
            Returns an instance of IEnumerator that can be used to enumerate through all the 
            elements of this collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseArray.GetEnumerator(Infragistics.WebUI.Shared.ICreateItemCallback)">
            <summary>
            Returns an instance of IEnumerator that can be used to enumerate through all the 
            elements of this collection. New elements will be created to fill null slots via
            createItemCallback parameter if it's non-null.
            </summary>
            <param name="createItemCallback"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SparseArray.Count">
            <summary>
            Retruns the number of items contained in the collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SparseArray.Item(System.Int32)">
            <summary>
            Indexer.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SparseArray.IsSynchronized">
            <summary>
            Indicates whether this collection is synchronized. Always returns false.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SparseArray.SyncRoot">
            <summary>
            Returns an object that can be used to synchronize thread access.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SparseArray.NonNullItems">
            <summary>
            Returns a new instance of enumerable that can be used to enumerate through only the non-null items in the collection.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.SparseCollectionBase">
            <summary>
            Abstract base class for collections that contain objects.  If the object
            implements the System.IDisposable interface, OnDispose is called on the 
            object in DisposeCollectionItems.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.GetItem(System.Int32)">
            <summary>
            Virtual method that returns the object at the specified index
            </summary>
            <param name="index">index of the object to retrieve.</param>
            <returns>The object at the index</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the items from the collection into the array.
            </summary>
            <param name="array">The array to receive the itemd</param>
            <param name="index">The index to start with</param>		
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.Contains(System.Object)">
            <summary>
            Returns true if the collection contains the object
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.IndexOf(System.Object)">
            <summary>
            Returns the index of the object in the collection
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            IEnumerable Interface Implementation
            returns a type safe enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.CreateArray">
            <summary>
            Virtual method used by the All 'get' method to
            create the array it returns.
            </summary>
            <returns>The newly created object array</returns>
            <remarks>This is normally overridden in a derived class to allocate a type safe array.</remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.InternalAdd(System.Object)">
            <summary>
            Appends the object to the collection
            </summary>
            <param name="obj">Item to add to the collection.</param>
            <returns>Index of the added item.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.InternalInsert(System.Int32,System.Object)">
            <summary>
            Appends the object to the collection
            </summary>
            <param name="index">Item insertion index.</param>
            <param name="obj">Item to insert into the collection.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.InternalClear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.InternalRemove(System.Object)">
            <summary>
            Removes an item from the collection
            </summary>
            <param name="item">Item to remove</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.InternalRemove(System.Int32)">
            <summary>
            Removes an item from the collection
            </summary>
            <param name="index">Index of the item to remove.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.SparseCollectionBase.InternalAddRange(System.Collections.ICollection)">
            <summary>
            Adds items in the specified collection to this collection.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SparseCollectionBase.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SparseCollectionBase.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ArrayList is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SparseCollectionBase.IsReadOnly">
            <summary>
            Returns true if the collection is read-only
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SparseCollectionBase.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.SparseCollectionBase.All">
            <summary>
            The collection as an array of objects
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name.
            </summary>
            <param name="value">Name of the category to retreive.</param>
            <returns>The localized string value.</returns>
        </member>
        <member name="T:Infragistics.WebUI.Shared.Cursors">
            <summary>
            Mouse pointer displayed when the user mouses over it an HTML element.
            </summary>
            <remarks>
            <p class="body">Support for the <b>cursor</b> style varies from browser
            to browser.  Browsers may substitute a more basic cursor for one a web
            application recommends, for instance, if such a mouse pointer isn't
            supported by the client's operating system.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.WebUI.Shared.Cursors.NotSet">
            <summary>
            Not specified.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.Cursors.Default">
            <summary>
            Default pointer.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.Cursors.Auto">
            <summary>
            Browser determines the cursor to use automatically.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.Cursors.Hand">
            <summary>
            Hand pointer, as if to grab an object.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.Cursors.Move">
            <summary>
            A multi-directional arrow suggesting movement.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.Cursors.Crosshair">
            <summary>
            A cross-hair.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.Cursors.Text">
            <summary>
            An I-beam similar to that displayed when editing a text field.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.Cursors.Wait">
            <summary>
            An hourglass suggesting to the end user a lengthy operation is in progress.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.Cursors.Help">
            <summary>
            A question mark implying help is available for the referenced element.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.Rectangle">
            <summary>
            Class for representing rectangular coordinates and allowing them to be displayed and edited in the Property grid.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Rectangle.#ctor(System.Boolean)">
            <summary>
            Create Rectangle with required value of isTrackingViewState
            </summary>
            <param name="trackViewState"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Rectangle.ToString">
            <summary>
            Produces a text representation of the rectangular coordinates for
            design-time or diagnostic use.
            </summary>
            <returns>A text representation of the rectangular coordinates of
            the current instance.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Rectangle.IsEmpty">
            <summary>
            Specifies whether any settings have been applied to the Style object.
            </summary>
            <remarks>
            <p class="body">If this property returns True, there are no formatting attributes set for the style object, or all of its properties have been reset to their default values.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Rectangle.Copy(Infragistics.WebUI.Shared.Rectangle)">
            <summary>
            Copies properties from source
            </summary>
            <param name="rect">Source</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Rectangle.Reset">
            <summary>
            Resets any changes.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Rectangle.IsDataPossible(Infragistics.WebUI.Shared.Rectangle)">
            <summary>
            Public shortcut to check if object may have data
            </summary>
            <param name="rect">Rectangle or null</param>
            <returns>True: ViewState.Count > 0</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Rectangle.Equals(System.Object)">
            <summary>
            Indicates whether this instance of a <b>Rectangle</b> is value-equivalent
            to another.
            </summary>
            <param name="obj">Another instance of a <b>Rectangle</b>.</param>
            <returns>True if the current <b>Rectangle</b> instance and <i>obj</i> have
            identical rectangular coordinates, False if not or if <i>obj</i> was not
            a <b>Rectangle</b>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Rectangle.GetHashCode">
            <summary>
            Gets a hash code of the current <b>Rectangle</b>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Rectangle.Top">
            <summary>
            Specifies the top origin of the UI Rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Rectangle.Left">
            <summary>
            Specifies the left origin of the UI Rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Rectangle.Right">
            <summary>
            Specifies the right extent of the UI Rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Rectangle.Bottom">
            <summary>
            Specifies the bottom extent of the UI Rectangle.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Rectangle.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Shared.Margin">
            <summary>
            The amount of space for margins of an object.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Margin.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Margin.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="trackViewState">Track view state</param>
        </member>
        <member name="T:Infragistics.WebUI.Shared.Padding">
            <summary>
            The amount of space to insert between an object and its edges
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Padding.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Padding.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="trackViewState">Track view state</param>
        </member>
        <member name="T:Infragistics.WebUI.Shared.BorderDetails">
            <summary>
            The BorderDetails class handles properties and methods directly related to the appearance of the style's border.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.BorderDetails.#ctor">
            <summary>
            The details of the style's border such as individual color, style and width of each side of it.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.BorderDetails.#ctor(System.Boolean)">
            <summary>
            Create BorderDetails with required value of isTrackingViewState
            </summary>
            <param name="trackViewState"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.BorderDetails.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.BorderDetails.IsEmpty">
            <summary>
            Returns a Boolean value that determines whether a BorderDetails object contains any data or not.
            </summary>
            <remarks>
            <p class="body">True if the BorderDetails object from which this method was invoked has any useful data; otherwise, False.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.BorderDetails.Reset">
            <summary>
            Resets all properties of the BorderDetails class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the BorderDetails class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the BorderDetails will retun False until set again.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.BorderDetails.CopyFrom(Infragistics.WebUI.Shared.BorderDetails)">
            <summary>
            Duplicates the style properties of the specified <b>BorderDetails</b> object into the instance of the BorderDetails class from which this method is invoked.
            </summary>
            <remarks>
            <p class="body">Use the CopyFrom method to duplicate the BorderDetails object properties into the instance of the BorderDetails class from which this method is invoked.</p>
            <p class="body">All properties in the current instance of the BorderDetails class will be replaced by their corresponding properties in the BorderDetails specified by the <i>source</i> parameter.</p>
            </remarks>
            <param name="source">
            <p class="body">A BorderDetails object that represents the instance to copy.</p>
            </param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.BorderDetails.IsDataPossible(Infragistics.WebUI.Shared.BorderDetails)">
            <summary>
            Public shortcut to check if object may have data
            </summary>
            <param name="bd">BorderDetails or null</param>
            <returns>True: ViewState.Count > 0</returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.ColorLeft">
            <summary>
            The color of the left side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.ColorTop">
            <summary>
            Returns or sets a Color value that determines the color of the top side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.ColorRight">
            <summary>
            Returns or sets a Color value that determines the color of the right side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.ColorBottom">
            <summary>
            Returns or sets a Color value that determines the color of the bottom side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.WidthLeft">
            <summary>
            The thickness of the left side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.WidthTop">
            <summary>
            Returns or sets an Unit value that determines the thickness of the top side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.WidthRight">
            <summary>
            The thickness of the right side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.WidthBottom">
            <summary>
            Returns or sets an Unit value that determines the thickness of the bottom side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.StyleLeft">
            <summary>
            The style of the left side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.StyleRight">
            <summary>
            The style of the right side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.StyleTop">
            <summary>
            The style of the top side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.StyleBottom">
            <summary>
            The style of the bottom side of the border.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BorderDetails.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Shared.Style">
            <summary>
            Class providing CSS style attributes and functionality.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.#ctor">
            <summary>
            An Style object contains formatting settings that can be applied to other objects in the grid, such as columns, rows and cells. Typical style attributes include foreground color, background color, font settings and border styles.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.#ctor(System.Boolean)">
            <summary>
            Internal use only. Create Style with required value of TrackingViewState.
            </summary>
            <param name="trackViewState">State of the owner's ViewState</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.ShouldSerializeMargin">
            <summary>
            Checks if Margin has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.ResetMargin">
            <summary>Clears the Margin</summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.ShouldSerializePadding">
            <summary>
            Checks if Padding has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.ResetPadding">
            <summary>Clears the Padding</summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.ShouldSerializeBorderDetails">
            <summary>
            Check if BorderDetails has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.ResetBorderDetails">
            <summary>Clears the BorderDetails</summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.Reset">
            <summary>
            Resets all properties to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the Style class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the Style will return False until set again.</p>
            </remarks>		
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.CopyFrom(System.Web.UI.WebControls.Style)">
            <summary>
            Copy style from source.
            </summary>
            <param name="s">Source of new properties.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)">
            <summary>
            Adds all style attributes to the HtmlTextWriter instance passed in.
            </summary>
            <param name="writer">An instance of an HtmlTextWriter</param>
            <param name="owner">The WebControl which 'owns' this style, or null</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.IsFontEmpty">
            <summary>
            Indicates whether the font of the style differs from default value or not
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.IsEmpty">
            <summary>
            Indicates whether the style differs from default value or not
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.Merge(Infragistics.WebUI.Shared.Style,System.Boolean)">
            <summary>
            Replace properties of this by not-default properties of the s
            </summary>
            <param name="s">Style which priorities have priority over properties of this</param>
            <param name="reset">True: Reset this before merging.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.HasData(Infragistics.WebUI.Shared.Style)">
            <summary>
            Check if style is not null and has data
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Style.HasData(Infragistics.WebUI.Shared.Style,System.Boolean)">
            <summary>
            Check if style is not null and has data
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Style.BackgroundImage">
            <summary>
            <p class="body">The filename of an image to be displayed in the background of an object.</p>
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Style.CustomRules">
            <summary>
            A string of text that determines additional CSS rules to apply to the object.
            </summary>
            <remarks>
            <p class="body">Use this property to specify additional CSS style rules to render to an element on the client.</p>
            <p class="body">Styles specified through this property are comprised of <tt>name: value;</tt> pairs, where the
            name of a CSS style property is separated from its value by a colon assignment operator, and each assignment is
            terminated by a semicolon. Failure to properly format these assignments may lead to undefined behavior, such as
            CSS conformant browsers ignoring one (or all) style rules for the affected element.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Style.Cursor">
            <summary>
            The type of cursor displayed for an object when the mouse pointer is over it.
            </summary>
            <remarks>
            <p class="body">Use this property to specify the cursor to use for the object on the client. It will be rendered as the CSS <tt>cursor</tt> attribute.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Style.Margin">
            <summary>
            <p class="body">The amount of space for margins of an object.</p>
            </summary>
            <remarks>
            <p class="body">Margins can be set for the entire object or for one or more of its sides.</p>
            <p class="body">Use this property to specify the margins to render the object with on the client. It will be rendered as the CSS <tt>margin</tt> attribute.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Style.HasMargin">
            <summary>
            A Boolean value that indicates whether the margin has been set. If True, an assigned margin setting is in effect for the object. If False, no margin has been specifically set. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Style.Padding">
            <summary>
            <p class="body">The amount of space to insert between an object and its edges.</p>
            </summary>
            <remarks>
            <p class="body">Padding can be set for the entire object or for one or more of its sides.</p>
            <p class="body">Use this property to specify the padding to render the object with on the client. It will be rendered as the CSS <tt>padding</tt> attribute.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Style.HasPadding">
            <summary>
            A boolean value that indicates whether paddign (internal spacing) is applied to the object. This property is read-only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Style.BorderDetails">
            <summary>
            <p class="body">The details of the style's border such as individual color, style and width of each side of it.</p>
            </summary>
            <remarks>
            <p class="body">Use this property to specify different colors and widths for each side of the border. You can also use standard BorderColor and BorderWidth properties but they will be overriden on the side you set in the border details. It will be rendered as the CSS <tt>border</tt> attributes.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Style.HasBorderDetails">
            <summary>
            A Boolean value that indicates whether border details have been applied to an object. This property is read-only.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.GradientType">
            <summary>
            Defines the type of linear gradient applied.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.GradientType.LeftToRight">
            <summary>
            Gradient runs from <b>ColorStart</b> on the left, to <b>ColorEnd</b> on the right.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.GradientType.TopToBottom">
            <summary>
            Gradient runs from <b>ColorStart</b> on the top, to <b>ColorEnd</b> on the bottom.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.Gradient">
            <summary>
            Describes a linear gradient that can be applied to a background.
            </summary>
            <remarks>
            <p class="body">Developers and designers may set the properties of a <b>Gradient</b>
            directly on <see cref="T:Infragistics.WebUI.Shared.StyleEx"/>-typed properties. See the description of that class'
            <see cref="P:Infragistics.WebUI.Shared.StyleEx.Gradient">Gradient</see> property for
            additional information.</p>
            <p class="body">For a gradient to be effective, the <see cref="P:Infragistics.WebUI.Shared.Gradient.ColorStart"/> and
            <see cref="P:Infragistics.WebUI.Shared.Gradient.ColorEnd"/> properties must be set at minimum. Other properties are
            optional.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Gradient.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders instructions for the gradient effect to an existing HtmlTextWriter.
            </summary>
            <param name="writer">Destination where the HTML markup is written.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.Gradient.Render">
            <summary>
            Renders instructions for the gradient effect as plain text.
            </summary>
            <returns>The instructions for the gradient effect specified
            by this <b>Gradient</b>'s property settings.</returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Gradient.ColorStart">
            <summary>
            Starting color of the linear gradient.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Gradient.AlphaStart">
            <summary>
            Alpha setting for the starting color that determines its transparency.
            </summary>
            <value>A value of 0 indicates absolute transparency, a value of 255
            indicates the <b>ColorStart</b> is absolutely opaque. Values between
            0 and 255 indicate stages of translucency.</value>
            <remarks>
            <p class="body">The degree of tranlucency supported may vary with the
            capabilities of an end user's video card.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Gradient.ColorEnd">
            <summary>
            Ending color of the linear gradient.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Gradient.AlphaEnd">
            <summary>
            Alpha setting for the ending color that determines its transparency.
            </summary>
            <value>A value of 0 indicates absolute transparency, a value of 255
            indicates the <b>ColorEnd</b> is absolutely opaque. Values between
            0 and 255 indicate stages of translucency.</value>
            <remarks>
            <p class="body">The degree of tranlucency supported may vary with the
            capabilities of an end user's video card.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.Gradient.Type">
            <summary>
            Describes the direction of change for the linear gradient.
            </summary>
            <remarks>
            <p class="body">This property is used to set the gradient to horizontal or vertical.
            The default setting makes the gradient horizontal.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Shared.StyleEx">
            <summary>
            Extended definitions of advanced styles.
            </summary>
            <remarks>
            <p class="body">The <b>StyleEx</b> class adds support for gradients on advanced
            up-level browsers supporting this feature.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.StyleEx.#ctor">
            <summary>
            Creates an empty instance of this style.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.StyleEx.ResetGradient">
            <summary>
            Clears the <b>Gradient</b>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.StyleEx.ShouldSerializeGradient">
            <summary>
            Check if the <b>Gradient</b> has data.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.StyleEx.HasGradient">
            <summary>
            Indicates whether the <b>Gradient</b> has been set.
            </summary>
            <value>
            If True, an assigned gradient setting is in effect for the object. If False, no gradient has been specifically set.
            </value>
            <remarks>
            <p class="body">This property is read-only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.StyleEx.Gradient">
            <summary>
            Describes the color and alpha gradient fill applied to the background.
            </summary>
            <remarks>
            <p class="body">Advanced browsers may present a gradient fill, which is a gradual transition between two colors (and optionally two alphas affecting tranparency). Where an end user's browser supports this feature they will see the gradient effect. If the feature is unsupported, an end user will see the <see cref="!:BackColor"/>.  Designers should specify an acceptable <b>BackColor</b> as a contingency if the gradient filter effect is unavailable.</p>
            <p class="note">Gradients are an advanced web feature only supported on browsers with access to Microsoft DirectX.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Shared.StyleRepository">
            <summary>
            Stores the definitions for CSS classes for participating web elements
            on the page for emission of an embedded stylesheet.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.StyleRepository.Create">
            <summary>
            Factory method that retrieves the singleton instance of a <b>StyleRepository</b>
            for the current page request.
            </summary>
            <returns>The singleton instance of a <b>StyleRepository</b> governing the current
            page request.</returns>
            <remarks>
            <p class="body">The first time the <b>Create</b> method is called during a given
            page request, it creates the <b>StyleRepository</b> instance for that page request.
            Subsequent calls to <b>Create</b> will return the cached instance, allowing all
            <see cref="T:Infragistics.WebUI.WebControls.SmartWebControl"/>s to share access to it.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.StyleRepository.RegisterControl(System.Web.UI.Control)">
            <summary>
            Registers an instance of a <b>Control</b> whose styles are managed
            by this <b>StyleRepository</b>.
            </summary>
            <param name="participant">A control whose styles are managed by the
            style repository for the purpose of rendering an embedded stylesheet
            containing all style definitions.</param>
            <remarks>
            <p class="body">Calling <b>RegisterControl</b> is a prerequisite to
            registering styles with <b>AddStyle</b>.  It becomes the responsibility
            of the caller to call <b>UnregisterControl</b> as soon as they have
            completed <b>PreRender</b> event processing <i>or</i> if the control
            is no longer planning to render itself (for example, it has been removed
            from its container's controls collection or made not visible).  Failure
            to unregister may prevent the &lt;style&gt; block from rendering for
            <i>all</i> participants.</p>
            <seealso cref="M:Infragistics.WebUI.Shared.StyleRepository.UnregisterControl(System.Web.UI.Control,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.StyleRepository.UnregisterControl(System.Web.UI.Control,System.Boolean)">
            <summary>
            Unregisters an instance of a <b>Control</b> whose styles were managed
            by this <b>StyleRepository</b>.
            </summary>
            <param name="participant">A control whose styles were managed by the
            style repository.</param>
            <param name="preRenderNotice">Passing true notifies the <b>StyleRepository</b>
            that unregistration is happening as part of pre-render complete notification.
            </param>
            <remarks>
            <p class="body">Participants call <b>UnregisterControl</b> when they
            have completed <b>PreRender</b> processing, or if they no longer require
            the <see cref="T:Infragistics.WebUI.Shared.StyleRepository"/>'s services.</p>
            <p class="body">If a control that was not previously registered with this
            style repository calls <b>UnregisterControl</b>, nothing happens.</p>
            <seealso cref="M:Infragistics.WebUI.Shared.StyleRepository.RegisterControl(System.Web.UI.Control)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.StyleRepository.AddStyle(System.Web.UI.Control,Infragistics.WebUI.Shared.Style)">
            <summary>
            Adds a style to the <b>StyleRepository</b> for the designated participating
            control.
            </summary>
            <param name="participant">A control that has already been registered (see
            <see cref="M:Infragistics.WebUI.Shared.StyleRepository.RegisterControl(System.Web.UI.Control)"/>) as a participant of this <b>StyleRepository</b>.
            </param>
            <param name="style">A new <b>Style</b> object to manage.</param>
            <returns>A unique CSS class name that corresponds to the class definition
            to be emitted in a &lt;style&gt; block by the <b>StyleRepository</b> when
            all participants have completed their <b>PreRender</b> processing.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.StyleRepository.AddStyle(System.Web.UI.Control,Infragistics.WebUI.Shared.Style,System.Int32)">
            <summary>
            Adds a style to the <b>StyleRepository</b> for the designated participating
            control.
            </summary>
            <param name="participant">A control that has already been registered (see
            <see cref="M:Infragistics.WebUI.Shared.StyleRepository.RegisterControl(System.Web.UI.Control)"/>) as a participant of this <b>StyleRepository</b>.
            </param>
            <param name="style">A new <b>Style</b> object to manage.</param>
            <param name="priority">The priority this <i>style</i> is registered with;
            higher numbers mean the style's rules will take precedence over a style
            registered with a lesser priority.</param>
            <returns>A unique CSS class name that corresponds to the class definition
            to be emitted in a &lt;style&gt; block by the <b>StyleRepository</b> when
            all participants have completed their <b>PreRender</b> processing.</returns>
        </member>
        <member name="T:Infragistics.WebUI.Design.TagConverter">
            <summary>
            Summary description for TagConverter.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.UITypeEditorListBase">
            <summary>
            Base class for a UITypeEditor that provides a list
            </summary>
            <remarks>
            <p>Provides a dropdown list of items</p>	
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UITypeEditorListBase.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Used to edit the value and convert the value as needed.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <param name="provider">IServiceProvider</param>
            <param name="value">Current value</param>
            <returns>Edited value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UITypeEditorListBase.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Used to determine the type of UIEditor that will be displayed.
            </summary>
            <param name="context">ITypeDescriptorContext</param>
            <returns>UITypeEditorEditStyle specifying the type of UIEditor.</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UITypeEditorListBase.InitializeListBox(System.Windows.Forms.ListBox)">
            <summary>
            Invoked when the listbox used to display the enum values is created.
            </summary>
            <param name="listbox"><see cref="T:System.Windows.Forms.ListBox"/></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UITypeEditorListBase.GetListItems(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object,System.Object@)">
            <summary>
            Returns the set of items to show on the list.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <param name="currentEntry"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UITypeEditorListBase.ValidateEditItem(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object,System.Object)">
            <summary>
            Validates an item selected by the user on the list and returns it.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <param name="selectedEntry"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcErrorCode">
            <summary>
            Enumeration of error codes assigned to <b>UltraCalcErrorValue</b>
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcErrorCode.Reference">
            <summary>
            Occurs when an invalid or disconnected reference is encountered while evaluating a formula
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcErrorCode.Value">
            <summary>
            Occurs when the wrong type of argument or operand is used in a formula
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcErrorCode.Div">
            <summary>
            Occurs when a number is divided by zero (0)
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcErrorCode.NA">
            <summary>
            Occurs when @NA is entered into a formula
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.UltraCalcErrorCode.Num">
            <summary>
            Occurs with invalid numeric values in a formula or function
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcErrorException">
            <summary>
            Exception containing an <b>UltraCalcErrorValue</b>.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcException">
            <summary>
            General-purpose UltraCalc exception.
            </summary>
            <remarks>
            <p class="body">All UltraCalc exceptions derive from this so that a developer can
            easily turn off these exceptions during first-chance exception debugging.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcException.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcException"/> instance.
            </summary>
            <remarks>
            <p class="body">Exceptions created using this default constructor have no error
            message text associated with them.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcException.#ctor(System.String)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcException.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcException"/> with the specified error message.
            </summary>
            <param name="message">Error message text.</param>
            <remarks>
            <p class="body">It's the developer's responsibility to ensure the <i>message</i> text
            has been properly localized.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcException"/> with the specified error message and exception instance.
            </summary>
            <param name="message">Error message text.</param>
            <param name="innerException">An underlying exception that was responsible for this <b>UltraCalcException</b> being thrown.</param>
            <remarks>
            <p class="body">It's the developer's responsibility to ensure the <i>message</i> text
            has been properly localized.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcErrorException.#ctor(Infragistics.WebUI.CalcEngine.UltraCalcErrorValue)">
            <summary>
            <b>UltraCalcErrorValue</b> constructor.
            </summary>
            <param name="errorValue">An instance of <b>UltraCalcErrorValue</b> that is used to
            initialize this exception.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcErrorException.ToString">
            <summary>
            Converts the <b>UltraCalcErrorException</b> into a string representation.
            </summary>
            <returns>A string representation for this <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcErrorException"/>.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcErrorException.Value">
            <summary>
            Get the <b>UltraCalcErrorValue</b> associated with the exception.
            </summary>
            <remarks>
            <p class="body">The <b>Value</b> is read-only because instances of this exception are atomic.
            Instead of assigning to this property, developers would create an <b>UltraCalcErrorException</b>
            with a different value by constructing a new instance of the exception.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcValueException">
            <summary>
            Value Exception.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValueException.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValueException"/> instance.
            </summary>
            <remarks>
            <p class="body">Exceptions created using this default constructor have no error
            message text associated with them.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValueException.#ctor(System.String)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValueException.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValueException"/> with the specified error message.
            </summary>
            <param name="message">Error message text.</param>
            <remarks>
            <p class="body">It's the developer's responsibility to ensure the <i>message</i> text
            has been properly localized.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValueException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValueException"/> with the specified error message and exception instance.
            </summary>
            <param name="message">Error message text.</param>
            <param name="innerException">An underlying exception that was responsible for this <b>UltraCalcValueException</b> being thrown.</param>
            <remarks>
            <p class="body">It's the developer's responsibility to ensure the <i>message</i> text
            has been properly localized.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcNumberException">
            <summary>
            Number Exception.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberException.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcNumberException"/> instance.
            </summary>
            <remarks>
            <p class="body">Exceptions created using this default constructor have no error
            message text associated with them.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberException.#ctor(System.String)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberException.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcNumberException"/> with the specified error message.
            </summary>
            <param name="message">Error message text.</param>
            <remarks>
            <p class="body">It's the developer's responsibility to ensure the <i>message</i> text
            has been properly localized.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcNumberException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcNumberException"/> with the specified error message and exception instance.
            </summary>
            <param name="message">Error message text.</param>
            <param name="innerException">An underlying exception that was responsible for this <b>UltraCalcNumberException</b> being thrown.</param>
            <remarks>
            <p class="body">It's the developer's responsibility to ensure the <i>message</i> text
            has been properly localized.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue">
            <summary>
            Provides methods and properties used to define and manage an <b>UltraCalc</b> error value.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.#ctor(Infragistics.WebUI.CalcEngine.UltraCalcErrorCode)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue"/> with the specified error code.
            </summary>
            <param name="code"><b>UltraCalcErrorCode</b> value to assign this instance.</param>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.Message"/> property is the localized message text corresponding
            to the error identified by <i>code</i>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.#ctor(Infragistics.WebUI.CalcEngine.UltraCalcErrorCode,System.String)">
            <summary>
            Error code constructor with message.
            </summary>
            <param name="code">An <b>UltraCalcErrorCode</b> value.</param>
            <param name="message">A localized message indicating the reason for the error.</param>
            <remarks>
            <p class="body">The developer is responsible for passing a <i>message</i> that
            has already been localized when using this constructor.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.#ctor(Infragistics.WebUI.CalcEngine.UltraCalcErrorCode,System.String,System.Object)">
            <summary>
            Error code constructor with message.
            </summary>
            <param name="code">An <b>UltraCalcErrorCode</b> value.</param>
            <param name="message">A localized message indicating the reason for the error.</param>
            <param name="errorValue">The value associated with the error that should be retained by the reference.</param>
            <remarks>
            <p class="body">The developer is responsible for passing a <i>message</i> that
            has already been localized when using this constructor.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.ToString">
            <summary>
            Return a string message that denotes reason for error.
            </summary>
            <returns>String containing error message.</returns>
            <remarks>
            <p class="body">The return value of <b>ToString</b> is a localized error code identifier
            corresponding to the <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.Code"/>; it frequently will be different from this object's
            <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.Message"/> text.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.RaiseException">
            <summary>
            Raise an <b>UltraCalcErrorException</b> exception appropriate for the error information contained within this <b>UltraCalcErrorValue</b>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.Code">
            <summary>
            Gets the error code for this <b>UltraCalcErrorValue</b>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.Message">
            <summary>
            Gets the error message for this <b>UltraCalcErrorValue</b>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcErrorValue.ErrorValue">
            <summary>
            Gets the error value object for this <b>UltraCalcErrorValue</b> instance.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference">
            <summary>
            IUltraCalcReference: The Primary Reference Inteface.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.CreateReference(System.String)">
            <summary>
            Create a new reference relative to this reference.  
            </summary>
            <param name="referenceString">The reference string.</param>
            <returns>The new reference.</returns>
            <remarks>
            A reference string may be external or internal.  
            <p>A external reference has the form "//object_name/object_specific_part".  
            The control identified by object_name must implement IUltraCalcReference and be able to 
            parse object_specific_part.</p>
            <p>An internal reference is a reference within the same control that implements this 
            instance of the interface.  An internal reference can be absolute or relative.  Absolute 
            references must begin with the "/" character.  Such references must be created relative to
            the root object in the control.  Relative references are created relative to this reference.</p>
            <p>Note that in complex reference models, multiple reference strings may point to the same
            underlying object.  The reference string used to create the reference must be available to
            other methods such as ResolveReference, References and MarkRelativeIndicies.  Consequently, if the reference 
            string is relative, a proxy reference object should be returned that retains the relative
            reference string.
            </p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.MarkRelativeIndices(Infragistics.WebUI.CalcEngine.IUltraCalcReference)"/>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.ResolveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ResolveReferenceType)"/>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.References"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.CreateRange(System.String,System.String)">
            <summary>
            Create a Range reference relative to this reference.
            </summary>
            <param name="fromReference">The start of the range, inclusive.</param>
            <param name="toReference">The end of the range, inclusive.</param>
            <returns>A RangeReference.</returns>
            <remarks>
            CreateRange should return a IUltraCalcReference implementation whose References 
            method returns an iterator over the specified range.
            <p>This method must be able to handle external, absolute and relative references as 
            described in the CreateReference method.</p>
            <p>Note that both references in the range must be local to each other.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.CreateReference(System.String)"/>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.References"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.ResolveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ResolveReferenceType)">
            <summary>
            Resolves a reference relative to this reference.
            </summary>
            <param name="reference">The reference to resolve.</param>
            <param name="referenceType">Indicates whether the reference being resolved is the lvalue of the formula or an rvalue of the formula.</param>
            <returns>The resolved reference.</returns>
            <remarks>
            ResolveReference is used to merge two references while giving precedence to elements with
            more specific scope.  Each element in this reference and the input reference up to but not
            including the last element must be identical except for scope.  If the scopes are not identical,
            then one of the two scopes must be "any".  Note that elements with a scope of relative index
            are converted to scope "any" in the output reference.  This yields an enumerable reference and
            allows the <b>UltraCalcEngine</b> properly construct the dirty network.  
            <p>The last element of the input reference replaces the
            last element of this reference.</p>
            <p>This method is used by the evaluator to take an unscoped reference, such as a column reference,
            and merge into a fully scoped reference, such as a row reference, to yield a cell reference.
            </p><p>
            Note that this method must operate on the reference string used to create the reference.  When
            a reference with relative scope is created by CreateReference, such as [Price(-1)], the underlying
            reference is a column reference. The reference string used to create the refernce is required
            to properly apply the scope to the merged result.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.MarkRelativeIndices(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            For each reference tuple in this reference that has a relative index, mark the
            corresponding tuple in inReference.
            </summary>
            <param name="inReference">The Reference to be marked.</param>
            <remarks>
            This method is used by the evaluator to set up this reference for resolving an input 
            reference that has elements with a scope of relative index.
            <seealso cref="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.ResolveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ResolveReferenceType)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.ContainsReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if this reference contains inReference
            </summary>
            <param name="inReference">The contained candidate.</param>
            <returns>true if inReference is contained by this reference.</returns>
            <remarks>
            This method is used by the <b>UltraCalcEngine</b> to determine if the passed in reference
            is either a child of this reference or a more fully scoped version of this reference.  
            Each element in this reference is compared with the corresponding element in the input 
            reference.  If the identifers are the same, and if this scope contains the input scope, then
            the input reference is contained by this reference.  If the input reference is longer than 
            this reference and the common element are contained, then the input reference is contained.
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefTuple.Contains(Infragistics.WebUI.CalcEngine.RefTuple)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.IsSubsetReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Indicates whether another reference is a proper subset of this reference.
            </summary>
            <param name="inReference">The reference that may be a subset.</param>
            <returns>Returns true if <i>inReference</i> is contained by this reference.</returns>
            <remarks>
            This method is used by the <b>UltraCalcEngine</b> to determine if the passed in reference
            is fully contained by this reference.  
            Each element in this reference is compared with the corresponding element in the input 
            reference.  If the identifers are the same, and if this scope entirely contains the input scope, then
            the input reference is a proper subset this reference.  
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefTuple.Contains(Infragistics.WebUI.CalcEngine.RefTuple)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.IsSiblingReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Determines whether the given reference is a sibling of this reference
            </summary>
            <param name="reference">The reference to compare against this one</param>
            <returns>True if the reference is a sibling of the given reference</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.GetChildReferences(Infragistics.WebUI.CalcEngine.ChildReferenceType)">
            <summary>
            Returns the child references of the reference. This method can return null.
            </summary>
            <param name="referenceType">The reference type of the child references belonging
            to the current <b>IUltraCalcReference</b>, if any.</param>
            <returns>A set of child <b>IUltraCalcReference</b>-implementing references.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.AbsoluteName">
            <summary>
            The fully qualified unique name for the referenced element.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.ElementName">
            <summary>
            The unqualified name of this referenced element.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.Value">
            <summary>
            The <b>UltraCalcValue</b>, if any, associated with this Reference.  If this reference 
            does not contain a Value then a <b>UltraCalcErrorValue</b> is returned.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.Formula">
            <summary>
            The <b>IUltraCalcFormula</b>, if any, associated with this Reference.  If this reference 
            can not contain a formula then null (Nothing in Visual Basic .NET) is returned.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.RecalcVisible">
            <summary>
            Flag used by the <b>UltraCalcEngine</b> to manage the recalculation network. 
            Denotes the reference is visible.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.RecalcDeferred">
            <summary>
            True indicates that recalculating reference's formula can deferred until it become visible.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.HasRelativeIndex">
            <summary>
            True indicates that the reference was constructed with a relative index.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.HasAbsoluteIndex">
            <summary>
            True indicates that the reference was constructed with an absolute index.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.HasScopeAll">
            <summary>
            True indicates that the reference was constructed with an "*" scope index.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.Context">
            <summary>
            Returns a context for the Reference.
            </summary>
            <remarks><p class="body">Returns a meaningful object context for the reference. This could be an UltraGridCell, UltraGridColumn, NamedReference, Control, etc.</p></remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.References">
            <summary>
            Return a collection of references if this Reference is enumerable.  An exception is
            thrown if this reference is not enumerable.
            </summary>
            <returns>A Reference collection.</returns>
            <remarks>
            The collection returned by this method must be constained to the scope specified by the 
            original string used to create the reference.  For example, if the original reference string
            was [Customers(State="MA")/Total], then the collection should be constained to the Total cells
            for all customers that have State = "MA".
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.IsEnumerable">
            <summary>
            Returns true if this reference is enumerable.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.IsDataReference">
            <summary>
            Indicates whether this reference is a data reference.
            </summary>
            <remarks>
            <p class="body">
            A data reference contains a value, such as an UltraWebGrid cell or footer value. Many
            referenced elements, such as the columns and bands of an UltraWebGrid, do not reference
            an individual value, but instead act as containers of other references. In this way,
            developers may view data references as the leaf nodes on the hierarchical tree of all
            reference nodes.</p>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.Parent">
            <summary>
            The Parent reference of this referenced element.  Used to navigate the element hierarchy.  If this
            referenced element is the root element, <b>Parent</b> returns null.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.IsDisposedReference">
            <summary>
            True indicates that the reference has been disposed.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcReference.NormalizedAbsoluteName">
            <summary>
            Returns the normalized absolute name. UltraCalcEngine makes use normalized
            absolute names of references to compare two references and search for references.
            This property should return the absolute name with case insensitive parts of
            the absolute names converted to lower case.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.ChildReferenceType">
            <summary>
            Used for specifying the reference type parameter to the <see cref="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.GetChildReferences(Infragistics.WebUI.CalcEngine.ChildReferenceType)"/> method.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.ChildReferenceType.ReferencesWithFormulas">
            <summary>
            Returns references that have formulas, like column references or footer references, 
            but not cell references.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.ResolveReferenceType">
            <summary>
            Specifies the type of reference being resolved in the <see cref="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.ResolveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ResolveReferenceType)"/> method.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.ResolveReferenceType.LeftHandSide">
            <summary>
            Specifies that the reference being resolved is the lvalue of the formula.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.ResolveReferenceType.RightHandSide">
            <summary>
            Specifies that the reference being resolved is an rvalue of the formula.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.IUltraCalcReferenceCollection">
            <summary>
            Collection of <b>IUltraCalcReference</b> objects.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcFormulaStates">
            <summary>
            Provides a set of properties used by the <b>UltraCalcEngine</b> to manage the recalculation network.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcFormulaStates.Reset">
            <summary>
            Resets the bits to false.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormulaStates.RecalcVisible">
            <summary>
            Denotes whether the reference is visible.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcFormulaStates.RecalcDeferred">
            <summary>
            Denotes whether the calculation of the reference's formula can be deferred until it is visible.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError">
            <summary>
            Implementation of <b>IUltraCalcReference</b> interface that denotes a reference error.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> instance.
            </summary>
            <param name="reference">Absolute name of reference.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> instance around a given inner <b>Exception</b> object.
            </summary>
            <param name="reference">Absolute name of reference.</param>
            <param name="exception">Exception for which the reference should be created.</param>
            <remarks>
            <p class="body">When an <i>exception</i> is specified, this constructor initializes the
            <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Message"/> text to the message on the <i>exception</i>, if any.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.#ctor(System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> instance using a given message text.
            </summary>
            <param name="reference">Absolute name of reference.</param>
            <param name="message">Localized error message.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#CreateReference(System.String)">
            <summary>
            Create a new reference relative to this reference.  
            </summary>
            <param name="referenceString">The reference string.</param>
            <returns>Always returns null (Nothing in Visual Basic .NET) because an
            <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> cannot have another reference
            created that is relative to itself.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#CreateRange(System.String,System.String)">
            <summary>
            Create a Range reference relative to this reference.
            </summary>
            <param name="fromReference">The start of the range, inclusive.</param>
            <param name="toReference">The end of the range, inclusive.</param>
            <returns>Always returns null (Nothing in Visual Basic .NET) because an
            <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> cannot have other references
            created that are relative to itself.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#ResolveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ResolveReferenceType)">
            <summary>
            Resolves a reference relative to this reference.
            </summary>
            <param name="reference">The reference to resolve.</param>
            <param name="referenceType">Indicates whether the reference being resolved
            is the lvalue of the formula, or an rvalue of the formula.</param>
            <returns>Always returns <i>reference</i>, because an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/>
            has no relationship to other references.</returns>
            <remarks>
            <p class="body">An <b>UltraCalcReferenceError</b> cannot be used to resolve to another
            reference, because of its limited dominion with respect to having no relationships with
            other <b>IUltraCalcReference</b> implementations. By returning the incoming <i>reference</i>,
            the calculation engine's <i>reference resolution pipeline</i> can continue to attempt to 
            resolve it.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#MarkRelativeIndices(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            For each reference tuple in this reference that has a relative index, mark the
            corresponding tuple in reference.
            </summary>
            <param name="reference">An <b>IUltraCalcReference</b>-implementing object to be marked.</param>
            <remarks>
            <p class="body">
            Because an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> has no relationships to other references,
            it does not have relative indices.  Therefore, this method has been implemented to perform
            no operation.</p>
            <seealso cref="!:ResolveReference"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#ContainsReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if this reference contains a reference supplied as an argument.
            </summary>
            <param name="reference">The candidate to check for containment of</param>
            <returns>True if <i>reference</i> is contained by this reference.</returns>
            <remarks>
            <p class="body">This reference returns False for any <i>reference</i> other
            than itself.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#IsSubsetReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Indicates whether another reference is a proper subset of this reference.
            </summary>
            <param name="reference">The reference that may be a proper subset.</param>
            <returns>Always returns false.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#IsSiblingReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Indicates whether another reference is a sibling of this reference.
            </summary>
            <param name="reference">The reference that may be a sibling.</param>
            <returns>Always returns false.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Message">
            <summary>
            Gets the localized message text for this reference error.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#Context">
            <summary>
            Returns a context for the Reference.
            </summary>
            <value>There is no context for an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/>,
            therefore this implementation always returns null (Nothing in Visual Basic .NET).
            </value>
            <remarks>
            <p class="body">Returns a meaningful object context for the reference.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#IsDisposedReference">
            <summary>
            True indicates that the reference has been disposed.  Read Only.
            </summary>
            <value>An <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> is never disposed
            as long as client code holds a reference to it, therefore it shall
            always return False.</value>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#AbsoluteName">
            <summary>
            The fully qualified unique name for the referenced element.  Read Only.
            </summary>
            <remarks>
            <seealso cref="!:ElementName"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#ElementName">
            <summary>
            The unqualified name for the referenced element.  Read Only.
            </summary>
            <remarks>
            <p class="body">Because an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> cannot
            have relationships to other <b>IUltraCalcReference</b> objects, the
            <see cref="!:AbsoluteName"/> and <b>ElementName</b> shall always be identical.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#Value">
            <summary>
            The value of this reference error.
            </summary>
            <value>
            Always indicates a #REF! reference error; assignments to this property are ignored.
            </value>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#Formula">
            <summary>
            The <b>IUltraCalcFormula</b>, if any, associated with this <b>UltraCalcReferenceError</b>.
            </summary>
            <value>
            Always returns null (Nothing in Visual Basic .NET).
            </value>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> cannot hold an <b>IUltraCalcFormula</b>,
            therefore this property always returns null (Nothing in Visual Basic .NET).</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#RecalcDeferred">
            <summary>
            Indicates whether recalculating the reference's formula can deferred until it becomes visible.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#RecalcVisible">
            <summary>
            Flag used by the <b>UltraCalcEngine</b> to manage the recalculation network,
            denoting whether this reference is visible.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#References">
            <summary>
            Gets the child references belonging to this reference.
            </summary>
            <value>
            Always returns null (Nothing in Visual Basic .NET) because the
            <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> contains no other references
            besides itself.
            </value>
            <remarks>
            <seealso cref="!:IsEnumerable"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#IsEnumerable">
            <summary>
            Indicates whether <b>References</b> contains one or more <b>IUltraCalcReferences</b>
            that can be enumerated.
            </summary>
            <value>Always returns False.</value>
            <remarks>
            <seealso cref="!:References"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#IsDataReference">
            <summary>
            Indicates whether this reference is a data reference.
            </summary>
            <value>Always returns False because the <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> has no
            useful data value.</value>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError.Infragistics#WebUI#CalcEngine#IUltraCalcReference#Parent">
            <summary>
            The Parent reference of this referenced element.
            </summary>
            <value>Always returns null (Nothing in Visual Basic .NET) because reference
            errors have no parent reference.</value>
            <remarks>
            <p class="body">
            Used to navigate the element hierarchy.  If this referenced element is the root
            element, as any <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/> is, then <b>Parent</b>
            must returns null (Nothing in Visual Basic .NET).</p>
            <p class="body">
            This property is Read Only.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcValue">
            <summary>
            Provides methods that manage a composite data type representing an <b>UltraCalc</b> value.
            </summary>
            <remarks>
            <p class="body">An instance of this class may contain one of several base data types including doubles, singles, integers, booleans, strings, and error values.</p>
            <p class="body">The class implements the <b>IConvertible</b> interface providing methods to perform conversions between the basic data types.</p>
            <p class="body">Additionally, the class provides methods to perform comparisons and conversions between <b>UltraCalcValue</b> objects and primitive value types.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.#ctor(System.Object)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValue"/> instance.
            </summary>
            <param name="initialValue">Object to be represented by the <b>UltraCalcValue</b> within the calculation network.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValue"/> with a default null value.
            </summary>
            <remarks>
            <p class="body">Creates a null (Nothing in Visual Basic .NET) valued <b>UltraCalcValue</b> instance.
            This null value is different from the <b>DBNull</b>.Value, developers that need to instantiate an
            <b>UltraCalcValue</b> containing <b>DBNull</b>.Value should use <see cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.#ctor(System.Object)"/>
            instead.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt">
            <summary>
            Converts this UltraCalc value into a 32-bit signed integer.
            </summary>
            <returns>A signed 32-bit integer value containing the equivalent value of this instance.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a 32-bit signed integer.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A signed 32-bit integer value containing the equivalent value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to an integer from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string
            (<b>String</b>.Empty), then this method returns 0.</p>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Int32</b>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Int32</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Int32</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Int32</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToReference">
            <summary>
            Converts this UltraCalc value into an <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/>.
            </summary>
            <returns>If this instance contains an object type implementing the <b>IUltraCalcReference</b> interface, then this method returns that object, otherwise an <b>UltraCalcReferenceError</b> is returned.</returns>
            <remarks>
            <p class="body">
            The UltraCalc value's underlying data type must be an class implementing <b>IUltraCalcReference</b> in order for this method to return a reference from it.
            When no <b>IUltraCalcReference</b> can be returned, an <b>UltraCalcReferenceError</b> is returned.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToErrorValue">
            <summary>
            Convert this UltraCalc value into an <b>IUltraCalcErrorValue</b>.
            </summary>
            <returns>A <b>UltraCalcErrorValue</b> containing the equivalent error code to the value of this instance.</returns>
            <remarks>
            <p class="body">
            This method returns an <b>UltraCalcErrorValue</b> whose error code is set this instance's error code.
            <p></p>
            If this instance does not contain an error, an <b>UltraCalcErrorValue</b> containing a default value is returned.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToString">
            <summary>
            Returns a string representation of this UltraCalc value.
            </summary>
            <returns>String representation of UltraCalc value.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.AreValuesEqual(Infragistics.WebUI.CalcEngine.UltraCalcValue,Infragistics.WebUI.CalcEngine.UltraCalcValue)">
            <summary>
            Indicates if the value of the specified <b>UltraCalcValue</b> is equivalent to the <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> of another.
            </summary>
            <param name="x">First UltraCalcValue to compare.</param>
            <param name="y">Second UltraCalcValue to compare.</param>
            <returns>True if the values are the same; otherwise false is returned.</returns>
            <remarks>
            <p class="body">Equality is symmetric, therefore <b>UltraCalcValue</b>.AreValuesEqual(<i>x</i>, <i>y</i>)
            must yield the same result as <b>UltraCalcValue</b>.AreValuesEqual(<i>y</i>, <i>x</i>).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.System#IComparable#CompareTo(System.Object)">
            <summary>
            Compares current instance with the supplied <b>UltraCalcValue</b> instance.
            </summary>
            <param name="otherValue">Another <b>UltraCalcValue</b> that is being compared
            to the current instance.</param>
            <returns>Less than 0 when the current instance is less than <i>otherValue</i>,
            0 when the instances are value-equivalent, and greater than 0 when the current
            instance is greater than <i>otherValue</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.CompareTo(Infragistics.WebUI.CalcEngine.UltraCalcValue)">
            <summary>
            Compares current instance with the supplied <b>UltraCalcValue</b> instance.
            </summary>
            <param name="otherValue">Another <b>UltraCalcValue</b> that is being compared
            to the current instance.</param>
            <returns>Less than 0 when the current instance is less than <i>otherValue</i>,
            0 when the instances are value-equivalent, and greater than 0 when the current
            instance is greater than <i>otherValue</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.CompareTo(Infragistics.WebUI.CalcEngine.UltraCalcValue,Infragistics.WebUI.CalcEngine.UltraCalcValue)">
            <summary>
            Compares two <b>UltraCalcValue</b> instances and returns an indication
            of their value relative to each other.are -1 if x is less than y, 
            1 if x is greater than y and 0 if x and y are equal.
            </summary>
            <param name="leftOperand">An <b>UltraCalcValue</b> on the left-side of a relative
            comparison operator.</param>
            <param name="rightOperand">An <b>UltraCalcValue</b> on the right-side of a relative
            comparison operator.</param>
            <returns>This method returns -1 if <i>leftOperand</i> is less than <i>rightOperand</i>,
            0 if both operands are equal, and +1 if <I>leftOperand</I> is greater than <i>rightOperand</i>.
            </returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.IsSameValue(Infragistics.WebUI.CalcEngine.UltraCalcValue)">
            <summary>
            Indicates if the specified <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValue"/> has the same <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> as this instance.
            </summary>
            <param name="otherValue">UltraCalcValue to compare this instance's value against.</param>
            <returns>True if the <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> of both instances are equal; otherwise false.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>UInt64</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A 64-bit unsigned integer equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to an unsigned long integer from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string
            (<b>String</b>.Empty), then this method returns 0.</p>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>UInt64</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>UInt64</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>UInt64</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>UInt64</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.System#IConvertible#ToSByte(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>SByte</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>An 8-bit signed integer equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a signed byte from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>SByte</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>SByte</b>.MaxValue. This exception may frequently occur if
            an application is working with values that are not representable within one-byte.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>SByte</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>SByte</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDouble">
            <summary>
            Converts this UltraCalc value into a <b>Double</b> data type.
            </summary>
            <returns>A 64-bit double-precision value equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a double from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string
            (<b>String</b>.Empty), then this method returns 0.</p>
            <p class="body">This method uses the invariant culture when a cultural context is needed for converting from a <b>String</b>
            to a <b>Double</b>. See the <see cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDouble(System.IFormatProvider)"/> method if a culture-specific format provider is needed
            to convert a string value into a number.</p>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Double</b>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Double</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Double</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Double</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDouble(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>Double</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A 64-bit double-precision value equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a double from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string
            (<b>String</b>.Empty), then this method returns 0.</p>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Double</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Double</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Double</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Double</b>).
            </exception>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDouble(System.Double@)" -->
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDateTime">
            <summary>
            Converts this UltraCalc value into a <b>DateTime</b> data type.
            </summary>
            <returns>A <b>DateTime</b> structure whose value is equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a <b>DateTime</b> from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDateTime(System.IFormatProvider)"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted date/time string that was valid under an originating culture, but
            that string cannot be converted into a <b>DateTime</b> using the invariant culture.</exception>
            <exception cref="T:System.InvalidCastException">
            <p class="body">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>DateTime</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>DateTime</b>).</p>
            <p class="body">Or</p>
            <p class="body">Thrown when the value contained by this <b>UltraCalcValue</b> is negative, or exceeds
            the maximum date/time representation of the <b>DateTime</b> structure as specified by <b>DateTime</b>.MaxValue.</p>
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDateTime(System.IFormatProvider)">
            <summary>
            Convert this UltraCalc value into a DateTime data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A <b>DateTime</b> equivalent to the value of this instance</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a <b>DateTime</b> from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDateTime"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted date/time string that was valid under an originating culture, but
            that string cannot be converted into a <b>DateTime</b> using <i>provider</i>.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when this <b>UltraCalcValue</b>
            originally had an <b>Int64</b> value that is outside of the legal domain of .NET
            <b>DateTime</b> values.</exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToSingle">
            <summary>
            Converts this UltraCalc value into a <b>Single</b> data type.
            </summary>
            <returns>A 32-bit single-precision floating-point equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a float from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string
            (<b>String</b>.Empty), then this method returns 0f.</p>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Single</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Single</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Single</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Single</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToSingle(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>Single</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A 32-bit single-precision floating-point equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a float from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string
            (<b>String</b>.Empty), then this method returns 0f.</p>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Single</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Single</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Single</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Single</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToBoolean">
            <summary>
            Converts this UltraCalc value into a <b>Boolean</b> data type.
            </summary>
            <returns>Returns a <b>Boolean</b> equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a bool from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string
            (<b>String</b>.Empty), then this method returns false.</p>
            <p class="body">If <b>Value</b> is the number, 0.0, then this method returns false. Any other numeric value causes this
            conversion method to return true.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToBoolean(System.IFormatProvider)"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            string that cannot be converted into either of the <b>Boolean</b> values, True or False.
            </exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type
            of value retained by this <b>UltraCalcValue</b> and <b>Boolean</b> is not possible, or not
            supported by the actual type's implementation of <b>IConvertible</b>.
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToBoolean(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>Boolean</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>Returns a <b>Boolean</b> equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a bool from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string
            (<b>String</b>.Empty), then this method returns false.</p>
            <p class="body">If <b>Value</b> is the number, 0.0, then this method returns false. Any other numeric value causes this
            conversion method to return true.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToBoolean"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            string that cannot be converted into either of the <b>Boolean</b> values, True or False.
            </exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type
            of value retained by this <b>UltraCalcValue</b> and <b>Boolean</b> is not possible, or not
            supported by the actual type's implementation of <b>IConvertible</b>.
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt32">
            <summary>
            Converts this UltraCalc value into an <b>Int32</b> data type.
            </summary>
            <returns>A signed 32-bit integer value containing the equivalent value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to an integer from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string
            (<b>String</b>.Empty), then this method returns 0.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt32(System.IFormatProvider)"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Int32</b>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Int32</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Int32</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Int32</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt32(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into an <b>Int32</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A signed 32-bit integer value containing the equivalent value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to an integer from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string
            (<b>String</b>.Empty), then this method returns 0.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt32(System.IFormatProvider)"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Int32</b>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Int32</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Int32</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Int32</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>UInt16</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>An unsigned 16-bit short integer value containing the equivalent value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to an unsigned short integer from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string (<b>String</b>.Empty),
            then this method returns 0.</p>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>UInt16</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>UInt16</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>UInt16</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>UInt16</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt16">
            <summary>
            Converts this UltraCalc value into a <b>Int16</b> data type.
            </summary>
            <returns>A signed 16-bit short integer value containing the equivalent value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a signed short integer from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string (<b>String</b>.Empty),
            then this method returns 0.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt16(System.IFormatProvider)"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Int16</b>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Int16</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Int16</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Int16</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt16(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>Int16</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information</param>
            <returns>A signed 16-bit short integer value containing the equivalent value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a signed short integer from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string (<b>String</b>.Empty),
            then this method returns 0.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt16"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Int16</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Int16</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Int16</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Int16</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToString(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into an instance of the <b>String</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A <b>String</b> instance equivalent, but not necessarily referentially-identical to, the value of this <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValue"/>.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a string from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET) or <b>DBNull</b>.Value, then the empty string (<b>String</b>.Empty)
            is returned.</p>
            <p class="note">The behavior of calling <b>ToString</b> on values whose actual type is not represented in the <a href="ms-help://MS.NETFrameworkSDK/cpref/html/frlrfSystemTypeCodeClassTopic.htm">TypeCode</a>
            enumeration (that is, calling <see cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.GetTypeCode"/> returns <b>TypeCode</b>.Empty for a value type) is undefined. Developers can instead
            access these types of values by calling <b>ToString</b> on the object returned by <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToByte">
            <summary>
            Converts this UltraCalc value into a <b>Byte</b> data type.
            </summary>
            <returns>An 8-bit unsigned integer equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to an unsigned byte from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToByte(System.IFormatProvider)"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Byte</b>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Byte</b>.MaxValue. This exception may frequently occur if
            an application is working with values that are not representable within one-byte.</exception>
            <exception cref="T:System.InvalidCastException">
            <p class="body">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Byte</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Byte</b>).</p>
            <p class="body">Or</p>
            <p class="body">Thrown when the value of this <b>UltraCalcValue</b> instance is
            null and has no equivalent representation in <b>Byte</b>.</p>
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToByte(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>Byte</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>An 8-bit unsigned integer equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to an unsigned byte from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToByte"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Byte</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Byte</b>.MaxValue. This exception may frequently occur if
            an application is working with values that are not representable within one-byte.</exception>
            <exception cref="T:System.InvalidCastException">
            <p class="body">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Byte</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Byte</b>).</p>
            <p class="body">Or</p>
            <p class="body">Thrown when the value of this <b>UltraCalcValue</b> instance is
            null and has no equivalent representation in <b>Byte</b>.</p>
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToChar">
            <summary>
            Converts this UltraCalc value into a <b>Char</b> data type.
            </summary>
            <returns>A Unicode character equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a Unicode character from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToChar(System.IFormatProvider)"/>
            </remarks>
            <exception cref="T:System.InvalidCastException">
            <p class="body">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Char</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains a null (Nothing in Visual Basic .NET) value, which has no
            corresponding representation as a <b>Char</b>).</p>
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToChar(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>Char</b> type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A Unicode character equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a Unicode character from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToChar"/>
            </remarks>
            <exception cref="T:System.InvalidCastException">
            <p class="body">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Char</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains a null (Nothing in Visual Basic .NET) value, which has no
            corresponding representation as a <b>Char</b>).</p>
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt64">
            <summary>
            Converts this UltraCalc value into an <b>Int64</b> data type.
            </summary>
            <returns>A 64-bit signed integer equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a signed long integer from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string (<b>String</b>.Empty),
            then this method returns 0.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt64(System.IFormatProvider)"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Int64</b>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Int64</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Int64</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Int64</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt64(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into an <b>Int64</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A 64-bit signed integer equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a signed long integer from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string (<b>String</b>.Empty),
            then this method returns 0.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToInt64"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Int64</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Int64</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Int64</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Int64</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.GetTypeCode">
            <summary>
            Returns the <b>TypeCode</b> for this instance.
            </summary>
            <returns>The enumerated constant that is the <b>TypeCode</b> of the class or
            value type contained within this <b>UltraCalcValue</b> object.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDecimal">
            <summary>
            Converts this UltraCalc value into a <b>Decimal</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A <b>Decimal</b> equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a decimal from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string (<b>String</b>.Empty),
            then this method returns 0.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDecimal(System.IFormatProvider)"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Decimal</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Decimal</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Decimal</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Decimal</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDecimal(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>Decimal</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A <b>Decimal</b> equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to a decimal from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string (<b>String</b>.Empty),
            then this method returns 0.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToDecimal"/>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>Decimal</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>Decimal</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>Decimal</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>Decimal</b>).
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Convert this UltraCalc value into an arbitrary data type, if such a conversion is supported.
            </summary>
            <param name="conversionType">The <b>Type</b> to which the value of this instance is converted.</param>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>An object reference of type <i>conversionType</i> whose value is equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion, this method may throw an <b>InvalidCastException</b> or
            other related exception. For example, there is no conversion allowed between any <i>conversionType</i> and
            a <b>DBNull</b> value.</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when either the supplied <i>conversionType</i> or
            <i>provider</i> is null (Nothing in Visual Basic .NET).</exception>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and <i>conversionType</i> is a numeric type.</exception>
            <exception cref="T:System.OverflowException">Thrown when <i>conversionType</i> represents a data
            type that is not wide enough to contain the number currently retained by this <b>UltraCalcValue</b>.
            In handling this exception, developers should attempt to convert to a wider <i>conversionType</i> (for
            instance, if conversion to <b>Int16</b> fails, try converting to <b>Int32</b>).</exception>
            <exception cref="T:System.InvalidCastException">
            <p class="body">Thrown when <i>conversionType</i> is not a primitive value type, an <b>IUltraCalcReference</b>,
            or a type that supports <b>IConvertible</b>, <i>OR</i>,</p>
            <p class="body">Thrown when <i>conversionType</i> supports <b>IConvertible</b> but its implementation of that
            interface does not define a conversion from the actual type of value retained by this <b>UltraCalcValue</b>;
            call <see cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.GetTypeCode"/> for more information on the type of this value in that case.</p>
            </exception>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <summary>
            Converts this UltraCalc value into a <b>UInt32</b> data type.
            </summary>
            <param name="provider">An <b>IFormatProvider</b> interface implementation that supplies culture-specific formatting information.</param>
            <returns>A <b>UInt32</b> equivalent to the value of this instance.</returns>
            <remarks>
            <p class="body">If there is no meaningful conversion to an unsigned integer from <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/>, an exception will be thrown.</p>
            <p class="body">If <see cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value"/> is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value, or the empty string (<b>String</b>.Empty),
            then this method returns 0.</p>
            </remarks>
            <exception cref="T:System.FormatException">Thrown when this <b>UltraCalcValue</b> contains a
            locale-dependent formatted numeric string that was valid under a originating culture, or any
            non-numeric string, and that string cannot be converted into <b>UInt32</b> using <i>provider</i>.</exception>
            <exception cref="T:System.OverflowException">Thrown when this <b>UltraCalcValue</b> contains a
            value exceeding the capacity of <b>UInt32</b>.MaxValue.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when a conversion from the actual type of value
            retained by this <b>UltraCalcValue</b> and <b>UInt32</b> is not possible (for example, if this
            <b>UltraCalcValue</b> contains as it's value a custom business object that implements <b>IConvertible</b>
            but does not support conversion into an <b>UInt32</b>).
            </exception>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.IsReference">
            <summary>
            Returns whether this class instance contains a <b>IUltraCalcReference</b> value
            </summary>
            <returns>True if this instance class contains a reference, else false</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.IsError">
            <summary>
            Returns whether this class instance contains an error value
            </summary>
            <returns>True if this class instance contains an error, else false</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.IsNull">
            <summary>
            Indicates whether this UltraCalc value contains any sort of null value.
            </summary>
            <returns>Returns true if this instance contains any sort of null value, otherwise it returns false.</returns>
            <remarks>
            <p class="body">This property indicates if the current value held within this <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValue"/>
            is null (Nothing in Visual Basic .NET), <b>DBNull</b>.Value (a null value in a column bound to a relational
            database, or datastore employing tri-level logic), or an empty string (<b>String</b>.Empty).</p>
            <p class="note">While some of the <b>IConvertible</b> conversion functions to primitive value types may
            convert an originally-null value to 0 (or 0.0), the reverse mapping is not supported, <i>i.e.</i>, it is
            not possible (and <b>IsNull</b> does not indicate as true) to interpret a value of 0 (or 0.0) as
            being null in the sense of this property.</p>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.IsDBNull"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.IsDBNull">
            <summary>
            Indicates whether this UltraCalc value contains <b>DBNull</b>.
            </summary>
            <returns>Returns true if this instance contains <b>DBNull</b>.Value, otherwise it returns false.</returns>
            <remarks>
            <p class="body">This property is used to determine whether the value contained by this instance of
            an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValue"/> is equal to <b>DBNull</b>.Value. It returns false when this instance
            contains a null (Nothing in Visual Basic .NET) Common Language Runtime object reference, because null
            (Nothing) is a distinct value from <b>DBNull</b>.Value. Think of <b>IsDBNull</b> as returning true
            for a subset of the nullable conditions for which <b>IsNull</b> returns true (<i>i.e.</i>, it is more
            specific than <b>IsNull</b>).</p>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.IsNull"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.IsString">
            <summary>
            Indicates whether this UltraCalc value contains a string value.
            </summary>
            <returns>Returns true if this instance contains a string, otherwise this property returns false.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.IsBoolean">
            <summary>
            Indicates whether this UltraCalc value contains a boolean flag.
            </summary>
            <returns>Returns true if this instance contains a boolean, otherwise it returns false.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcValue.Value">
            <summary>
            Gets the underlying value contained within this <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValue"/> instance.
            </summary>
            <remarks>
            <p class="body">Because <b>UltraCalcValue</b> instances are atomic, their <b>Value</b> property
            is immutable and read only. Developers that need to create an <b>UltraCalcValue</b> with a specific
            value must instantiate a new <b>UltraCalcValue</b> using the <see cref="M:Infragistics.WebUI.CalcEngine.UltraCalcValue.#ctor(System.Object)"/>
            constructor.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.IUltraCalcFormula">
            <summary>
            Interface implemented by the UltraCalcEngine's formula objects.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcFormula.Evaluate(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Evaluate the compiled expression against the given base reference
            </summary>
            <param name="reference">Base reference used to resolve relative references into absolute references</param>
            <returns>Retuns an UltraCalcValue containing result of formula evaluation</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcFormula.FormulaString">
            <summary>
            Formula string.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcFormula.HasSyntaxError">
            <summary>
            Returns true if the formula has a syntax error. Formulas with syntax errors can not be added to the calc-network.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcFormula.HasAlwaysDirty">
            <summary>
            Returns whether the formula contains an always dirty function.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcFormula.SyntaxError">
            <summary>
            Syntax error message. Returns null if the formula has no syntax errors, as would be indicated by <see cref="P:Infragistics.WebUI.CalcEngine.IUltraCalcFormula.HasSyntaxError"/> method.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcFormula.BaseReference">
            <summary>
            Base reference associated with the formula.
            </summary>
            <remarks>
            <p class="body">Base reference associated with the formula. For example, in the case of a column formula, BaseReference would be the column reference.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcFormula.References">
            <summary>
            Retuns a collection of references contained in the formula token string.
            </summary>
            <value>Collection of IUltraCalcReferences.</value>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs">
            <summary>
            Event arguments class used to provide an <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs.#ctor(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs"/>.
            </summary>
            <param name="reference">Reference passsed to event handlers.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs.Reference">
            <summary>
            Returns the assicated <b>IUltraCalcReference</b>.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.IUltraCalcManager">
            <summary>
            IUltraCalcManager interface.  The _CALCMANAGER_ element implements this interface.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.EnsureCalculated(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.Boolean)">
            <summary>
            Checks to see if a reference is dirty, and optionally waits for it to be recalculated.
            </summary>
            <param name="reference">Reference whose dirty state is requested.</param>
            <param name="wait">Denotes whether caller wants to wait until the reference is recalculated.</param>
            <returns>True if the reference is dirty.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.CompileFormula(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.String)">
            <summary>
            Compiles the specified formula. Returns an instance of IUltraCalcFormula which represents a formula. Throws NullReferenceException if baseReference or formula is null. NOTE: This method does not add the formula to the calculation network.
            </summary>
            <param name="baseReference">Base reference to use for the reference parsing. Returned formula instance will make use this reference as its base reference during parsing as well as during evaluation time to resolve relative references.</param>
            <param name="formula">The formula string.</param>
            <remarks>
            <p class="body">Returns an instance of IUltraCalcFormula. IUltraCalcFormula has information on any syntax or reference errors.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.CompileFormula(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.String,System.Boolean)">
            <summary>
            Compiles the specified formula. Returns an instance of IUltraCalcFormula which represents a formula. Throws NullReferenceException if baseReference or formula is null. NOTE: This method does not add the formula to the calculation network.
            </summary>
            <param name="baseReference">Base reference to use for the reference parsing. Returned formula instance will make use this reference as its base reference during parsing as well as during evaluation time to resolve relative references.</param>
            <param name="formula">The formula string.</param>
            <param name="suppressSyntaxErrorEvent">Pass in true to prevent the Syntax error event from firing.</param>
            <remarks>
            <p class="body">Returns an instance of IUltraCalcFormula. IUltraCalcFormula has information on any syntax or reference errors.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.AddFormula(Infragistics.WebUI.CalcEngine.IUltraCalcFormula)">
            <summary>
            Adds the specified formula to the calculation network. This method takes no action if the formula has already been added to the calculcation network. Also it throws an exception if the formula contains a syntax error. However if it contains a reference error, it still adds the formula to the calculation network. This method throws an exception if the formula was compiled using a different IUltraCalcManager.
            </summary>
            <param name="formula"></param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.RemoveFormula(Infragistics.WebUI.CalcEngine.IUltraCalcFormula)">
            <summary>
            Removes the specified formula from the calculation network. Takes no action if the formula doesn't exist in the calculation network.
            </summary>
            <param name="formula"></param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.NotifyValueChanged(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Notifies the calc manager of the change in reference's value.
            </summary>
            <param name="reference"></param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.RemoveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Removes the reference and the associated formula from the calc network.
            </summary>
            <param name="reference"></param>
            <remarks>
            <p class="body"><b>RemoveReference</b> removes the specified reference from the calculation network. If the reference has a formula, the formula is also removed.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.RemoveRowReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Deletes the reference and the associated formula from the calc network.
            </summary>
            <param name="reference"></param>
            <remarks>
            <p class="body"><b>RemoveRowReference</b> removes the specified reference from the calculation network. This method should be used when removing the reference for an item in a collection, such as an UltraGridRow. For other (non-collection) objects, use RemoveReference. If the reference has a formula, the formula is also removed.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.AddReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Adds the reference and the associated formula to the calc network.
            </summary>
            <param name="reference"></param>
            <remarks>
            <p class="body"><b>AddReference</b> adds the specified reference to the calculation network. </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.AddRowReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Inserts the reference and the associated formula to the calc network.
            </summary>
            <param name="reference"></param>
            <remarks>
            <p class="body"><b>AddRowReference</b> adds the specified reference to the calculation network. This method should be used when adding a reference for an item in a collection, such as an UltraGridRow. For other (non-collection) objects, use AddReference.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.RowsCollectionReferenceSorted(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Notifies the Calc Manager that a Rows collection was sorted.
            </summary>
            <param name="reference"></param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.RowsCollectionReferenceResynched(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Notifies the Calc Manager that a Rows collection was resynched.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.RowsCollectionVisibilityChanged(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Notifies the Calc Manager that the visibility of part of a Rows Collection has changed.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.GetReference(System.String)">
            <summary>
            Returns a reference with the specified name. If no such reference exists, returns null.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.AddParticipant(Infragistics.WebUI.CalcEngine.IUltraCalcParticipant)">
            <summary>
            Adds an IUltraCalcParticipant to the CalcManager. A Participant must be added to the CalcManager before it can be used in any calculations.
            </summary>
            <param name="participant">An IUltraCalcParticipant to be added to the CalcManager.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.RemoveParticipant(Infragistics.WebUI.CalcEngine.IUltraCalcParticipant)">
            <summary>
            Removes an IUltraCalcParticipant from the CalcManager. A Participant should be removed from the CalcManager before it is disposed.
            </summary>
            <param name="participant">An IUltraCalcParticipant to be removed to the CalcManager.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.RaiseFormulaError(Infragistics.WebUI.CalcEngine.IUltraCalcReference,System.Object,Infragistics.WebUI.CalcEngine.UltraCalcErrorValue)">
            <summary>
            Used to notify the _CALCMANAGER_ that a calculation or reference exception has occurred.
            </summary>
        </member>
        <member name="E:Infragistics.WebUI.CalcEngine.IUltraCalcManager.CalcEngineDirtyValue">
            <summary>
            Event notification when a reference is marked as dirtied.
            </summary>
        </member>
        <member name="E:Infragistics.WebUI.CalcEngine.IUltraCalcManager.CalcEngineRecalcValue">
            <summary>
            Event notification when the value of a reference has been calculated.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventHandler">
            <summary>
            Delegate used for an event involving an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceEventArgs"/>.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.FormulaErrorEventArgsBase">
            <summary>
            Event arguments for the Formula Error events of an <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcManager"/>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.FormulaErrorEventArgsBase.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.FormulaErrorEventArgsBase"/> instance.
            </summary>
            <param name="context">Object that provides some context about the reference for which the formula error has occurred.</param>
            <param name="errorDisplayText">Error message that should be rendered.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.FormulaErrorEventArgsBase.Context">
            <summary>
            Gets the context for the formula error.
            </summary>
            <remarks><p class="body">The context is the target object of the formula. It could be an UltraGridCell, a Control, a NamedReference, etc.</p></remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.FormulaErrorEventArgsBase.ErrorDisplayText">
            <summary>
            Returns or sets the error message to display.
            </summary>
            <remarks><p class="body">The error text to be displayed. The display of the error text will vary depending on the Context. A Control on a form will display the ErrorDisplayText as the tooltip to an ErrorProvider icon (if ErrorProviders are being used). A NamedReference will not display the ErrorDisplayText. A Grid cell will display the ErrorDisplayText in the cell, if possible.</p></remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.FormulaCalculationErrorEventArgs">
            <summary>
            Event arguments for the FormulaCalculationError or FormulaReferenceError events of an <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcManager"/>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.FormulaCalculationErrorEventArgs.#ctor(System.Object,System.String,System.Object,Infragistics.WebUI.CalcEngine.UltraCalcErrorValue)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.FormulaCalculationErrorEventArgs"/> instance.
            </summary>
            <param name="context">Object for which the calculation error is occuring.</param>
            <param name="errorDisplayText">Error message to display.</param>
            <param name="errorInfo">UltraCalcErrorValue providing information about the error.</param>
            <param name="errorValue">Error value that should be used to update the object whose calculation resulted in an error.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.FormulaCalculationErrorEventArgs.ErrorValue">
            <summary>
            Gets the UltraCalcErrorValue.
            </summary>
            <remarks>
            <p class="body">The value to be used when an error occurs in a calculation. By default, the CalcManager will attempt to set the appropriate proeprty on the target to an error string. In many cases, however, this string will not be acceptable, either because it is not clear or because the target can only accept non-string datatypes. Use ErrorValue to set a default value to be set on the target when an error has occurred.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.FormulaCalculationErrorEventArgs.ErrorInfo">
            <summary>
            Gets information regarding the UltraCalcErrorValue.
            </summary>
            <remarks><p class="body">Provides detailed information about the error, such as the exact type of error.</p></remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.IUltraCalcParticipant">
            <summary>
            Interface implemented by elements that have built-in UltraCalc formula support. For example, the UltraWebGrid would implement this interface.
            </summary>	
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcParticipant.GetDesignerReferences(Infragistics.WebUI.CalcEngine.IFormulaProvider)">
            <summary>
            Returns a tree structure of references that the formula builder uses to display a list of references in a tree that the user can use to build a formula. In the case of the UltraWebGrid, this method returns a hierarchical structure of bands and columns.
            </summary>
            <param name="formulaProvider">Optional formula provider instance that is being designed within the IDE. This parameter can be null (Nothing in Visual Basic .NET).</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IUltraCalcParticipant.RecreateReference">
            <summary>
            Ask the <b>IUltraCalcParticipant</b> to recreate any <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/>s that belong to it.
            </summary>
            <remarks>
            <p class="body">
            This is necessary when the name of the participating <b>Control</b> (and therefore its reference name(s)) changes. The _CALCMANAGER_ automatically calls this method at design-time when the name of the <b>Control</b> changes.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcParticipant.CalcManager">
            <summary>
            Gets and sets the _CALCMANAGER_ implementation. 
            </summary>
            <remarks>
            <p class="body">An implementor should not create an instance of the _CALCMANAGER_ element on its own. 
            The _CALCMANAGER_ element on the Page will set this property to itself.</p>
            <p class="body">The set implementation of this property must call <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcManager">AddParticipant</see> on the <b>IUltraCalcManager</b> to add itself into the _CALCMANAGER_'s participants collection.</p>
            <p class="body">Also, the implementor should call <see cref="M:Infragistics.WebUI.CalcEngine.IUltraCalcManager.RemoveParticipant(Infragistics.WebUI.CalcEngine.IUltraCalcParticipant)">RemoveParticipant</see> when it is getting disposed.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcParticipant.RootReference">
            <summary>
            The root reference is the root <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/> object used by the implementor.
            </summary>
            <remarks><p class="body">This property should return a root reference whose <see cref="M:Infragistics.WebUI.CalcEngine.IUltraCalcReference.CreateReference(System.String)">CreateReference</see> implementation can return a given child reference based on an absolute name the UltraCalc engine presents it with.</p></remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IUltraCalcParticipant.SuppressCalcSettings">
            <summary>
            Returns whether the participant should suppress the <see cref="!:CalcSettings"/> extender property.
            </summary>
            <remarks>
            <p class="body">Return true to tell the _CALCMANAGER_ not to extend the participant with an <b>UltraCalcSettings</b> property.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.ReferenceNodeType">
            <summary>
            Enumeration used to indicate the type of object that is represented by the <see cref="T:Infragistics.WebUI.CalcEngine.ReferenceNode"/>.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.ReferenceNodeType.Control">
            <summary>
            A control or sub-object of a control Node.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.ReferenceNodeType.NamedReferencesGroup">
            <summary>
            The NamedReferencesGroup Node.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.ReferenceNodeType.NamedReference">
            <summary>
            A NamedReference Node.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.ReferenceNodeType.ControlsGroup">
            <summary>
            The ControlsGroup Node.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.ReferenceNodeType.NamedReferencesAllGroup">
            <summary>
            The NamedReferences "All" Group Node.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.ReferenceNodeType.NamedReferencesUnassignedGroup">
            <summary>
            The NamedReferences "Unassigned" Group Node.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.ReferenceNodeType.NamedReferencesOtherGroup">
            <summary>
            A NamedReferences "Other" Group Node.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.ReferenceNode">
            <summary>
            Class used to provide information about the reference hierarchy.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.ReferenceNode.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.ReferenceNode"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.ReferenceNode.#ctor(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ReferenceNode[],System.Boolean)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.ReferenceNode"/> with the specified reference and child references.
            </summary>
            <param name="reference">The reference at this node.</param>
            <param name="childReferences">The references that are children of this node.</param>
            <param name="isDataReference">Indicates if this is a leaf reference.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.ReferenceNode.#ctor(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ReferenceNode[],System.Boolean,System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.ReferenceNode"/> with the specified reference, child references and display name.
            </summary>
            <param name="reference">The reference at this node.</param>
            <param name="childReferences">The references that are children of this node.</param>
            <param name="isDataReference">Indicates if this is a leaf reference.</param>
            <param name="displayName">The display name for the reference node.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.ReferenceNode.#ctor(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ReferenceNode[],System.Boolean,System.String,Infragistics.WebUI.CalcEngine.ReferenceNodeType)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.ReferenceNode"/> with the specified reference, child references, display name and node type.
            </summary>
            <param name="reference">The reference at this node.</param>
            <param name="childReferences">The references that are children of this node.</param>
            <param name="isDataReference">Indicates if this is a leaf reference.</param>
            <param name="displayName">The display name for the reference node.</param>
            <param name="referenceNodeType">The type of reference node, from the <see cref="P:Infragistics.WebUI.CalcEngine.ReferenceNode.ReferenceNodeType"/> enumeration.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.ReferenceNode.Reference">
            <summary>
            Reference instance.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.ReferenceNode.ChildReferences">
            <summary>
            Child references.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.ReferenceNode.IsDataReference">
            <summary>
            Indicates if the reference can be part of a formula. For example, a grid 
            or a band can't be part of a formula because they don't represent values
            however a column can be part of a formula.
            </summary>		
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.ReferenceNode.DisplayName">
            <summary>
            Returns the name to use for displaying this reference.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.ReferenceNode.DisplayNameResolved">
            <summary>
            Returns the resolved name to use for displaying this reference.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.ReferenceNode.ReferenceNodeType">
            <summary>
            Returns or sets an enumeration indicating the type of reference represented by the node.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.IFormulaProvider">
            <summary>
            This interface needs to be implemented by objects that have a Formula property and want support from the Formula Builder at design-time.
            </summary>
            <remarks>
            <p class="body">Examples of types that would implement this interface include the <b>UltraGridColumn</b> or the <see cref="!:CalcSettings"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IFormulaProvider.Formula">
            <summary>
            Gets or sets the UltraCalc formula in text (uncompiled) form.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IFormulaProvider.Reference">
            <summary>
            Associated reference object. 
            </summary>
            <remarks>
            <p class="body">In the case of the <b>UltraGridColumn</b>, this will be the column's reference implementation.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IFormulaProvider.Participant">
            <summary>
            Returns the participant.
            </summary>
            <remarks>
            <p class="body">In the case of the UltraWebGrid element, this would be the UltraWebGrid since it implements the <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcParticipant"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.IFormulaProvider.CalcManager">
            <summary>
            Returns the _CALCMANAGER_ associated with the Participant.
            </summary>
            <remarks>
            <p class="body">Formula Builder uses this to gain access to the _CALCMANAGER_ at design-time.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.IFormulaValueConverter">
            <summary>
            Interface through which a developer provides custom logic during the conversion of
            formula results to and from formula source values.
            </summary>
            <remarks>
            <p class="body">This interface is applicable when using custom object values in the
            calculation network. A categorical example of such custom values are localized values.
            UltraCalc reduces all values into their most fundamental (neutral) numeric, date/time
            and string-typed values. Sometimes this decompositional step may lose information that
            is significant (such as that represented by locale-dependent numeric grouping separators
            or conventional currency symbols), and that's when implementing <b>IFormulaValueConverter</b>
            becomes necessary for an UltraCalc application.</p>
            <p class="body">For instance, implementing <b>IFormulaValueConverter</b> would be
            necessary when calculating values that can be expressed in multiple currencies.
            UltraCalc will call an application's implementation of <see cref="M:Infragistics.WebUI.CalcEngine.IFormulaValueConverter.ConvertToUltraCalcValue(System.Object,System.Object)"/>
            when it reads one of these currencies from a <b>String</b>-typed column to allow the
            application to look-up the spot exchange rate, and then translate text cell value
            denominated currency X into a decimal value with respect to a <i>common</i> currency.</p>
            <p class="body">After calculations on all values in the common currency have completed,
            UltraCalc will then call the application's implementation of <see cref="M:Infragistics.WebUI.CalcEngine.IFormulaValueConverter.ConvertFromUltraCalcValue(Infragistics.WebUI.CalcEngine.UltraCalcValue,System.Object)"/>
            which will translate the resulting value from the <i>common</i> currency back into
            currency X for storage in the column.</p>
            <p class="body">Both methods take a <i>context</i> object that equips an implementation
            of this interface to properly identify what the target currency is. In some cases (a column
            containing multiple currencies as text), an implementation may be assisted by using an
            associative array, or <b>Hashtable</b>, to store the <i>context</i> object received from
            <b>ConvertToUltraCalcValue</b> with the appropriate currency symbol. Then it can be
            looked-up and restored back into the original currency by <b>ConvertFromUltraCalcValue</b>.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IFormulaValueConverter.ConvertFromUltraCalcValue(Infragistics.WebUI.CalcEngine.UltraCalcValue,System.Object)">
            <summary>
            Converts the formula result from an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValue"/> into a data value that will be
            written into the destination object of the formula using custom formatting as defined by the
            application.
            </summary>
            <param name="calcValue">The "neutral" value resulting from a formula's evaluation.</param>
            <param name="context">This is the object being written from the formula. For example, a cell or a footer value.</param>
            <returns>The value resulting from the formula formatted according to an application's requirements (for example,
            using the appropriate locale for thousands separator or currency symbol).</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.IFormulaValueConverter.ConvertToUltraCalcValue(System.Object,System.Object)">
            <summary>
            Converts the data value being read from during the evaluation of a formula into an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValue"/> using
            custom parsing as defined by the application.
            </summary>
            <param name="calcValue">The source value accessed by a formula that may need conversion
            into a neutral-context that can be shared with other source values.</param>
            <param name="context">This is the object that the formula references to access the source <i>calcValue</i>. For example, a cell or a footer value.</param>
            <returns>The value that will actually be presented to the formula parsed according to an application's requirements
            (for example, neutralizing locale-specific information such as performing an exchange rate conversion).</returns>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.RefBase">
            <summary>
            This abstract base class is used to implement the <b>IUltraCalcReference</b> interface for an
            object with a complex hierarchy of referencable elements.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.RefBase"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.FindRoot">
            <summary>
            Returns the Root reference of a reference hierarchy.  The root reference is used to resolve the
            fully qualifed form of a reference.
            </summary>
            <returns>The Root Reference.</returns>
            <remarks>
            <p class="note">Note: Must be overridden by the Root reference to return the self-reference,
            this (Me in Visual Basic .NET).</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.FindItem(System.String)">
            <summary>
            Returns the named reference relative to this reference.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element.</returns>
            <remarks>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.FindAll(System.String)">
            <summary>
            Returns the named reference relative to this reference with scope "All".
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element.</returns>
            <remarks>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.FindSummaryItem(System.String)">
            <summary>
            Returns the named SummaryItem reference relative to this reference.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element.</returns>
            <remarks>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.FindItem(System.String,System.String)">
            <summary>
            Returns the named indexed reference relative to this reference.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index name.</param>
            <returns>The referenced element</returns>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.FindItem(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns the named indexed reference relative to this reference.  If <b>isRelative</b>
            is true, then <b>index</b> is treated as a relative to this element index.  Otherwise the
            index is treated as absolute.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index value.</param>
            <param name="isRelative">True if <b>index</b> is relative to this index.</param>
            <returns>The referenced element</returns>
            <remarks>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.FindParent">
            <summary>
            Returns a reference to this elements Parent.  Some Reference implementations (RefColumn) override 
            this to return something different than BaseParent when handling ".."
            </summary>
            <returns>The referenced element.</returns>
            <remarks>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.ScopedReferences(Infragistics.WebUI.CalcEngine.RefParser)">
            <summary>
            Returns an <b>IUltraCalcReferenceCollection</b> for enumerable references constrained to the specified reference.
            </summary>
            <param name="scopeRP">The constraining reference.</param>
            <returns>A reference collection.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)">
            <summary>
            Constructs a reference relative to this reference by walking all the elements of the specified parsed reference.
            If <b>forceDataRef</b> is true, then any <b>IsDataReference</b> references are forced to resolve to a specific
            data item when an incomplete identifier is specified. <b>RefLoop</b> is used to iterate over the specified 
            parsed reference.
            <p>This method must be overridden by the Root reference object to deal with external or root references.
            The Root referece object must advance past the optional control name in a Fully Qualified Reference before
            calling <b>RefLoop</b></p>
            </summary>
            <param name="buildRP">The parsed representation of the reference to construct</param>
            <param name="forceDataRef">Force resolution to a specific data item.</param>
            <returns>The specified reference</returns>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.RefLoop(Infragistics.WebUI.CalcEngine.RefBase,System.Collections.IEnumerator,System.Boolean)"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.RefLoop(Infragistics.WebUI.CalcEngine.RefBase,System.Collections.IEnumerator,System.Boolean)">
            <summary>
            Constructs a reference relative to the specified starting reference by walking the specified <b>RefTuple</b>
            enumerator.  For each <b>RefTuple</b>, the next "current" reference is constucted by calling the <b>Find</b>
            method based on the scope of the <b>RefTuple</b>.
            If <b>forceDataRef</b> is true, then any <b>IsDataReference</b> references are forced to resolve to a specific
            data item when an incomplete identifier is specified. 
            </summary>
            <param name="start">The starting Reference.</param>
            <param name="tupleEnum">A <b>RefTuple</b> enumerator positioned at the starting tuple.</param>
            <param name="forceDataRef">Force resolution to a specific data item.</param>
            <returns>The specified reference</returns>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.FindItem(System.String)"/>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.FindParent"/>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.RefParser"/>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.RefTuple"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.MarkRelativeIndices(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            For each reference tuple in this reference that has a relative index, mark the
            corresponding tuple in inReference.
            </summary>
            <param name="inReference">The Reference to be marked.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.CreateReference(System.String)">
            <summary>
            Create a new reference relative to this reference.
            </summary>
            <param name="inReference">The reference string.</param>
            <returns>The new reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.CreateRange(System.String,System.String)">
            <summary>
            Create a Range reference relative to this reference.
            </summary>
            <param name="fromReference">The start of the range, inclusive.</param>
            <param name="toReference">The end of the range, inclusive.</param>
            <returns>A RangeReference</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.ResolveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ResolveReferenceType)">
            <summary>
            Resolves a reference relative to this reference.  For example, if this
            reference is a reference to a row, and inReference is a reference to a
            column, the resolved reference is the cell reference that is the intersection
            of this row and the input column.
            </summary>
            <param name="inReference">The reference to resolve.</param>
            <param name="referenceType">One of the resolution options from <see cref="T:Infragistics.WebUI.CalcEngine.ResolveReferenceType"/>.</param>
            <returns>The resolved reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.ContainsReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if this reference contains inReference.
            </summary>
            <param name="inReference">The contained candidate.</param>
            <returns>True if <i>inReference</i> is contained by this reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.IsSubsetReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Indicates when a supplied reference is a proper subset of this reference.
            </summary>
            <param name="inReference">The subset candidate.</param>
            <returns>True if <i>inReference</i> is contained by this reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.IsSiblingReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary> 
            Determines whether the given reference is a sibling of the current reference.
            </summary> 
            <param name="reference">An <b>IUltraCalcReference</b> implementation to
            compare against this one.</param>
            <returns>Base method implementation always returns False, inheritors must
            override to indicate whether <i>reference</i> is a sibling to themselves.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.GetChildReferences(Infragistics.WebUI.CalcEngine.ChildReferenceType)">
            <summary>
            Returns the child references of the reference. This method can return null.
            </summary>
            <param name="referenceType">One of the <see cref="T:Infragistics.WebUI.CalcEngine.ChildReferenceType"/> options.</param>
            <returns>Inheritors may override this method to return a non-null array of
            references. The base implementation always returns null (Nothing in Visual
            Basic .NET).</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.ToString">
            <summary>
            Returns a textual representation of the current <b>RefBase</b> instance.
            </summary>
            <returns>A <b>String</b> that describes the current <b>RefBase</b> instance.</returns>
            <remarks>
            <p class="body">Intended for debugging purposes only.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.CreateParsedReference">
            <summary>
            Used to create a new <see cref="T:Infragistics.WebUI.CalcEngine.RefParser"/> for the reference.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.GetHashCode">
            <summary>
            Overridden. Default implementation returns the hash code of the normalized absolute name.
            These objects are going to be added to data structure that make use of GetHashCode and 
            Equals methods. What this means is that the normalized absolute name must not change 
            throughout the lifetime of this instance. If it does change then the overriding class 
            must override this method and return a hash code based on some other immutable property 
            of the instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefBase.Equals(System.Object)">
            <summary>
            Overriden. Default implementation returns true if the normalized absolute names of this
            reference and the passed in reference match. These objects are going to be added to data 
            structure that make use of GetHashCode and Equals methods. What this means is that the 
            normalized absolute name must not change throughout the lifetime of this instance. If it 
            does change then the overriding class must override this method and return a hash code 
            based on some other immutable property of the instance.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.Context">
            <summary>
            Returns a context for the Reference.
            </summary>
            <remarks><p class="body">Returns a meaningful object context for the reference. This could be an UltraGridCell, UltraGridColumn, NamedReference, Control, etc.</p></remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.BaseParent">
            <summary>
            The RefBase Parent reference of this referenced element.  Used to navigate the element hierarchy.  If this
            referenced element is the root element, <b>BaseParent</b> returns null.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.IsAnchored">
            <summary>
            Returns true if this reference is anchored.  An anchored reference is a direct reference to an element. 
            An unanchored reference is an indirect reference.  An indirect reference stores context dependent properties
            such as the relative name used to create the reference.  Read Only.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.RefUnAnchored"/>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefBase.RelativeReference"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.IsRange">
            <summary>
            Returns true if this reference is a Range Reference.  Read Only.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.RefRange"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.WrappedReference">
            <summary>
            Returns the indirect reference of an UnAnchored reference.  Read only.
            </summary>
            <remarks>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.RefUnAnchored"/>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefBase.IsAnchored"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.ParsedReference">
            <summary>
            Gets or Sets the parsed representation of this reference.  This returns the absolute reference name.  Use
            <b>RelativeReference</b> to get the parsed representation of the string used to create this reference if this 
            reference is UnAnchored.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefBase.IsAnchored"/>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefBase.RelativeReference"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.RelativeReference">
            <summary>
            Gets or Sets the parsed representation of the string used to create this reference if this reference
            is UnAnchored.  Use <b>AbsoluteReference</b> to get the parsed representation of the anchored reference.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefBase.IsAnchored"/>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefBase.ParsedReference"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.AbsoluteName">
            <summary>
            The fully qualified unique name for the referenced element.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.NormalizedAbsoluteName">
            <summary>
            Returns the normalized absolute name. UltraCalcEngine makes use normalized
            absolute names of references to compare two references and search for references.
            This property should return the absolute name with case insensitive parts of
            the absolute names converted to lower case.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.ElementName">
            <summary>
            The unqualified name of this referenced element.  Used to construct the fully qualified name by the
            <b>AbsoluteName</b> method. Read Only.
            </summary>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefBase.AbsoluteName"/>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.Value">
            <summary>
            The <b>UltraCalcValue</b>, if any, associated with this Reference.  If this reference 
            does not contain a Value then a <b>UltraCalcErrorValue</b> is returned.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.Formula">
            <summary>
            The <b>IUltraCalcFormula</b>, if any, associated with this Reference.  If this reference 
            can not contain a formula, then null (Nothing in Visual Basic .NET) is returned.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.RecalcDeferred">
            <summary>
            Flag used by the <b>UltraCalcEngine</b> to manage the recalculation network. 
            Denotes the reference is visible.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.RecalcVisible">
            <summary>
            Flag used by the <b>UltraCalcEngine</b> to manage the recalculation network. 
            Denotes the reference is visible.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.HasRelativeIndex">
            <summary>
            True indicates that the reference was constructed with a relative index.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.HasAbsoluteIndex">
            <summary>
            True indicates that the reference was constructed with a relative index.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.HasScopeAll">
            <summary>
            True indicates that the reference was constructed with a scope all index.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.References">
            <summary>
            Return a collection of references if this Reference is enumerable.
            </summary>
            <returns>A Reference collection.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.IsEnumerable">
            <summary>
            Returns true if this reference is enumerable.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.Parent">
            <summary>
            The RefBase Parent reference of this referenced element.  Used to navigate the element hierarchy.  If this
            referenced element is the root element, <b>BaseParent</b> returns null.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.IsDataReference">
            <summary>
            Returns true if this reference is a data reference.  A data reference contains a value, such as an UltraWebGrid
            cell or <b>ColumnFooter</b>.  Many referenced elements, such as an <b>UltraGridColumn</b> or <b>UltraGridBand</b>,
            do not reference an individual value. Read Only. 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefBase.IsDisposedReference">
            <summary>
            True indicates that the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.RefRange">
            <summary>
            <b>RefRange</b> is a general-purpose ranged reference.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefRange.from">
            <summary>
            The start of the range, not normalized, inclusive.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefRange.to">
            <summary>
            The end of the range, not normalized, inclusive.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefRange.normalizedFrom">
            <summary>
            The normalized start of the range, inclusive.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefRange.normalizedTo">
            <summary>
            The normalized end of the range, inclusive.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.#ctor(Infragistics.WebUI.CalcEngine.RefBase,Infragistics.WebUI.CalcEngine.RefBase)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.RefRange"/> from a pair of <see cref="T:Infragistics.WebUI.CalcEngine.RefBase"/>
            instances denoting the start and end of a range.
            </summary>
            <param name="from">The start of the range, not normalized, inclusive.</param>
            <param name="to">The end of the range, not normalized, inclusive.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.Validate">
            <summary>
            Validates the Range.  This implementation requires that a Range is constrained to the last
            tuple in the Reference Path.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.Contains(Infragistics.WebUI.CalcEngine.RefParser)">
            <summary>
            Returns true if targetRP is contained in this Range.
            </summary>
            <param name="targetRP">The candidate contained range.</param>
            <returns>Returns true if targetRP is contained in this range.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.CreateParsedReference">
            <summary>
            Used to create a new <see cref="T:Infragistics.WebUI.CalcEngine.RefParser"/> for the reference.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.FindItem(System.String)">
            <summary>
            Returns the named reference relative to this reference.
            </summary>
            <param name="name">The element name.</param>
            <returns>This always returns an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/>. This method should never be called on a 
            range reference because a range reference is never created by <see cref="!:BuildReference"/>.</returns>
            <remarks>
            <seealso cref="!:BuildReference"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.FindAll(System.String)">
            <summary>
            Returns the named reference relative to this reference with scope "All".
            </summary>
            <param name="name">The element name.</param>
            <returns>This always returns an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/>. This method should never be called on a 
            range reference because a range reference is never created by <see cref="!:BuildReference"/>.</returns>
            <remarks>
            <seealso cref="!:BuildReference"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.FindSummaryItem(System.String)">
            <summary>
            Returns the named SummaryItem reference relative to this reference.
            </summary>
            <param name="name">The element name.</param>
            <returns>This always returns an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/>. This method should never be called on a 
            range reference because a range reference is never created by <see cref="!:BuildReference"/>.</returns>
            <remarks>
            <seealso cref="!:BuildReference"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.FindItem(System.String,System.String)">
            <summary>
            Returns the named indexed reference relative to this reference.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index name.</param>
            <returns>This always returns an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/>. This method should never be called on a 
            range reference because a range reference is never created by <see cref="!:BuildReference"/>.</returns>
            <remarks>
            <seealso cref="!:BuildReference"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.FindItem(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns the named indexed reference relative to this reference.  If <b>isRelative</b>
            is true, then <b>index</b> is treated as a relative to this element index.  Otherwise the
            index is treated as absolute.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index value.</param>
            <param name="isRelative">true if <b>index</b> is relative to this index.</param>
            <returns>This always returns an <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcReferenceError"/>. This method should never be called on a 
            range reference because a range reference is never created by <see cref="!:BuildReference"/>.</returns>
            <remarks>
            <seealso cref="!:BuildReference"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.ScopedReferences(Infragistics.WebUI.CalcEngine.RefParser)">
            <summary>
            Returns a <b>IUltraCalcReferenceCollection</b> for enumerable references constrained to the specified reference.
            </summary>
            <param name="scopeRP">The constraining reference.</param>
            <returns>An enumerable container implementing <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReferenceCollection"/>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.MarkRelativeIndices(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            For each reference tuple in this reference that has a relative index, mark the
            corresponding tuple in inReference.
            </summary>
            <param name="inReference">The Reference to be marked.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.ResolveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ResolveReferenceType)">
            <summary>
            Resolves a reference relative to this reference.
            </summary>
            <param name="inReference">The reference to resolve.</param>
            <param name="referenceType">One of the options from the <see cref="T:Infragistics.WebUI.CalcEngine.ResolveReferenceType"/> enumeration
            indicating the type of reference to resolve.</param>
            <returns>The resolved reference.</returns>
            <remarks>
            <p class="body">For example, if this reference is a reference to a row, and
            <i>inReference</i> is a reference to a column, then the resolved reference is
            going to be the cell reference that is at the intersection of this row and the
            supplied column's reference.</p>
            <p class="body">The resolved reference for a <see cref="T:Infragistics.WebUI.CalcEngine.RefRange"/> is always
            resolved from it's <see cref="P:Infragistics.WebUI.CalcEngine.RefRange.FromRef"/> or starting point.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.ContainsReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if this Range contains the specified <b>IUltraCalcReference</b> object.
            </summary>
            <param name="inReference">The contained candidate.</param>
            <returns>True if <i>inReference</i> is contained by this range.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.ToString">
            <summary>
            Produces a textual representation of the <see cref="T:Infragistics.WebUI.CalcEngine.RefRange"/> including the
            class type as well as the starting and ending references.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.GetEnumerator">
            <summary>
            Returns an Enumerator over the Range.
            </summary>
            <returns>An implementation of <b>IEnumerator</b> to allow
            foward-only iteration over a sequence of <b>IUltraCalcReference</b>
            objects.</returns>
            <remarks>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.RefRange.RefRangeEnumerator"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.FromBase">
            <summary>
            Return the From reference as a <see cref="T:Infragistics.WebUI.CalcEngine.RefBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.NormalizedFromBase">
            <summary>
            Return the Normalized From reference as a <see cref="T:Infragistics.WebUI.CalcEngine.RefBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.FromRef">
            <summary>
            Return the From reference as an <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.NormalizedFromRef">
            <summary>
            Return the normalized From reference as an <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.ToBase">
            <summary>
            Return the To reference as a <see cref="T:Infragistics.WebUI.CalcEngine.RefBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.NormalizedToBase">
            <summary>
            Return the normalized To reference as a <see cref="T:Infragistics.WebUI.CalcEngine.RefBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.ToRef">
            <summary>
            Return the To reference as an <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/>.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.NormalizedToRef">
            <summary>
            Return the normalized To reference as an <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Infragistics.WebUI.CalcEngine.RefRange.IsRange" -->
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.ElementName">
            <summary>
            The unqualified name of this referenced element.  Used to construct the fully 
            qualified name by the <b>AbsoluteName</b> property. Read Only.
            </summary>
            <remarks>
            <p class="body">The <b>ElementName</b> for a Range is from.ElementName + ":" + to.ElementName.</p>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefRange.AbsoluteName"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.BaseParent">
            <summary>
            The Parent reference of this referenced element.  Used to navigate the element hierarchy.  If this
            referenced element is the root element, <b>Parent</b> returns null.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.IsDataReference">
            <summary>
            Returns true if this reference is a data reference.  A data reference contains a value, such as a Grid Cell or
            a Grid SummaryValue.  Many referenced elements, such as a Grid Column or a Grid Band, do not reference a value.
            Read Only. 
            </summary>
            <remarks>
            <p class="body">A Range is always a Data Reference.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.AbsoluteName">
            <summary>
            The fully qualified unique name for the referenced element.  Read Only.
            </summary>
            <remarks>
            <p class="body">The AbsoluteName for a Range is from.AbsoluteName + ":" + to.AbsoluteName</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.NormalizedAbsoluteName">
            <summary>
            Returns the normalized absolute name. <b>UltraCalcEngine</b> makes use normalized
            absolute names of references to compare two references and search for references.
            This property should return the absolute name with case insensitive parts of
            the absolute names converted to lower case.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.HasRelativeIndex">
            <summary>
            True indicates that the reference was constructed with a relative index.  Read Only.
            <p>The HasRelativeIndex for a Range is from.HasRelativeIndex
            </p>
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.References">
            <summary>
            Return a collection of references, if this Reference is enumerable.
            </summary>
            <value>An enumerable container of <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/> objects.</value>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.IsEnumerable">
            <summary>
            A range is enumerable.
            </summary>
            <value>
            Always returns true.
            </value>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.RefRange.RefRangeEnumerator">
            <summary>
            Enumerator for a <see cref="T:Infragistics.WebUI.CalcEngine.RefRange"/>.
            </summary>
            <remarks>
            <p class="body">Developers must not modify any of the references occuring
            within the <see cref="T:Infragistics.WebUI.CalcEngine.RefRange"/> while it is being enumerated. Doing so
            could lead to undefined behavior.</p>
            <p class="body">This <b>IEnumerator</b> is not safe for use across multiple
            threads.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.RefRangeEnumerator.#ctor(Infragistics.WebUI.CalcEngine.RefRange)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.RefRange.RefRangeEnumerator"/> instance.
            </summary>
            <param name="range">The <see cref="T:Infragistics.WebUI.CalcEngine.RefRange"/> to enumerate.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.RefRangeEnumerator.MoveNext">
            <summary>
            Sets the current reference to the next reference.  Returns false if there is no
            next reference.
            </summary>
            <returns>Returns true if the next reference is available.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefRange.RefRangeEnumerator.Reset">
            <summary>
            Resets the iterator to the beginning.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefRange.RefRangeEnumerator.Current">
            <summary>
            Returns the current reference in the Range.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.RefTuple">
            <summary>
            This class represents an element identifier and a scope.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.refName">
            <summary>
            The tuple name for reference type Identifier.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.refType">
            <summary>
            The tuple reference type.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.scopeIdentifier">
            <summary>
            The tuple scope Identifier for scope type Identifier.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.scopeType">
            <summary>
            The tuple scope type.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.scopeIndex">
            <summary>
            The tuple scope index for scope type Index or RelativeIndex.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.#ctor(Infragistics.WebUI.CalcEngine.RefTuple)">
            <summary>
            Cloning constructor.
            </summary>
            <param name="clone">The RefTuple to clone.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.#ctor(System.String)">
            <summary>
            Parsing contructor.
            </summary>
            <param name="refName">The tuple in string form.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.IsSameTuple(Infragistics.WebUI.CalcEngine.RefTuple)">
            <summary>
            Tuple Equivalence comparison.  True if same Type and Scope.
            </summary>
            <param name="tuple">The tuple to compare against.</param>
            <returns>true iff tuple is same type and scope as this.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.IsSameIdentifier(Infragistics.WebUI.CalcEngine.RefTuple)">
            <summary>
            Compares this tuple identifiers with the input tuple identifier.
            </summary>
            <param name="tuple">The input tuple.</param>
            <returns>true if the identifiers are equal.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.Contains(Infragistics.WebUI.CalcEngine.RefTuple)">
            <summary>
            True if this tuple contains the input tuple.  The input tuple is considered to be 
            contained if both tuples have the same identifier and if this scope contains the 
            input scope.  The input scope is contained if neither scope types are type Unknown and
            they meet one of the following conditions:
            <list>
            <item>Both tuples have SummaryValue scope.</item>
            <item>Either tuple has scope type Any.</item>
            <item>Both are type Identifier and have lexographicly equal scope identifiers.</item>
            <item>Both are the same type of index (Index or RelativeIndex) and have the same scope index.</item>
            </list>
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.IsSubset(Infragistics.WebUI.CalcEngine.RefTuple)">
            <summary>
            True if the input tuple is a subset of this tuble.  The input tuple is considered to be 
            a subset if both tuples have the same identifier and if this scope entirely contains the 
            input scope.  The input scope is contained if neither scope types are type Unknown and
            they meet one of the following conditions:
            <list>
            <item>Both tuples have SummaryValue scope.</item>
            <item>This tuple has scope type Any.</item>
            <item>Both scopes are type Identifier and have lexographicly equal scope identifiers.</item>
            <item>Both scopes are the same type of index (Index or RelativeIndex) and have the same scope index.</item>
            </list>
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.IsSameScope(Infragistics.WebUI.CalcEngine.RefTuple)">
            <summary>
            True if if the scope of the input tuple is identical to this scope.
            </summary>
            <param name="tuple">The input tuple.</param>
            <returns>true if the scope of the input tuple is identical to this scope.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.ContainsScope(Infragistics.WebUI.CalcEngine.RefTuple)">
            <summary>
            True if this tuple scope contains the input tuple scope. The input scope is contained 
            if neither scope types are type Unknown and they meet one of the following conditions:
            <list>
            <item>Both tuples have SummaryValue scope.</item>
            <item>Either tuple has scope type Any.</item>
            <item>Both are type Identifier and have lexographicly equal scope identifiers.</item>
            <item>Both are the same type of index (Index or RelativeIndex) and have the same scope index.</item>
            </list>
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.IsScopeSubset(Infragistics.WebUI.CalcEngine.RefTuple)">
            <summary>
            True if input tuple scope is entirely contained by this tuple scope. The input scope is enitrely contained 
            if neither scope types are type Unknown and they meet one of the following conditions:
            <list>
            <item>Both tuples have SummaryValue scope.</item>
            <item>This tuple has scope type Any.</item>
            <item>Both are type Identifier and have lexographicly equal scope identifiers.</item>
            <item>Both are the same type of index (Index or RelativeIndex) and have the same scope index.</item>
            </list>
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.IsNumericScopeLTE(Infragistics.WebUI.CalcEngine.RefTuple)">
            <summary>
            True if both tuples have the same type and numeric scope type and
            this numeric index &lt;= the input tuple numeric index
            </summary>
            <param name="tuple">The tuple to test.</param>
            <returns>true iff this is &lt;= input.</returns>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefTuple.IsNumericScopeGTE(Infragistics.WebUI.CalcEngine.RefTuple)"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.IsNumericScopeGTE(Infragistics.WebUI.CalcEngine.RefTuple)">
            <summary>
            True if both tuples have the same type and numeric scope type and
            this numeric index &gt;= the input tuple numeric index
            </summary>
            <param name="tuple">The tuple to test.</param>
            <returns>true iff this is &gt;= input.</returns>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefTuple.IsNumericScopeLTE(Infragistics.WebUI.CalcEngine.RefTuple)"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.IncrementScope">
            <summary>
            Increments the scope if the scope if type Index or RelativeIndex.
            </summary>
            <returns>true if scope was incremented.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.CompareScopeID(System.String,System.String)">
            <summary>
            Compares scope identifiers by first attempting a numeric compare.  If that fails then the
            scope identifiers are lexographicly compared.
            
            </summary>
            <param name="one">first scope identifier</param>
            <param name="two">second scope identifier</param>
            <returns>0 if one == two, &lt;0 if one &lt; two, &gt;0 if one &gt; two.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.ToString(System.Text.StringBuilder)">
            <summary>
            Appends the tuple to the specified string builder.
            </summary>
            <param name="sb"></param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefTuple.ToString">
            <summary>
            Returns the string form of the tuple.
            </summary>
            <returns>The tuple in string form.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefTuple.Type">
            <summary>
            The tuple type.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefTuple.Scope">
            <summary>
            The tuple scope.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefTuple.Name">
            <summary>
            The tuple name for reference type Identifier. Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefTuple.Marked">
            <summary>
            Indicator that this tuple is Marked.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefTuple.Last">
            <summary>
            Indicator that this tuple is the last tuple in a RefParser tuple path.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefTuple.NextToLast">
            <summary>
            Indicator that this tuple is the next-to-last tuple in a RefParser tuple path.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefTuple.ScopeID">
            <summary>
            The tuple scope Identifier for scope type Identifier. Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefTuple.ScopeIndex">
            <summary>
            The tuple scope index for scope type Index or RelativeIndex.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefTuple.IsAbsolute">
            <summary>
            A tuple is Absolute if it is of type Identifier with a scope type other than RelativeIndex.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.RefTuple.RefType">
            <summary>
            The different types of elements.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefType.Parent">
            <summary>
            A parent reference (e.g. "..")
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefType.ExplicitThis">
            <summary>
            A self reference (e.g. ".")
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefType.Identifier">
            <summary>
            A string identifying the name of the reference.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefType.Unknown">
            <summary>
            An unknown reference type
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.RefTuple.RefScope">
            <summary>
            The different scopes.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefScope.Any">
            <summary>
            No scope was specified
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefScope.Index">
            <summary>
            A numeric value indicating the index of the reference
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefScope.RelativeIndex">
            <summary>
            A numeric value indicating a relative offset
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefScope.Identifier">
            <summary>
            An identifier
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefScope.SummaryValue">
            <summary>
            An empty parentheses
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefScope.All">
            <summary>
            An identifier indicating all (e.g. "(*)")
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefTuple.RefScope.Unknown">
            <summary>
            An unknown scope
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.RefParser">
            <summary>
            A RefParser is a parsed representation of a Reference Path.  It contains a RefTuple array 
            representing each element in the Reference Path.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.RefFullyQualifiedString">
            <summary>
            String used to denote the start of a fully qualified reference.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.RefSeperator">
            <summary>
            Character used as a Path element seperator.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.RefSeperatorString">
            <summary>
            String used as a Path element seperator.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.RefBeginScope">
            <summary>
            Character used to denote the begining of a scope.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.RefEndScope">
            <summary>
            Character used to denote the end of a scope.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.RangeSeparator">
            <summary>
            Character used to denote a range of references.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.RangeSeparatorWithSpaces">
            <summary>
            A space padded string representing a range.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.EscapeCharacter">
            <summary>
            Character used for escaping special characters. It's the \ (backward slash) character.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.QuotesCharacter">
            <summary>
            Character used for specifying a quoted string. It's the " (double quotes) character.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.NameValuePairSeparatorCharacter">
            <summary>
            Character used for separating multiple name-value pairs. It's the , (comma) character.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefParser.NameValueSeparatorCharacter">
            <summary>
            Character used for separating name portion and the value portion in a name-value pair. It's the = (equal) character.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.#ctor(System.String)">
            <summary>
            Creates a <b>RefParser</b> and parses the passed in string.
            </summary>
            <param name="refName">A string containing a reference name to be parsed.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.#ctor(Infragistics.WebUI.CalcEngine.RefParser)">
            <summary>
            Copy constructor replicates an existing <b>RefParser</b>.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.MarkIndices">
            <summary>
            Determine the values of the FlagHasRelativeIndex,FlagHasAbsoluteIndex and FlagHasSummaryScope flags.
            Set the Last flag on the Last tuple.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.MarkRelativeIndices(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)">
            <summary>
            For each tuple in this reference with a Relative Index, mark the corresponding tuple 
            in targetRP
            </summary>
            <param name="targetRP">The tuples to mark.</param>
            <param name="forceLastTuple">Forces the last tuple to be marked.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.Merge(Infragistics.WebUI.CalcEngine.RefParser,Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)">
            <summary>
            Populate this RefParser by merging the input baseRP with the input mergeRP. If 
            respectMarked is true, then any tuples in mergeRP that are Marked have precedence and
            are converted to scope Any.
            </summary>
            <param name="baseRP">The base reference.</param>
            <param name="mergeRP">The reference to merge into the base.</param>
            <param name="respectMarked">If true, <i>mergeRP</i> tuples that are marked have greater precedence.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,Infragistics.WebUI.CalcEngine.RefParser)">
            <summary>
            Populate this RefParser by merging the input baseRP with the input mergeRP. If 
            respectMarked is true, then any tuples in mergeRP that are Marked have precedence and
            are converted to scope Any.
            </summary>
            <param name="baseRP">The base reference.</param>
            <param name="mergeRP">The reference to merge into the base.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.NormalizeEscapement(System.String,System.Boolean)">
            <summary>
            This method has the same effect as calling UnEscapeString and then calling EscapeString
            on the specified text. This ensures that the text is minimally escaped.
            </summary>
            <param name="text"></param>
            <param name="withinQuotes"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.ParseNameValuePairs(System.String,System.String@)">
            <summary>
            Parses specified name-value pair. Examples of name-value pairs that this method parses are:
            <code>
            State = New York, City = New York
            State = "New York", City = "New York"
            State=New York,City=New York
            A\/B = C\/D (column name is A/B and value is C/D.)
            A = 10 miles\/hour, B = "20 miles/hour" (Withing double quotes only double quotes and backward slash have to be escaped.)
            P1 = 10\, 20, P2 = "10, 20"
            </code>
            Returns an array of NameValuePair objects. Note: Names and values will be unescaped and also stripped of surrounding quotes.
            </summary>
            <param name="pairs"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.Contains(Infragistics.WebUI.CalcEngine.RefParser)">
            <summary>
            Returns true if the input RefParser in contained by this RefParser.  The RefParser is
            contained if each RefTuple in this RefParser contains the corresponding RefTuple in the
            input RefParser.
            </summary>
            <param name="inputParsed">The contained candidate</param>
            <returns>true if inputParsed is contained by this.</returns>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefTuple.Contains(Infragistics.WebUI.CalcEngine.RefTuple)"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.IsSubset(Infragistics.WebUI.CalcEngine.RefParser)">
            <summary>
            Returns true if the input RefParser is a proper subset of this RefParser.  The RefParser is
            a proper subset if each RefTuple in this RefParser has a scope that completely contains 
            the corresponding RefTuple in the
            input RefParser.
            </summary>
            <param name="inputParsed">The subset candidate</param>
            <returns>true if inputParsed is a propersubset of this.</returns>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefTuple.IsSubset(Infragistics.WebUI.CalcEngine.RefTuple)"/>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.ToString(System.Text.StringBuilder)">
            <summary>
            Appends the string representation of the parsed reference to the specified string builder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.ToString">
            <summary>
            Returns a string representation of the parsed reference.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.GetEnumerator">
            <summary>
            Returns the tuples IEnumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.TupleCount">
            <summary>
            Return the tuple count. Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.Item(System.Int32)">
            <summary>
            Tuple indexer.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.LastTuple">
            <summary>
            Return the Last tuple or null if none available.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.NextToLastTuple">
            <summary>
            Return the NextToLast tuple or null if none available.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.IsFullyQualified">
            <summary>
            Returns true if the Reference is fully qualified.  Read Only.
            ex: //MyGrid/Something.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.IsRoot">
            <summary>
            Returns true if the Reference is a root reference.  Read Only.
            ex: /something
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.IsRelative">
            <summary>
            Returns true if the reference is not fully qualified or a root. Read Only.
            ex: total
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.HasRelativeIndex">
            <summary>
            Returns true if the Reference has at least one RefTuple with a relative index.  Read Only.
            ex: Total(-1)
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.HasScopeAll">
            <summary>
            Returns true if the Reference has at least one RefTuple with a scope of "All".  Read Only.
            ex: Total(*)
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.HasAbsoluteIndex">
            <summary>
            Returns true if the Reference has at least one RefTuple with an absolute index.  Read Only.
            ex: Total(0)
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.HasSummaryScope">
            <summary>
            Returns true if the Reference has a Summary Scope.  Read Only.
            ex: Total()
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.RefParser.NameValuePair">
            <summary>
            Class for representing a name value pair.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefParser.NameValuePair.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">Unescaped name.</param>
            <param name="value">Unescaped value.</param>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.NameValuePair.Name">
            <summary>
            Returns the name, unescaped.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.NameValuePair.Value">
            <summary>
            Returns the value, unescaped.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefParser.NameValuePair.Tag">
            <summary>
            Gets or sets a tag value.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.RefUnAnchored">
            <summary>
            <b>RefUnAnchored</b> is a wrapper for a <see cref="T:Infragistics.WebUI.CalcEngine.RefBase"/> reference that keeps a parsed representation
            of the reference string used to create the reference.  There can be multiple <b>RefUnAnchored</b> instances
            wrapping the same anchored reference.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefUnAnchored.baseRef">
            <summary>
            The <b>RefBase</b> being wrapped.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.CalcEngine.RefUnAnchored.relativeRP">
            <summary>
            The parsed form of the reference string used to create the reference.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.#ctor(Infragistics.WebUI.CalcEngine.RefBase)">
            <summary>
            Constructor takes a base reference.
            </summary>
            <param name="baseRef">The base reference to get wrapped.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.FindItem(System.String)">
            <summary>
            Returns the named reference relative to this reference.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element</returns>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.FindAll(System.String)">
            <summary>
            Returns the named reference relative to this reference with scope "ALL".
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element</returns>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.FindSummaryItem(System.String)">
            <summary>
            Returns the named SummaryItem reference relative to this reference.
            </summary>
            <param name="name">The element name.</param>
            <returns>The referenced element</returns>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.FindItem(System.String,System.String)">
            <summary>
            Returns the named indexed reference relative to this reference.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index name.</param>
            <returns>The referenced element.</returns>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.FindItem(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns the named indexed reference relative to this reference.  If <b>isRelative</b>
            is true, then <b>index</b> is treated as a relative to this element index.  Otherwise the
            index is treated as absolute.
            </summary>
            <param name="name">The element name.</param>
            <param name="index">The index value.</param>
            <param name="isRelative">true if <b>index</b> is relative to this index</param>
            <returns>The referenced element</returns>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.FindParent">
            <summary>
            Returns a reference to this elements Parent.
            </summary>
            <returns>The referenced element</returns>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            <seealso cref="M:Infragistics.WebUI.CalcEngine.RefBase.BuildReference(Infragistics.WebUI.CalcEngine.RefParser,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.ScopedReferences(Infragistics.WebUI.CalcEngine.RefParser)">
            <summary>
            Returns a <b>IUltraCalcReferenceCollection</b> for enumerable references constrained to the specified reference.
            </summary>
            <param name="scopeRP">The constraining reference</param>
            <returns>A reference collection</returns>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.ResolveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ResolveReferenceType)">
            <summary>
            Resolves a reference relative to this reference.  For example, if this
            reference is a reference to a row, and inReference is a reference to a
            column, the resolved reference is the cell reference that is the intersection
            of this row and the input column.
            <p>RefUnAnchored forwards this to the base reference.
            </p>
            </summary>
            <param name="inReference">The reference to resolve.</param>
            <param name="referenceType">Enumeration indicating the type of reference to resolve.</param>
            <returns>The resolved reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.ContainsReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if this reference contains the supplied reference.
            </summary>
            <param name="reference">The contained candidate reference.</param>
            <returns>True if <i>reference</i> is contained by this reference.</returns>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.IsSubsetReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Returns true if the supplied reference is a proper subset of this reference.
            </summary>
            <param name="rference">The subset candidate reference.</param>
            <returns>True if <i>reference</i> is contained by this reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.IsSiblingReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Determines whether the given reference is a sibling of this reference.
            </summary>
            <param name="reference">The reference to compare against this one.</param>
            <returns>True if the reference is a sibling of <i>reference</i>.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.ToString">
            <summary>
            Gets the textual representation of this reference.
            </summary>
            <returns>A representation of this <b>RefUnAnchored</b> instance as a <b>String</b>.</returns>
            <remarks>
            <p class="body">Intended for debugging purposes.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.GetHashCode">
            <summary>
            Overridden.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.RefUnAnchored.Equals(System.Object)">
            <summary>
            Overridden.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.IsUnQualifiedReference">
            <summary>
            Returns true if the relative reference is unqualified.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.ElementName">
            <summary>
            The unqualified name of this referenced element.  Used to construct the fully qualified name by the
            <b>AbsoluteName</b> method. Read Only.
            </summary>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.AbsoluteName"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.BaseParent">
            <summary>
            The RefBase Parent reference of this referenced element.  Used to navigate the element hierarchy.  If this
            referenced element is the root element, <b>BaseParent</b> returns null.  Read Only.
            </summary>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.IsRange">
            <summary>
            Returns true if this reference is a Range Reference.  Read Only.
            </summary>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.RefRange"/>
            <seealso cref="!:RefRangeCollection"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.IsAnchored">
            <summary>
            Returns true if this reference is anchored.  An anchored reference is a direct reference to an element. 
            An unanchored reference is an indirect reference.  An indirect reference stores context dependent properties
            such as the relative name used to create the reference.  Read Only.
            </summary>
            <remarks>
            <p class="body">RefUnAnchored always returns false.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.RefUnAnchored"/>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.RelativeReference"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.IsDataReference">
            <summary>
            Returns true if this reference is a data reference.  A data reference contains a value, such as an <b>UltraWebGrid</b> cell or
            a column footer value.  Many referenced elements, such as the <b>UltraGridColumn</b> or <b>UltraGridBand</b>, do not reference
            a value. Read Only.
            </summary>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.WrappedReference">
            <summary>
            Returns the indirect reference of an unanchored reference.  Read only.
            </summary>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            <seealso cref="T:Infragistics.WebUI.CalcEngine.RefUnAnchored"/>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.IsAnchored"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.ParsedReference">
            <summary>
            Gets or sets the parsed representation of this reference.  Use <b>RelativeReference</b> to get the
            parsed representation of the string used to create this reference if this reference is unanchored.
            </summary>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> returns a reference constructed from merging the relative reference into
            the base reference.</p>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.IsAnchored"/>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.RelativeReference"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.AbsoluteName">
            <summary>
            The fully qualified unique name for the referenced element.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.RelativeReference">
            <summary>
            Gets or Sets the parsed representation of the string used to create this reference if this reference
            is UnAnchored.  Use <b>AbsoluteReference</b> to get the parsed representation of the anchored reference.
            </summary>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> returns the relative reference. When setting the relative reference, the merge 
            reference is constructed by merging the relative reference into the base reference.</p>
            <seealso cref="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.IsAnchored"/>
            <seealso cref="!:AbsoluteReference"/>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.Context">
            <summary>
            Returns a context for the Reference.
            </summary>
            <remarks><p class="body">Returns a meaningful object context for the reference. This could be an UltraGridCell, UltraGridColumn, NamedReference, Control, etc.</p></remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.Value">
            <summary>
            The <b>UltraCalcValue</b>, if any, associated with this Reference.  If this reference 
            does not contain a Value then a <b>UltraCalcErrorValue</b> is returned.
            <p>RefUnAnchored forwards this to the base reference.
            </p>
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.Formula">
            <summary>
            The <b>IUltraCalcFormula</b>, if any, associated with this Reference.  If this reference 
            can not contain a formula then null (Nothing in Visual Basic .NET) is returned.
            <p>RefUnAnchored forwards this to the base reference.
            </p>
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.RecalcVisible">
            <summary>
            Flag used by the <b>UltraCalcEngine</b> to manage the recalculation network. 
            Denotes the reference is visible.
            <p>RefUnAnchored forwards this to the base reference.
            </p>
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.RecalcDeferred">
            <summary>
            True indicates that recalculating reference's formula can deferred until it become visible.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.HasRelativeIndex">
            <summary>
            True indicates that the reference was constructed with a relative index.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.HasScopeAll">
            <summary>
            True indicates that the reference was constructed with a scope all index.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.HasAbsoluteIndex">
            <summary>
            True indicates that the reference was constructed with a absolute index.  Read Only.
            <p>RefUnAnchored uses the relative rp.
            </p>
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.References">
            <summary>
            Return a collection of references if this Reference is enumerable.
            </summary>
            <value>A Reference collection.</value>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> returns the base reference's enumerable references
            scoped to the merged reference.</p>
            <p class="body">An exception is thrown if this reference is not enumerable.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.RefUnAnchored.IsEnumerable">
            <summary>
            Returns true if this reference is enumerable.
            </summary>
            <remarks>
            <p class="body"><b>RefUnAnchored</b> forwards this to the base reference.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.CalcEngine.UCReference">
            <summary>
            Implements the <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/> and provides methods to connect and disconnect from an underlying calculation object reference.
            </summary>
            <remarks>
            <p class="body">
            <b>UCReference</b> wraps an internal <b>IUltraCalcReference</b> class instance that points to the underlying object.  That is, each method simply passes 
            the <b>IUltraCalcReference</b> request to the underlying reference if the object is connected, else it returns, or throws, an appropriate error.  
            <b>UCReference</b> has storage for the reference string and its underlying reference object.</p>
            <p class="body">
            There are two additional methods on <b>UCReference</b>: <see cref="M:Infragistics.WebUI.CalcEngine.UCReference.Connect(Infragistics.WebUI.CalcEngine.IUltraCalcReference)"/> and <see cref="M:Infragistics.WebUI.CalcEngine.UCReference.Disconnect"/>.</p>
            <p class="body">
            <b>Connect</b> will attempt to obtain a reference to the object it refers to given a base reference and it's reference string by calling the base 
            reference's <see cref="M:Infragistics.WebUI.CalcEngine.RefBase.CreateReference(System.String)">CreateReference</see> method passing it the reference string.  If its successful, it will
            store the newly created reference and use it to dispatch <b>IUltraCalcReference</b> requests against.</p>
            <p class="body">
            <b>Disconnect</b> will simply free the internal reference object after which its <b>IUltraCalcReference</b> methods will deal with a disconnected state.</p>
            <p class="body">
            Virtually all references can be in a disconnected state at some point in their lifetime, therefore the CalcEngine uses <b>UCReference</b> instances to
            connect to all references.  That is, the <b>UltraCalcFormulaCompiler</b>.Compile method creates <b>UCReference</b>s for the all references in the formula string.  The CalcEngine exposes 
            a <b>TopoChange</b> event that objects used to notify it of topological changes.  The <b>TopoChange</b> event passes a reference to the CalcEngine
            that describes the object that changed (e.g. column, row, grid, etc) along with a Create / Delete action argument.</p>
            <p class="body">
            On Delete events, the CalcEngine tracks down all formulas whose left-hand side (LHS) is contained by the disconnected reference and deletes them.
            This cleans up the recalculation network's chain of dirty references (<i>recalc chain</i>), and the ancestor map of any references including 
            subreferences that may exist under the deleted reference.  Thus, column formulas will be deleted when the event's deleted reference is an entire
            grid, or cell references that are on the recalc chain when the deleted reference is a column.  The <see cref="M:Infragistics.WebUI.CalcEngine.RefBase.ContainsReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">ContainsReference</see>
            on the reference that was passed along when the <b>TopoChange</b> event fired is what determines whether the event affects a given reference. Finally,
            all formulas referencing that deleted reference will be recalculated.</p>
            <p class="body">
            On Create events, the CalcEngine will track down all references contained by the created reference and call the Connect method passing in the 
            their formula's <b>BaseReference</b>.  This causes the <b>IUltraCalcReference</b> to reconnect to the underlying reference.  Secondly, each
            re-connected reference's ancestor will be recalculated.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.#ctor(System.String)">
            <summary>
            Reference name constructor.
            </summary>
            <param name="referenceName">Name of reference entered into formula and used to create the underlying <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/>.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:Infragistics.WebUI.CalcEngine.UCReference"/> for a ranged reference.
            </summary>
            <param name="fromName">Name of the start of the range.</param>
            <param name="toName">Name of the end of the range.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.CreateReference(System.String)">
            <summary>
            Create a new reference relative to this reference.
            </summary>
            <param name="reference">The reference string.</param>
            <returns>The new reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.CreateRange(System.String,System.String)">
            <summary>
            Create a Range reference relative to this reference.
            </summary>
            <param name="fromReference">The start of the range, inclusive.</param>
            <param name="toReference">The end of the range, inclusive.</param>
            <returns>A ranged reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.ResolveReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference,Infragistics.WebUI.CalcEngine.ResolveReferenceType)">
            <summary>
            Resolves a specified reference relative to the current reference.
            </summary>
            <param name="reference">The reference to resolve.</param>
            <param name="referenceType">One of the options from <see cref="T:Infragistics.WebUI.CalcEngine.ResolveReferenceType"/>
            dictating how <i>reference</i> should be resolved.</param>
            <returns>The resolved reference.</returns>
            <remarks>
            <p class="body">If this <b>UCReference</b> is a reference to a row,
            and <i>reference</i> is a reference to a column, then the resolved
            reference is the cell reference that exists at the intersection of
            this row and the specified column.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.MarkRelativeIndices(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            For each reference tuple in the current reference that has a relative index, mark the
            corresponding tuple in another reference.
            </summary>
            <param name="reference">Another reference to have its tuples marked that correspond
            to tuples in the current reference having a relative index.</param>
            <remarks>
            <p class="body">If the current <b>UCReference</b> is disconnected, no tuples in
            <i>reference</i> are marked.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.ContainsReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Indicates whether this reference contains a specified reference.
            </summary>
            <param name="reference">The contained candidate.</param>
            <returns>Returns true if <i>reference</i> is contained by this reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.IsSubsetReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Indicates whether a specified reference is a proper subset of this reference.
            </summary>
            <param name="reference">The subset candidate.</param>
            <returns>Returns true if <i>reference</i> is contained by this reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.IsSiblingReference(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Determines whether the given reference is a sibling of this reference.
            </summary>
            <param name="reference">The reference to compare against this one.</param>
            <returns>Returns true if the given <i>reference</i> is a sibling of this reference.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.Infragistics#WebUI#CalcEngine#IUltraCalcReference#GetChildReferences(Infragistics.WebUI.CalcEngine.ChildReferenceType)">
            <summary>
            Gets the child references of the current reference.
            </summary>
            <param name="referenceType">The type of child reference to get, based on the
            options of the <see cref="T:Infragistics.WebUI.CalcEngine.ChildReferenceType"/> enumeration.</param>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.Connect(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Associates the <see cref="T:Infragistics.WebUI.CalcEngine.UCReference"/> with the specified <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/> implementation.
            </summary>
            <param name="reference">New underlying reference implementation for this instance.</param>
            <returns>Returns true if the operation caused a change within the <b>UCReference</b> that represents it has connected to a different reference implementation than before.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.Disconnect">
            <summary>
            Disconnects the <see cref="T:Infragistics.WebUI.CalcEngine.UCReference"/> from the underlying <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/> implementation.
            </summary>
            <returns>Returns true if the operation caused the <b>UCReference</b> to change so that it represents a different reference implementation than it did before.</returns>
        </member>
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.Reconnect(Infragistics.WebUI.CalcEngine.IUltraCalcReference)">
            <summary>
            Disconnects from the previous reference and connects to the specified <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/> implementation.
            </summary>
            <param name="reference">New reference that should be the underlying reference for this instance after <b>Reconnect</b> has completed.</param>
            <returns>Returns true if the operation changes the <b>UCReference</b> into representing a different reference than it had represented before.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Infragistics.WebUI.CalcEngine.UCReference.GetHashCode" -->
        <member name="M:Infragistics.WebUI.CalcEngine.UCReference.Equals(System.Object)">
            <summary>
            Overridden. Indicates equality based on comparing the normalized absolute name of this
            refrences to that of another.
            </summary>
            <param name="obj">An <b>IUltraCalcReference</b> implementation, if <i>obj</i> does not
            implement <i>IUltraCalcReference</i> then it is automatically found to be not equal.</param>
            <returns>Default implementation returns true if the normalized absolute names of this
            reference and the passed in reference match.</returns>
            <remarks>
            <p class="body"><b>UCReference</b> instances are going to be added to a data structure
            that makes use of their <see cref="M:Infragistics.WebUI.CalcEngine.UCReference.GetHashCode"/> and <b>Equals</b> methods. Their normalized
            absolute name must not change throughout the lifetime of this instance. If it changes,
            then the overriding class must override this equality method, <i>and</i> return a hash
            code based on some other immutable property of the instance besides <see cref="P:Infragistics.WebUI.CalcEngine.UCReference.NormalizedAbsoluteName"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.Context">
            <summary>
            Returns a context for the Reference.
            </summary>
            <remarks><p class="body">Returns a meaningful object context for the reference. This could be an UltraGridCell, UltraGridColumn, NamedReference, Control, etc.</p></remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.AbsoluteName">
            <summary>
            Gets the absolute name of the current reference.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.ElementName">
            <summary>
            The unqualified name of this referenced element.
            </summary>
            <remarks>
            <p class="body">Used in constructing the fully qualified
            name by the <see cref="P:Infragistics.WebUI.CalcEngine.UCReference.AbsoluteName"/> property.</p>
            <p class="body">This property is Read Only.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.Value">
            <summary>
            Gets or sets the <see cref="T:Infragistics.WebUI.CalcEngine.UltraCalcValue"/> associated with this <b>UCReference</b>.
            </summary>
            <value>
            Returns the associated <b>UltraCalcValue</b> instance. If this reference does not
            contain any value, or it is disconnected, an <b>UltraCalcErrorValue</b> is returned
            instead.
            </value>
            <remarks>
            <p class="body">Assignments to this property when the <b>UCReference</b> is disconnected
            from the calculation network are not saved.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.Formula">
            <summary>
            Gets the <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcFormula"/> associated with this <b>UCReference</b>.
            </summary>
            <value>
            Returns the associated <b>IUltraCalcFormula</b>. If this reference cannot contain a formula, or it is disconnected, then null
            (Nothing in Visual Basic .NET) is returned instead.
            </value>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.HasRelativeIndex">
            <summary>
            Indicates if the underlying reference has a relative index.
            </summary>
            <remarks>
            <p class="body">Disconnected references have no index, and
            therefore the value of <b>HasRelativeIndex</b> when called
            on a disconnected reference is undefined.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.HasAbsoluteIndex">
            <summary>
            Indicates if the underlying reference has an absolute index.
            </summary>
            <remarks>
            <p class="body">Disconnected references have no index, and
            therefore the value of <b>HasAbsoluteIndex</b> when called
            on a disconnected reference is undefined.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.HasScopeAll">
            <summary>
            Indicates if the underlying reference was constructed with a scope of all.
            </summary>
            <remarks>
            <p class="body">Disconnected references have no scope, and
            therefore the value of <b>HasScopeAll</b> when called on a
            disconnected reference is undefined.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.RecalcDeferred">
            <summary>
            Flag used by the <b>UltraCalcEngine</b> to manage the recalculation network. 
            Denotes the reference is deferred.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.RecalcVisible">
            <summary>
            Flag used by the <b>UltraCalcEngine</b> to manage the recalculation network. 
            Denotes the reference is visible.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.References">
            <summary>
            Return a collection of references if this Reference is enumerable.
            </summary>
            <returns>A Reference collection, or null (Nothing in Visual Basic .NET) if
            this reference is not enumerable.</returns>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.IsEnumerable">
            <summary>
            Returns true if this reference is enumerable.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.IsDataReference">
            <summary>
            Returns true if this reference is a data reference.  A data reference contains a value, such as an <b>UltraGridCell</b>
            or a column footer value.  Many referenced elements, such as an <b>UltraGridColumn</b> or <b>UltraGridBand</b>, do not
            reference a value. Read Only. 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.Parent">
            <summary>
            The Parent reference of this referenced element.  Used to navigate the element hierarchy.  If this
            referenced element is the root element, <b>Parent</b> returns null.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.IsDisposedReference">
            <summary>
            Indicates whether the reference was disposed.  Read Only.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.Reference">
            <summary>
            Returns the underlying reference, or this instance if the object is not connected.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.RootName">
            <summary>
            Returns the root name for this reference.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.CalcEngine.UCReference.IsConnected">
            <summary>
            Indicates if the <b>UCReference</b> is currently connected to an underlying <see cref="T:Infragistics.WebUI.CalcEngine.IUltraCalcReference"/> implementation.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.UltraLicense">
            <summary>
            The license object for Infragistics components and controls
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UltraLicense.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraLicense.ProductInfo">
            <summary>
            Returns the product info object
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraLicense.ComponentName">
            <summary>
            Returns the display name of the component (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraLicense.LicenseKey">
            <summary>
            returns the license key (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.UltraLicenseProvider">
            <summary>
            Base class for licensing
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UltraLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            Overriden to return a beta license object
            </summary>
            <returns>The BetaLicense object</returns>
        </member>
        <member name="T:Infragistics.WebUI.Shared.LicenseStatus">
            <summary>
            An enumerator that describes the status of the license
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.Unchecked">
            <summary>
            The license verification logic hasn't run yet
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.UnableToLocateLicenseAssembly">
            <summary>
            The license file could not be located.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.InsufficientSecurityPermissions">
            <summary>
            Unable to determine license status due to security permission restrictions.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.RegKeyNotFound">
            <summary>
            Couldn't find the necessary registry keys
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.CDKeyInvalid">
            <summary>
            Foound an invalid CDkey
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.BetaExpired">
            <summary>
            The beta period has expired
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.BetaValid">
            <summary>
            The beta period has not expired
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.TrialExpired">
            <summary>
            The trial period has expired
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.ActivationGracePeriodExpired">
            <summary>
            The activation grace period has expired.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.CDKeyValid">
            <summary>
            A valid CDKey was found
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.TrialValid">
            <summary>
            The trial period has not expired
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.ActivationGracePeriodValid">
            <summary>
            The activation grace period has not expired.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.LicenseStatus.Licensed">
            <summary>
            The component is fully licensed
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.ProductType">
            <summary>
            An enumeration that describes the product type.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.ProductType.WinFormsComponent">
            <summary>
            The product is a WinForms component.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.Shared.ProductType.WebFormsComponent">
            <summary>
            The product is a WebForms component.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.UltraProductInfoBase">
            <summary>
            Abstract base class that holds product info.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UltraProductInfoBase.IsKeyValid(System.String)">
            <summary>
            Checks the validaity of the key
            </summary>
            <returns>True if the key is valid</returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfoBase.Expiration">
            <summary>
            Returns the expiration description.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfoBase.RequiresActivation">
            <summary>
            Returns the expiration date.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfoBase.ProductName">
            <summary>
            Returns the product name
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfoBase.Expired">
            <summary>
            Returns true if the license has expired (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfoBase.Status">
            <summary>
            Returns the statuc of the license
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfoBase.Key">
            <summary>
            Returns the Key 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfoBase.CompanyName">
            <summary>
            Returns the company name
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfoBase.UserName">
            <summary>
            Returns the user name
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfoBase.Type">
            <summary>
            Returns the product type
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.BetaProductInfo">
            <summary>
            ProductInfo used when a product is in beta.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Infragistics.WebUI.Shared.BetaProductInfo.#ctor(System.String,System.DateTime)" -->
        <member name="M:Infragistics.WebUI.Shared.BetaProductInfo.#ctor(System.String,System.DateTime,Infragistics.WebUI.Shared.ProductType)">
            <summary>
            Constructor
            </summary>
            <param name="productName"></param>
            <param name="expirationDate"></param>
            <param name="productType"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.BetaProductInfo.IsKeyValid(System.String)">
            <summary>
            Checks the validity of the key
            </summary>
            <returns>True if the key is valid</returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BetaProductInfo.Expiration">
            <summary>
            Returns the expiration description.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BetaProductInfo.RequiresActivation">
            <summary>
            Returns the expiration date.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BetaProductInfo.Status">
            <summary>
            Returns the statuc of the license
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BetaProductInfo.Key">
            <summary>
            Returns the Key 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BetaProductInfo.CompanyName">
            <summary>
            Returns the company name
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BetaProductInfo.UserName">
            <summary>
            Returns the user name
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.BetaProductInfo.Expired">
            <summary>
            Returns true if the license has expired (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.UltraProductInfo">
            <summary>
            ProductInfo used when after a product has been released.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UltraProductInfo.#ctor(System.String,System.String,System.String,System.Guid,System.Boolean,System.Byte,System.Byte)">
            <summary>
            Contructor
            </summary>
            <param name="productName">The product name for the about dialog</param>
            <param name="regKeyProductName">The reg key root product name</param>
            <param name="codePrefix">must be 4 characters long</param>
            <param name="id">the id</param>
            <param name="requiresActivation">True if activation is required.</param>
            <param name="majorVersion">Major version of the product.</param>
            <param name="minorVersion">Minor version of the product.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UltraProductInfo.#ctor(System.String,System.String,System.String,System.Guid,System.Boolean,Infragistics.WebUI.Shared.ProductType,System.Byte,System.Byte)">
            <summary>
            Contructor
            </summary>
            <param name="productName">The product name for the about dialog</param>
            <param name="regKeyProductName">The reg key root product name</param>
            <param name="codePrefix">must be 4 characters long</param>
            <param name="id">the id</param>
            <param name="requiresActivation">True if activation is required.</param>
            <param name="productType">The type of product</param>
            <param name="majorVersion">Major version of the product.</param>
            <param name="minorVersion">Minor version of the product.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UltraProductInfo.IsKeyValid(System.String)">
            <summary>
            Checks the validity of the key
            </summary>
            <returns>True if the key is valid</returns>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UltraProductInfo.GetExpirationDate(System.Int32)">
            <summary>
            Returns the expiration date based on the number of usage days remaining.
            </summary>
            <param name="usageDaysRemaining">Number of usage days remaining.</param>
            <returns>Expiration date for the product.</returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfo.Expiration">
            <summary>
            Returns the expiration description.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfo.RequiresActivation">
            <summary>
            Returns the expiration date.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfo.Status">
            <summary>
            Returns the statuc of the license
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfo.Key">
            <summary>
            Returns the Key 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfo.CompanyName">
            <summary>
            Returns the company name
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfo.UserName">
            <summary>
            Returns the user name
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UltraProductInfo.Expired">
            <summary>
            Returns true if the license has expired (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.UnlicensedProductInfo">
            <summary>
            ProductInfo used for non-licensed products.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UnlicensedProductInfo.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="productName">The product name to display in the about dialog</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UnlicensedProductInfo.#ctor(System.String,Infragistics.WebUI.Shared.ProductType)">
            <summary>
            Constructor
            </summary>
            <param name="productName">The product name to display in the about dialog</param>
            <param name="productType">The type of product.</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.UnlicensedProductInfo.IsKeyValid(System.String)">
            <summary>
            Checks the validity of the key
            </summary>
            <returns>True if the key is valid</returns>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UnlicensedProductInfo.Expiration">
            <summary>
            Returns the expiration.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UnlicensedProductInfo.RequiresActivation">
            <summary>
            Returns the expiration date.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UnlicensedProductInfo.Status">
            <summary>
            Returns the statuc of the license
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UnlicensedProductInfo.Key">
            <summary>
            Returns the Key 
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UnlicensedProductInfo.CompanyName">
            <summary>
            Returns the company name
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UnlicensedProductInfo.UserName">
            <summary>
            Returns the user name
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.UnlicensedProductInfo.Expired">
            <summary>
            Returns true if the license has expired (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.Shared.WebComponentBase">
            <summary>
            Summary description for WebComponentBase.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebComponentBase.ToString">
            <summary>
            Returns a string representation of an <see cref="!:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> object.
            </summary>
            <remarks>
            <p class="body">Some objects do not have values that can be converted to a string. In these cases, an empty string is returned.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebComponentBase.Reset">
            <summary>
            Resets all properties of the <see cref="!:Infragistics.WebUI.UltraWebGrid.ClientSideEvents"/> class to their default values.
            </summary>
            <remarks>
            <p class="body">Invoke this method to reset all properties of the ClientSideEvents class to their default values.</p>
            <p class="body">The "ShouldSerialize" properties of the ClientSideEvents will return False until set again.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebComponentBase.ViewState">
            <summary>
            Gets a dictionary of state information (StateBag) that allows you to save and restore the view state of a server control across multiple requests for the same page.
            </summary>
            <remarks>
            <p class="body">A server control's view state is the accumulation of all its property values. In order to preserve these values across HTTP requests, ASP.NET server controls use this property, which is an instance of the StateBag class, to store the property values. The values are then passed as a variable to an HTML hidden input element when subsequent requests are processed. For more information about saving server control view state, see <a href="ms-help://MS.NETFrameworkSDK/cpguidenf/html/cpconmantainingstateincontrol.htm">Maintaining State in a Control</a>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.WebPanelBase">
            <summary>
            The EnhancedTemplatedControlBase is the base class used for Infragistics Elements which need to provide improved Template support.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebPanelBase.#ctor(System.Web.UI.HtmlTextWriterTag)">
            <summary>
            Creates a new instance, using the specified Tag.
            </summary>
            <param name="tag"></param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebPanelBase.#ctor">
            <summary>
            Creates a new instance of the control.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebPanelBase.OnInit(System.EventArgs)">
            <summary>
            Overridden to force the Template to be created during the Init phase of the control lifecycle.
            </summary>
            <param name="e">An EventArgs object, providing additional information about the event.</param>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.WebPanelBase.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            The RenderContents method is responsible for rendering the Controls collection.  This method can be overridden to provide a custom rendering of the Container area.
            </summary>
            <param name="writer">The HtmlTextWriter provided by the Page which is being rendered</param>
        </member>
        <member name="P:Infragistics.WebUI.WebControls.WebPanelBase.Template">
            <summary>
            The Template property is used for DesignTime support.  Controls added to this control at DesignTime, are done so through the Template.
            </summary>
        </member>
        <member name="T:Infragistics.WebUI.WebControls.ClientMachine">
            <summary>
            Information about browser.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.IsUpLevel">
            <summary>
            Browser is upper: major version is higher than 4
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.IsIE">
            <summary>
            Browser is IE5
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.IsNetscape">
            <summary>
            Browser is Netscape
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.IsFirefox">
            <summary>
            Browser is Netscape-Firefox
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.IsMac">
            <summary>
            It is Mac
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.IsXP">
            <summary>
            It is WindowsXP
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.IsSafari">
            <summary>
            It is Safari (Netscape on Mac)
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.IsIE4">
            <summary>
            Browser is IE4
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.NetscapeVersion">
            <summary>
            Version of Netscape as 2 digit number. Examples: 62==Netscape6.2, 70==Netscape7.0, 71==Netscape7.1, etc.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.MajorVersion">
            <summary>
            Major version of browser. Note: that value contains meaningful information only for IE.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.MinorVersion">
            <summary>
            Minor version of browser. Note: that value contains meaningful information only for IE.
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.IsOpera">
            <summary>
            Browser is Opera
            </summary>
        </member>
        <member name="F:Infragistics.WebUI.WebControls.ClientMachine.IsReady">
            <summary>
            Values were filled
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.WebControls.ClientMachine.FillValues(System.Web.UI.Control)">
            <summary>
            Fill values for particular machine and browser on client
            </summary>
            <param name="control">Reference to WebControl</param>
            <param name="design">True: if it is design time for sure, otherwise it should be false</param>
            <returns>True: desing time or failure</returns>
        </member>
        <member name="T:Infragistics.WebUI.Shared.WebDataObject">
            <summary>
            Implements behavior and functionality for objects that are maintained within a data store.
            This object can also keep track of the properties which have been changed.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebDataObject.#ctor">
            <summary>
            Create WebDataObject 
            </summary>
            <param name="trackViewState"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebDataObject.#ctor(System.Boolean)">
            <summary>
            Create WebDataObject with required value of isTrackingViewState
            </summary>
            <param name="trackViewState">Indicates whether or not ViewState Tracking should be enabled</param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebDataObject.#ctor(System.String)">
            <summary>
            Creates a WebDataObject and initializing it to the given key value.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebDataObject.OnItemBound">
            <summary>
            Called when an object has been bound to a datastore
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebDataObject.Owner">
            <summary>
            The primary collection to which this object belongs.
            </summary> 
            <remarks>
            <p class="body">A <see cref="T:Infragistics.WebUI.Shared.KeyedObjectBase"/> can belong to only
            one <see cref="T:Infragistics.WebUI.Shared.KeyedObjectCollectionBase"/> at a time, this is
            their <i>primary collection</i>.  Inheritors subclassing <b>KeyedObjectBase</b>
            may use this property in exposing their own subclass of <b>KeyedObjectCollectionBase</b>
            offering additional capabilities.</p>
            <p class="body">Customarily, the base class implementations of the
            <see cref="!:OnAddedToCollection"/> and <see cref="!:OnRemovedFromCollection"/>
            methods are responsible for detaching this object from its old collection,
            and attaching it to its new collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebDataObject.DataKey">
            <summary>
            Gets/sets unique key object used in data binding. For keys that are of type string, the Key property can also be used.
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebDataObject.Key">
            <summary>
            Gets/sets unique key string used in data binding. For keys that are not of type string, use the DataKey property.
            </summary>
            
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebDataObject.Timestamp">
            <summary>
            Data store timestamp.
            </summary>
            <value>A timestamp whose representation is specific to the particular
            underlying data store platform.</value>
            <remarks>
            <p class="body">Used to detect concurrency violations when a stale object
            is used by an add or update operation. Not intended to be accessed directly
            by the application.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.WebUI.Shared.WebDataObjectsCollection">
            <summary>
            Summary description for WebDataObjectsCollection.
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsEnumeratorBase.#ctor(Infragistics.WebUI.Shared.WebObjectsCollectionBase)">
            <summary>
            Constructor 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsEnumeratorBase.MoveNext">
            <summary>
            Implements the IEnumerator.MoveNext method 
            </summary>
        </member>
        <member name="M:Infragistics.WebUI.Shared.WebObjectsEnumeratorBase.Reset">
            <summary>
            Implements the IEnumerator.Reset method. Sets the position to
            before the first item in the collection
            </summary>
        </member>
        <member name="P:Infragistics.WebUI.Shared.WebObjectsEnumeratorBase.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current object being enumerated
            </summary>
        </member>
    </members>
</doc>
